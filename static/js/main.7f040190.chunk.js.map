{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/backingUtil.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternAdjust.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/preview/previewTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MINOR_SCALE_LIST","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","hasError","divCount","Array","fill","table","channels","i","length","j","structIndex","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","rootIndex","map","item","interval","bpm","backing","pitchIndexList","chordTime","soundName","Math","floor","playHarmony","startTimeList","total","div","normal","rate","isDot","div3","timingAdj","timing","startTime","sustainTime","gain","velAdj","setTimeout","state","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","minute","beatLen","head","tail","getTotalLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","BackingUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","keyIndex","instrument","soundfontPlayer","play","duration","soundFullName","alert","stopPreview","sampler","releaseAll","tune","adjustScrollX","previewHarmony","start","cacheList","melody","elementCacheList","chordList","init","detail","cache","element","pastSecond","pitchList","getPitchListFromVoicing","playBacking","previewCurHarmony","curChord","tableMouse","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","HarmonizeUtil","firstTime","update","score","setScoreState","focusIndex","distIndex","clearTimeout","system","setReserveTasks","sectionCacheList","scale","beatSignature","prevBeat","totalBeat","prevMinute","totalMinute","sectionNo","sectionBeatSum","curSecond","pos","curPos","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","beatRate","getBeatRate","bar","curSustain","reffers","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","data","fileHandle","a","createWritable","writable","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","includes","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","mode","dataHistory","add","scaleIndexies","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","updateCurChord","moveDistFocus","beatWidth","searchedChord","width","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","pitch","time","isSolo","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","incrementVel","after","deleteColumn","changeLayer","testBacking","checkError","this","DataHistory","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","distMode","sustainMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","scaleIndex","getScoreData","ManageTab","file","setFile","tabIndex","useMemo","modified","tempo","section","toString","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","getStringFromDate","Date","lastModified","sectionNum","chordNum","last","fileInfo","scoreInfo","setData","_Wrap","_Left","_Link","builder","_Right","_InfoDiv","_FileInfoDiv","isEnable","_TitleLabel","_Recored","_ItemnLabel","_ItemnValue","_ScoreInfoDiv","_ButtonsDiv","_Button","showOpenFilePicker","text","fileContents","FILE_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","chordRoot","prevCache","isError","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","val","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ScoreElement","wrapRef","useRef","bodyRef","wrap","current","body","isFocus","isRange","isSameSection","chordDetail","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","NoteKeyDown","e","config","isElement","Number","NoteBasicInput","signal","backingEditorInput","NoteKeySwitch","isPress","onChange","min","max","step","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_Minute","_MinuteItem","isReverse","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","split","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","sustain","adjust","bean","height","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternAdjust","_Rocord","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternVelocity","vel","PatternBuilder","useTotalLen","isLenOverError","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","_Footer","ChannelItem","_Option","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","CHANNEL_MAX","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","isSelected","chordIndex","_VoicingItem","isOver","soundfont","_VoicingLane","relationJsxList","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","_ModeItem","HarmonizeTab","focus","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","_Total","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","scroll","clientWidth","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","EditTab","switchMode","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","_SECTIONS","PIT_HEIGTH","RATE_WIDTH","PreviewTab","areaRef","rateRef","past","setPast","timerId","setTimerId","isPlay","pit","sus","startList","normalList","areaWidth","recordJsxList","getTime","setInterval","_MainFixed","_RateFrame","_RateValue","_MainScroll","_HarmonyBox","_Line","HEADER_WIDTH","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f040190.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M2', 'M3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'M2', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport { NOTES_1BAR_WIDTH } from \"./systemConst\";\r\nimport { IntervalRelationProps, KEY12_SHARP_LIST, SymbolParams } from \"./theoryUtils\";\r\n\r\n\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (store: Store, reserveTasks: NodeJS.Timeout[], bpm: number, backing: ChordBacking, pitchIndexList: number[], chordTime: number) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime, 5);\r\n            });\r\n        } else {\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timingAdj = notes.status.timing * (60 / bpm * 1/32);\r\n                    const startTime = startTimeList[notes.x] + timingAdj;\r\n                    const sustainTime = chordTime - startTime;\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if(gain < 1) gain = 1;\r\n                    if(gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime, gain);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        return (chordInfo.beatLen + minute.head + minute.tail);\r\n    }\r\n\r\n    export const getTotalLenFromDivs = (divs: BackingState.NoteDiv[]) => {\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getTotalLenFromDivs(layer.noteDivList);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if(cell != null) {\r\n                        if(checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if(backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if(right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n        \r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\nimport BackingUtil from \"./backingUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, {gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                update();\r\n                // dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    // state.focusIndex = state.lastFocus;\r\n    // state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n\r\n                    // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    // const div = pickingDelay / pitchList.length;\r\n\r\n                    // pitchList.forEach((index, j) => {\r\n                    //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //     const octave = Math.floor(index / 12);\r\n                    //     const soundFullName = soundName + octave;\r\n                    //     playPiano(soundFullName, store, chordTime);\r\n                    // });\r\n\r\n                    BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n                    // store.melodyState.mouseState.curChord = element;\r\n                    // update();\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.tableMouse.curChord;\r\n    const reserveTasks = store.reserveTasks;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const backing = detail.backing;\r\n        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n        const chordTime = 60 / init.bpm * len;\r\n\r\n        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n        reserveTasks.push(setTimeout(() => {\r\n            state.isPreview = false;\r\n            dispatcher.tune.setState(state);\r\n        }, chordTime * 1000));\r\n        state.isPreview = true;\r\n        dispatcher.tune.setState(state);\r\n\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../redux/store/scoreState\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport { getBeatRate, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / cache.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / cache.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let pos = 0;\r\n        let curPos = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n\r\n            pastSecond += curSecond;\r\n            pos += curPos;\r\n            switch (type) {\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        prevBeat = totalBeat;\r\n                        prevMinute = totalMinute;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n\r\n                    curPos = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                    // 時間の計算\r\n                    curSecond = 60000 / bpm * (detail.beatLen + detail.minute.head + detail.minute.head);\r\n                }\r\n                    break;\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        case 'modulate': {\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        case 'tempo': {\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        case 'beat': {\r\n                            beatSignature = detail.beatSignature;\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.beatSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                curSustain: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                pos,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, getChordRoot, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport HarmonizeUtil from \"../../utils/harmonizeUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    await writable.write(JSON.stringify(data));\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        await writable.write(JSON.stringify(data));\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? DIATONIC_MAJOR_SCALE_LIST : DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = notesList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            if (focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = start - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.distIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n                this.tune.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex + pastList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: BackingState.NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory()\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        sustainMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            sustainMode: 'f',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null, hasError: false } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\n//日付から文字列に変換する関数\r\nconst getStringFromDate = (date: Date) => {\r\n\r\n    const year_str = date.getFullYear().toString();\r\n    //月だけ+1すること\r\n    const month_str = (1 + date.getMonth()).toString();\r\n    const day_str = date.getDate().toString();\r\n    const hour_str = date.getHours().toString();\r\n    const minute_str = date.getMinutes().toString();\r\n    const second_str = date.getSeconds().toString();\r\n\r\n    let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n    format_str = format_str.replace(/YYYY/g, year_str);\r\n    format_str = format_str.replace(/MM/g, month_str);\r\n    format_str = format_str.replace(/DD/g, day_str);\r\n    format_str = format_str.replace(/hh/g, hour_str);\r\n    format_str = format_str.replace(/mm/g, minute_str);\r\n    format_str = format_str.replace(/ss/g, second_str);\r\n\r\n    return format_str;\r\n};\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.curSustain})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                <_InfoDiv>\r\n                    <_FileInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>FILE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>name</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.name}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>size</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.size}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>modified</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.modified}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_FileInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>key</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.key}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>tempo</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.tempo}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>rate</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.rate}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>section</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.section}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>chord</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.chord}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>bar</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.bar}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>time</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.time}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>notes</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.notes}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_ScoreInfoDiv>\r\n                </_InfoDiv>\r\n                <_ButtonsDiv>\r\n                    {/* <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button> */}\r\n\r\n                    <_Button onClick={() => {\r\n\r\n                        const options = {\r\n                            types: [\r\n                                {\r\n                                    accept: {\r\n                                        'text/plain': ['.lcrs'],\r\n                                    },\r\n                                },\r\n                            ],\r\n                        };\r\n                        if (fileHandle != null) {\r\n\r\n                            (async () => {\r\n                                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                const writable = await fileHandle.createWritable();\r\n                                //テキストデータの書き込み\r\n                                await writable.write(JSON.stringify(data));\r\n                                //ファイルを閉じる\r\n                                await writable.close();\r\n                                store.scoreState.fileHandle = fileHandle;\r\n                                dispatcher.score.setScoreState({ ...store.scoreState });\r\n                                const file = await fileHandle.getFile();\r\n                                setFile(file);\r\n                                alert('saved successfully!');\r\n                            })();\r\n                        } else {\r\n                            window.showSaveFilePicker(options).then((handle) => {\r\n                                (async () => {\r\n                                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                    const writable = await handle.createWritable();\r\n                                    //テキストデータの書き込み\r\n                                    await writable.write(JSON.stringify(data));\r\n                                    //ファイルを閉じる\r\n                                    await writable.close();\r\n                                    store.scoreState.fileHandle = handle;\r\n                                    dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                                    const file = await handle.getFile();\r\n                                    setFile(file);\r\n                                })();\r\n                            }).catch(() => {\r\n                                console.log('キャンセルされました');\r\n                            });\r\n                        }\r\n                    }}>Save</_Button>\r\n                    <_Button onClick={() => {\r\n                        (async () => {\r\n                            const [fileHandle] = await window.showOpenFilePicker();\r\n                            const file = await fileHandle.getFile();\r\n                            const fileContents = await file.text();\r\n                            // console.log(fileContents);\r\n                            store.scoreState.fileHandle = fileHandle;\r\n                            setFile(file);\r\n                            store.scoreState.focusIndex = 2;\r\n                            store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                            dispatcher.score.setScoreState({ ...store.scoreState });\r\n                            // dispatcher.score.setScoreTabIndex(1);\r\n                            dispatcher.score.setScoreData(JSON.parse(fileContents));\r\n                        })();\r\n                    }}>Load</_Button>\r\n                    <_Button onClick={() => {\r\n                        store.scoreState.fileHandle = null;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n                        // キャッシュの更新\r\n                        store.scoreData = data;\r\n                        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n                        setFile(null);\r\n                    }}>Disconnect</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    /* background-color: #e98c8c; */\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst FILE_INFO_HEIGHT = 160;\r\n\r\nconst _FileInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${FILE_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${FILE_INFO_HEIGHT + 16}px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 160px;\r\n    background-color: #8098a3;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.curSustain !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.curSustain === 0 ? <>&nbsp;</> : cache.curSustain}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter as DetailAlter } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { NoteKeySwitch } from \"../../../../../../redux/store/scoreState\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    keySwitch: NoteKeySwitch;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n    const keySwitch = props.keySwitch;\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = cache.scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES : DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.sustainMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            cache.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            keySwitch.sustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    background-color: #7c89a1;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin: 2px 0 0 4px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    background-color: #a8c7a8;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ElementCache;\r\n    curCache: ElementCache;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    const isInactive = !(isSameSection || chordList[state.focusIndex].type === 'init');\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={isInactive}\r\n            isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex] + (cache.scale === 'major' ? '' : 'm')}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isRange={isRange}\r\n                    isInactive={isInactive}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        if (!state.keySwitch.distMode) {\r\n                            state.focusIndex = props.index;\r\n                            state.distIndex = state.focusIndex;\r\n                        } else {\r\n                            state.distIndex = props.index;\r\n                        }\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord\r\n                                detail={detail}\r\n                                isCurrent={isFocus}\r\n                                keyIndex={cache.keyIndex}\r\n                                keySwitch={state.keySwitch}\r\n                            />);\r\n                        }\r\n                        case 'alter': {\r\n                            const detail = element.detail as DetailAlter;\r\n                            return (<ElementDetailAlter detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'alter' ? (\r\n                            <CalcAlter\r\n                                detail={element.detail as DetailAlter}\r\n                                prevCache={state.elementCacheList[props.index - 1]}\r\n                                curCache={cache}\r\n                            />\r\n                        ) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebf1e2;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4badd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        background-color: #e8ff9549;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #e8f3ab9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            dispatcher.score.saveFile();\r\n                        }\r\n                        break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -0.25);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 0.25);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -0.25);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 0.25);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.sustainMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (!keySwitch.sustainMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                }\r\n                if (pattern.channelIndex === -1) {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.incrementVel(1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.incrementVel(-1);\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addPatternColumn();\r\n                        }\r\n                            break;\r\n                        case 'w': {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                            break;\r\n                        case '1': {\r\n                            dispatcher.backing.setCurrentDivRate(16);\r\n                        }\r\n                            break;\r\n                        case '2': {\r\n                            dispatcher.backing.setCurrentDivRate(8);\r\n                        }\r\n                            break;\r\n                        case '3': {\r\n                            dispatcher.backing.setCurrentDivRate(4);\r\n                        }\r\n                            break;\r\n                        case '4': {\r\n                            dispatcher.backing.setCurrentDivRate(2);\r\n                        }\r\n                            break;\r\n                        case '5': {\r\n                            dispatcher.backing.setCurrentDivRate(1);\r\n                        }\r\n                            break;\r\n                        case '.': {\r\n                            dispatcher.backing.toggleCurrentDivHalf();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            dispatcher.backing.deleteColumn();\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = 0;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.backing.mappingEditorToScore();\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                const pattern = state.pattern as BackingState.Pattern;\r\n                const layer = pattern.layers[pattern.layerIndex];\r\n                const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                if (cell != null) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            cell.velAdj++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            cell.velAdj--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            cell.timing--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            cell.timing++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat Length'}</_CategoryLabel>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute Head'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_CategoryLabel>{'Minute Tail'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d12121b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #d1d1d140;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #d12121b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }, 30, 220, 1)}\r\n            {/* <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap> */}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        ['', 1, 2, 3, 4, 5, 6, 7, 8, 9].forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.curSustain + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        if (nextIndex < cacheList.length - 1) {\r\n            const cache = cacheList[nextIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            nextBeatJsx = (\r\n                <_Next sustain={chord.beatLen}>Next</_Next>\r\n            );\r\n            nextMinuteJsx = (\r\n                <_Next sustain={sustain} />\r\n            );\r\n\r\n            add(sustain + 0.25, cache);\r\n        }\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(146, 152, 211);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(214, 118, 118);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(149, 187, 142);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 10px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #c7c7c7;\r\n        border: solid 1px #a1a1a1;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4e4e4;\r\n        border: solid 1px #7c7c7c;\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternAdjust = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            cell == null ? <></> : (<>\r\n                <_Rocord>\r\n                    <_Label>timing</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n                <_Rocord>\r\n                    <_Label>velocity</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternAdjust;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Rocord = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(50% - 2px);\r\n    margin: 1px 0;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 1px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 2px);\r\n    width: 80px;\r\n    background-color: #868686;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 600;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 6px 0 0 10px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { ElementCache } from \"../../../../redux/store/scoreState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternAdjust from \"./patternAdjust\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getTotalLenFromDivs(divs);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < Math.floor(useTotalLen / 0.25) + 1; i++) {\r\n        const pos = i;\r\n        let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n        switch (true) {\r\n            case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n            case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n            case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={bean.width}\r\n                height={bean.height}\r\n                color={bean.color}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                <PatternVelocity /> :\r\n                <PatternAdjust/>\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${NOTES_1BAR_WIDTH / 16}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < 12} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice(); \r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n    let total = 0;\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n\r\n    const relationJsxList: JSX.Element[] = [];\r\n    symbol.structs.forEach((struct, i) => {\r\n        const interval = IntervalRelationProps[struct];\r\n        const chordIndex = (+ interval) % 12;\r\n        relationJsxList.push(\r\n            <_Relation key={i}>{struct} [{KEY12_SHARP_LIST[chordIndex]}]</_Relation>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    {relationJsxList}\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure2 from \"./measure/harmMeasure2\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.distIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.tune.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { getNormalizeLenFromNotes, previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const width = beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony, stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const isSingle = state.focusIndex === state.distIndex;\r\n        // const notesList = store.scoreData.notesList;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.tune.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.tune.undo(); break;\r\n                    case 'y': dispatcher.tune.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(false);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(true);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.tune.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.distIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 50;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                if (notesRight - scroll < 0 ||\r\n                    notesLeft - scroll > tableRef.current.clientWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={() => {\r\n                            console.log('leave!');\r\n                            if (mouse.notesState.index !== -1) {\r\n                                mouse.notesState.index = -1;\r\n                                mouse.notesState.isResize = false;\r\n                                mouse.notesState.side = 'normal';\r\n                            }\r\n                            mouse.mouseMeasurePos = -1;\r\n                            mouse.mousePitchIndex = -1;\r\n                            update();\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { getSymbolFromKey, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\n\r\n\r\n\r\nconst HEADER_WIDTH = 100;\r\nconst FOOTER_WIDTH = 50;\r\n\r\nconst BEAT_RATE = 50;\r\nconst PIT_HEIGTH = 10;\r\nconst START_LINE = 200;\r\nconst RATE_WIDTH = 500;\r\n\r\nconst PreviewTab = (props: {\r\n    data: ScoreData;\r\n}) => {\r\n\r\n    const chordList = props.data.chordList;\r\n    const notesList = props.data.notesList;\r\n\r\n    const areaRef = useRef<null | HTMLDivElement>(null);\r\n    const rateRef = useRef<null | HTMLDivElement>(null);\r\n    const [past, setPast] = useState(0);\r\n    const [timerId, setTimerId] = useState<null | NodeJS.Timeout>(null);\r\n\r\n\r\n    const isPlay = timerId != null;\r\n\r\n    const [jsxList, totalLen, bpm, areaWidth] = useMemo(() => {\r\n\r\n        const jsxList: JSX.Element[] = [];\r\n        const add = (pos: number, len: number, pit: number, isRight: boolean) => {\r\n            const isActive = past >= pos && past <= pos + len;\r\n            jsxList.push(<_Notes key={jsxList.length}\r\n                pos={pos}\r\n                sus={len}\r\n                pit={pit}\r\n                isRight={isRight}\r\n                isActive={isActive}\r\n            />);\r\n        }\r\n        const init = chordList[0].detail as DetailInit;\r\n        let curPos = 0;\r\n        for (let i = 0; i < chordList.length; i++) {\r\n            const chord = chordList[i];\r\n            switch (chord.type) {\r\n                case 'chord': {\r\n                    const detail = chord.detail as DetailChord;\r\n                    const backing = detail.backing;\r\n                    if (detail.root != null) {\r\n                        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                        const symbol = getSymbolFromKey(detail.symbolKey);\r\n                        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n                        if (backing.pattern == null) {\r\n                            pitchList.forEach((index) => {\r\n                                // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                // const octave = Math.floor(index / 12);\r\n                                const pit = 87 - index;\r\n                                add(curPos, len, pit, false);\r\n                            });\r\n                        } else {\r\n                            const pattern = backing.pattern;\r\n                            pattern.layers.forEach((layer, layerIndex) => {\r\n                                const startList: number[] = [];\r\n                                const normalList: number[] = [];\r\n                                let total = 0;\r\n                                layer.divs.forEach(div => {\r\n                                    startList.push(total);\r\n                                    let normal = 4 / div.rate;\r\n                                    if (div.isDot) normal *= 1.5;\r\n                                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                                    normalList.push(normal);\r\n                                    total += normal;\r\n                                });\r\n                                layer.notesList.forEach((notes) => {\r\n\r\n                                    const timingAdj = notes.status.timing * (1 / 32);\r\n                                    const start = curPos + startList[notes.x] + timingAdj;\r\n                                    const sustain = normalList[notes.x];\r\n\r\n                                    const index = pitchList[notes.y];\r\n\r\n                                    const pit = 87 - index;\r\n\r\n                                    // if (!isPlay || (start <= past + 15 && start + sustain > past)) {\r\n                                        add(start, sustain, pit, layerIndex === 1);\r\n                                    // }\r\n                                    // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                    // const octave = Math.floor(index / 12);\r\n                                    // const soundFullName = soundName + octave;\r\n\r\n                                });\r\n                            });\r\n                        }\r\n                        curPos += len;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n        const areaWidth = areaRef.current == null ? 0 : areaRef.current.clientWidth;\r\n        return [jsxList, curPos, init.bpm, areaWidth];\r\n    }, [props.data, past, isPlay]);\r\n\r\n    // const recordJsxList = useMemo(() => {\r\n    //     return jsxList;\r\n    // }, []);\r\n    const recordJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 88; i++) {\r\n        recordJsxList.push(\r\n            <_Record key={i} pit={i} isScale={i % 2 == 0}></_Record>\r\n        );\r\n    }\r\n\r\n\r\n    const setRate = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rateRef.current == null || timerId != null) return;\r\n        const rect = rateRef.current.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        console.log(x);\r\n        setPast(totalLen * x / RATE_WIDTH);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header onClick={() => {\r\n                if (timerId == null) {\r\n                    const start = new Date().getTime();\r\n                    const id = setInterval(() => {\r\n                        const time = new Date().getTime() - start;\r\n                        setPast(past + time * bpm / 60000);\r\n                        // console.log(past);\r\n                    }, 50);\r\n                    setTimerId(id);\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    setTimerId(null);\r\n                }\r\n            }}></_Header>\r\n            <_Main>\r\n                <_MainFixed>\r\n                    <_RateFrame pos={areaWidth / 2 - RATE_WIDTH / 2} ref={rateRef}\r\n                        onClick={setRate}>\r\n                        <_RateValue value={totalLen === 0 ? 0 : RATE_WIDTH * (past / totalLen)} />\r\n                    </_RateFrame>\r\n                </_MainFixed>\r\n                <_MainScroll ref={areaRef}>\r\n                    <_HarmonyBox pos={past} width={totalLen} isPlay={isPlay}>\r\n                        {recordJsxList}\r\n                        {jsxList}\r\n                    </_HarmonyBox>\r\n                    <_Line pos={START_LINE} />\r\n                </_MainScroll>\r\n            </_Main>\r\n            <_Footer></_Footer>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2d3246;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #95a5ca;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH + FOOTER_WIDTH}px);\r\n    /* background-color: #2d3246; */\r\n    text-align: left;\r\n`;\r\nconst _MainScroll = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`;\r\nconst _MainFixed = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _HarmonyBox = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isPlay: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => START_LINE - props.pos * BEAT_RATE}px;\r\n    width: ${props => props.width * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: #ffffffb5;\r\n    ${props => props.isPlay ? '' : css`\r\n        transition: left 0.5s;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isScale: boolean;\r\n    pit: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    // position: absolute;\r\n    width: 100%;\r\n    height: ${PIT_HEIGTH}px;\r\n    // background-color: ${props => props.isScale ? '#fffffff9f' : '#00ff4cf8f'};\r\n    /* background-color: #0026fc11; */\r\n    ${props => props.isScale ? '' : css`\r\n        background-color: #ffffff08;\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    sus: number;\r\n    pit: number;\r\n    isRight: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_RATE}px;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    width: ${props => props.sus * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH}px;\r\n    background-color: ${props => !props.isRight ? '#ad0000e0' : '#002ca7df'};\r\n    opacity: 0.3;\r\n    ${props => !props.isActive ? '' : css<{\r\n    isRight: boolean;\r\n}>`\r\n        opacity: 1;\r\n        background-color: ${props => !props.isRight ? '#ff4242df' : '#4677ffdf'};\r\n        box-shadow: 0 0 14px 0 #ffffff46;\r\n    `}\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos - 1}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: white;\r\n    width: 3px;\r\n`;\r\n\r\nconst _RateFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    left: ${props => props.pos}px;\r\n    bottom: 20px;\r\n    width: ${RATE_WIDTH}px;\r\n    height: 25px;\r\n    background-color: #000000;\r\n    border: solid 1px #000;\r\n    box-sizing: border-box;\r\n    opacity: 0.7;\r\n`;\r\nconst _RateValue = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: ${props => props.value}px;\r\n    height: 100%;\r\n    background-color: #afe7e9;\r\n`;\r\n\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #5a5e72;\r\n    text-align: left;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    background-color: #ffffff1f;\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}