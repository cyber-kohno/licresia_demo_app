{"version":3,"sources":["system/redux/reducer.tsx","system/utils/soundUtils.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/toneUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/utils/systemConst.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/manageTab.tsx","system/base/design/styles.tsx","system/base/components/button/executableButton.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/pitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","Dispatcher","dispatch","system","setState","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","score","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","state","setScoreData","moveElement","isNext","sub","chordList","focusIndex","moveSection","curSectionIndex","elementCacheList","sectionNo","sectionCacheList","curSectionInfo","curElementType","length","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","detail","includes","incrementBeatLen","slice","beatLen","incrementMinuteVal","pos","isTail","value","target","minute","tail","head","incrementMinuteValRelation","nearIndex","i","addChordElement","element","initialBeat","on","backing","voicingList","pattern","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","cache","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","setTimeout","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","struct","octave","getDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","tune","setNotesList","notesList","setInstrument","soundfontPlayer","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isHalf","isDiv3","table","velocityList","Array","col","j","isExist","voicing","applyBackingToChord","getChannels","channels","structIndex","addPatternColumn","layers","layerIndex","lenIndex","movePatternColumn","isRight","layer","tempIndex","setCurrentDivRate","toggleCurrentDivHalf","cur","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","quantize","sampler","Sampler","toDestination","harmonize","melody","measure","pitch","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","SysModalDialog","useContext","GlobalContext","isDisplay","dispatcher","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","map","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","ManageTab","_Wrap","_Link","keyIndex","bpm","scale","timeSignature","fixed","_Object","ExecutableButton","size","get","height","fontSize","backgroundColor","callback","labelText","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","item","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","Math","round","pastSecond","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","floor","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","e","config","curType","releaseAll","rootIndex","interval","soundFullName","triggerAttack","playChord","Number","NoteKeySwitch","isPress","isElement","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","JSON","stringify","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","onChange","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","cacheList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","curIndex","prevIndex","nextIndex","temp","add","sustain","adjust","bean","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternLength","itemJsxList","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","_Notes","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","PatternChannel","channelJsxList","channel","soundIndex","PatternStatus","update","createItem","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","_List","select","option","PatternFrame","isUsePattern","_UseSwitch","_Button","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","tempChannels","_VoicingLane","_Left","_Relation","_Right","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","init","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","TuneKeySwitch","MelodyKeyDown","MelodyTimeline","measureRef","chordRef","barLength","beatWidth","curChord","timelineLength","mouseMeasurePos","measureJsxList","barJsx","_Scale","isHead","chordJsxList","_ChordItem","_ChordWrap","_MousePos","left","PitchList","pitchItemJsxList","structIndexList","soundName","getOctaveName","_PitchItem","isStruct","mousePitchIndex","instrument","stop","play","duration","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","QuantizeSwitch","MelodyHeader","_QuantizeSelector","_InstrumentSelector","MelodyFrame","tableRef","pitchRef","isPut","setPut","x","y","lock","setLock","setWidth","nextLeft","setNextLeft","side","isResize","notesState","setNotesState","setCurChord","setMousePitchIndex","setMouseMeasurePos","Soundfont","AudioContext","gain","release","then","soundFontPlayer","notesJsxList","notes","_NotesWrap","posX","isEdit","rect","getBoundingClientRect","clientY","scrollTop","top","pitchIndex","_Timeline","_Pitch","_TableWrap","onScroll","scrollLeft","scrollTo","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","button","clientX","next","onMouseMove","normalX","searchedChord","right","onMouseUp","sort","a","b","_Test","EditTab","switchMode","_Mode","_ModeItem","_Buttons","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","clearTimeout","fadeIn","keyframes","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","span","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eecf65df.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.tuneState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../utils/soundUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { ChordElement, DetailChange, DetailChord, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { TuneState } from \"../store/tuneState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteRate } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/toneUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (key: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[key];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: TuneState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: (detail.root as DegreeProps).index\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isHalf: false, isDiv3: false }],\r\n                table: [['-']],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChord: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const table = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (table != null) {\r\n                for (let i = 0; i < table.length; i++) {\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        if (table[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        getChannels: (table: boolean[][]): ChannelParam[] => {\r\n            const channels: ChannelParam[] = [];\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        channels.push({ octave: i, structIndex: j });\r\n                    }\r\n                }\r\n            }\r\n            if (channels.length === 0) {\r\n                channels.push({ octave: -1, structIndex: 0 });\r\n            }\r\n            return channels;\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            lenList.splice(pattern.lenIndex + 1, 0, { rate: 4, isDiv3: false, isHalf: false });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isHalf = !cur.isHalf;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./soundUtils\";\r\n\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\nexport const playChord = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // setTimeout(() => {\r\n        //     sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // }, 20 * i);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 }\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { instrument } from \"soundfont-player\"\r\nimport { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/toneUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { TuneState } from \"./tuneState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { MutableRefObject } from \"react\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    tuneState: TuneState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n    },\r\n    tuneState: {\r\n        focusIndex: -1,\r\n        quantize: 4\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    }\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Link onClick={() => {\r\n\r\n                const data: ScoreData = {\r\n                    chordList: [\r\n                        { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                        { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                        { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                        {\r\n                            type: 'chord', detail: {\r\n                                beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                backing: {\r\n                                    voicingList: [],\r\n                                    pattern: null\r\n                                }\r\n                            } as DetailChord\r\n                        },\r\n                        { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                    ],\r\n                    notesList: []\r\n                };\r\n                dispatcher.score.setScoreData(data);\r\n                store.scoreState.focusIndex = 2;\r\n                dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                dispatcher.score.setScoreTabIndex(1);\r\n                // dispatcher.score.setScoreTabIndex(2);\r\n            }} >Create blank score.</_Link>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 80px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #a8a8a8;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 50px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 10px;\r\n\r\n    &:hover {\r\n        background-color: #5b5e33;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/soundUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/soundUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    playChord(store.instruments.sampler, detail, 100);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.changeLayer();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        let rate = note.rate;\r\n        if(note.isHalf) rate /= 1.5;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive}>\r\n                {note.rate}{!note.isHalf ? '' : '.'}{!note.isDiv3 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const isActive = pattern.lenIndex === k;\r\n                let rate = note.rate;\r\n                if (note.isHalf) rate /= 1.5;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive}>\r\n\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst ChannelItem = (props:{\r\n    soundFullName: string;\r\n}) => {\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option>-</_Option>\r\n            <_Option>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteRate } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_List onChange={(e) => {\r\n            pattern.channels = [];\r\n            for (let i = 0; i < Number(e.target.value); i++) {\r\n                pattern.channels.push({ octave: -1, structIndex: 0 });\r\n            }\r\n            update();\r\n        }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isHalf, () => {\r\n            cur.isHalf = !cur.isHalf;\r\n            update();            \r\n        })}\r\n        {/* {createItem('.')}\r\n        {createItem('/')} */}\r\n    </>);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #ff0000;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const channels = dispatcher.backing.getChannels(table).reverse();\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < 6; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        const pattern = state.pattern;\r\n                        if(pattern != null) {\r\n                            const tempChannels: ChannelParam[] = dispatcher.backing.getChannels(table);\r\n                            pattern.channels.forEach((channel, i) => {\r\n                                if(i < tempChannels.length) {\r\n                                    channel.octave = tempChannels[i].octave;\r\n                                    channel.structIndex = tempChannels[i].structIndex;\r\n                                } else {\r\n                                    channel.octave = -1;\r\n                                    channel.structIndex = 0;\r\n                                }\r\n                            });\r\n                            pattern.channels = pattern.channels.reverse();\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChord();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/soundUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\n\r\nexport const MelodyKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const state = store.tuneState;\r\n\r\n    switch (e.key) {\r\n        case 'ArrowUp': {\r\n        }\r\n            break;\r\n        case 'ArrowDown': {\r\n        }\r\n            break;\r\n        case 'ArrowLeft': {\r\n            state.focusIndex--;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'ArrowRight': {\r\n            state.focusIndex++;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '1': {\r\n            state.quantize = 16;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '2': {\r\n            state.quantize = 8;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '3': {\r\n            state.quantize = 4;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'Delete': {\r\n            const notesList = store.scoreData.notesList;\r\n            notesList.splice(state.focusIndex, 1);\r\n            dispatcher.tune.setNotesList(notesList);\r\n            state.focusIndex --;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n    }\r\n}\r\n\r\nexport const TuneKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alnfig.nextElement);\r\n    // switch (e.key) {\r\n    //     case config.editMode: {\r\n    //         keySwitch.editMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    //     case config.symbolMode: {\r\n    //         keySwitch.symbolMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    // }\r\n\r\n    if (isPress) {\r\n        MelodyKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey } from \"../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    rate: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = props.rate;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const name = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, 0) + getSymbolFromKey(detail.symbolKey)?.name;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                    >\r\n                        {name}\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #5e88af21;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst PitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default PitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #f5000065;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #ffffff1f;\r\n    ${props => !props.isStruct ? '' : css`background-color: #c08484b8;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #fbff00ba;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={false}\r\n            onClick={()=> {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #e9e9e9da;\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    value: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={state.quantize === props.value}\r\n            onClick={()=> {\r\n                state.quantize = props.value;\r\n                dispatcher.tune.setState(state);\r\n            }}\r\n        >\r\n            {props.value}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #fcff48, #cec073, #fcff48);\r\n    `}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet } from 'react-icons/gi'\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (<>\r\n        <_QuantizeSelector>\r\n            <QuantizeSwitch value={16} />\r\n            <QuantizeSwitch value={8} />\r\n            <QuantizeSwitch value={4} />\r\n        </_QuantizeSelector>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} name=\"violin\" />\r\n            <InstrumentSwitch icon={<GiGuitar />} name=\"e-guitar\" />\r\n            <InstrumentSwitch icon={<GiSaxophone />} name=\"saxphone\" />\r\n            <InstrumentSwitch icon={<GiViola />} name=\"viola\" />\r\n            <InstrumentSwitch icon={<GiTrumpet />} name=\"trumpet\" />\r\n            <InstrumentSwitch icon={<GiClarinet />} name=\"clarinet\" />\r\n            <InstrumentSwitch icon={<GiClarinet />} name=\"oboe\" />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, LenType } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { TuneKeySwitch } from \"../harmonize/input/melodyInput\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport PitchList from \"./pitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\n\r\n\r\ntype XY = {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ntype Side = 'left' | 'right' | 'normal';\r\n\r\ntype NotesState = {\r\n    index: number;\r\n    side: Side;\r\n    isResize: boolean;\r\n}\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [isPut, setPut] = useState<boolean>(false);\r\n    const [lock, setLock] = useState<XY>({ x: 0, y: 0 });\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [nextLeft, setNextLeft] = useState<number>(0);\r\n    const [beatWidth, setBeatWidth] = useState<number>(120);\r\n    const [barLength, setBarLength] = useState<number>(20);\r\n\r\n    const [notesState, setNotesState] = useState<NotesState>({ index: -1, side: 'normal', isResize: false });\r\n\r\n    // const [structIndexList, setStructIndexList] = useState<number[]>([0, 5, 7]);\r\n\r\n    const [curChord, setCurChord] = useState<ChordElement | null>(null);\r\n\r\n    const [mousePitchIndex, setMousePitchIndex] = useState<number>(0);\r\n    const [mouseMeasurePos, setMouseMeasurePos] = useState<number>(0);\r\n\r\n    const timelineLength = barLength * beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n        \r\n        Soundfont.instrument(new AudioContext(), 'violin', {gain: 4, release: 0.5}).then((soundFontPlayer) => {\r\n            dispatcher.tune.setInstrument(soundFontPlayer);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        notesList.forEach((notes, i) => {\r\n            const isActive = state.focusIndex === i;\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={notes.posX}\r\n                    width={notes.length}\r\n                    side={notesState.side}\r\n                    isActive={i === notesState.index}\r\n                    isEdit={i === notesState.index && notesState.isResize}\r\n                    onClick={(e) => {\r\n                        if (!isActive) {\r\n                            state.focusIndex = i;\r\n                            dispatcher.tune.setState(state);\r\n                        } else {\r\n                            if (!notesState.isResize) {\r\n                                const refs = store.refs.melody;\r\n                                if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                    const rect = refs.table.getBoundingClientRect();\r\n                                    const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                                    notesList[i].pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                                    dispatcher.tune.setNotesList(notesList.slice());\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={notes.lenType}\r\n                    >\r\n                        {notes.posX}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Header>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barLength}\r\n                        beatWidth={beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        rate={rate}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <PitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {pitchItemJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const refs = store.refs.melody;\r\n                            if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                const rect = refs.table.getBoundingClientRect();\r\n                                const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n                                const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n                                if (notesState.index === -1) {\r\n\r\n                                    setPut(true);\r\n                                    setLock({\r\n                                        x: Math.floor(x / beatWidth / rate) * beatWidth * rate,\r\n                                        y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                                    });\r\n\r\n                                    const next = notesList.find(note => x < note.posX);\r\n                                    let nextLeft = timelineLength;\r\n                                    if (next != undefined) {\r\n                                        nextLeft = next.posX;\r\n                                    }\r\n                                    setNextLeft(nextLeft);\r\n                                    setWidth(0);\r\n                                } else {\r\n                                    if (notesState.side === 'right') {\r\n                                        const notes = notesList[notesState.index];\r\n                                        notesState.isResize = true;\r\n                                        setNotesState({ ...notesState });\r\n                                        setLock({\r\n                                            x: (Math.floor(x / beatWidth / rate) * beatWidth * rate) - notes.length,\r\n                                            y: 0\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const refs = store.refs.melody;\r\n                            if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                const rect = refs.table.getBoundingClientRect();\r\n                                const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n                                const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n                                if (!isPut && !notesState.isResize) {\r\n                                    setMousePitchIndex(Math.floor(y / TUNE_PITCH_HEIGHT));\r\n                                    setMouseMeasurePos(Math.floor(x / beatWidth / rate));\r\n\r\n                                    let left = 0;\r\n                                    const searchedChord = chordList.find((element) => {\r\n                                        if (element.type === 'chord') {\r\n                                            const detail = element.detail as DetailChord;\r\n                                            const width = detail.beatLen * beatWidth;\r\n                                            if (x >= left && x < left + width) {\r\n                                                return element;\r\n                                            }\r\n                                            left += width;\r\n                                        }\r\n                                    });\r\n                                    setCurChord(searchedChord == undefined ? null : searchedChord);\r\n\r\n                                    notesState.index = -1;\r\n                                    for (let i = 0; i < notesList.length; i++) {\r\n                                        const notes = notesList[i];\r\n                                        const left = notes.posX;\r\n                                        const right = notes.posX + notes.length;\r\n                                        if (x >= left && x <= right) {\r\n                                            notesState.index = i;\r\n\r\n                                            if (x < left + 10) notesState.side = 'left';\r\n                                            else if (x > right - 10) notesState.side = 'right';\r\n                                            else notesState.side = 'normal';\r\n                                        }\r\n                                    };\r\n                                    setNotesState({ ...notesState });\r\n\r\n\r\n                                } else {\r\n                                    if (isPut) {\r\n                                        const normalX = (Math.floor(x / beatWidth / rate) + 1) * beatWidth * rate;\r\n                                        setWidth((normalX > nextLeft ? nextLeft : normalX) - lock.x);\r\n                                    }\r\n\r\n                                    if (notesState.isResize) {\r\n                                        const normalX = Math.floor(x / beatWidth / rate) * beatWidth * rate;\r\n                                        const notes = notesList[notesState.index];\r\n                                        notes.length = (normalX > nextLeft ? nextLeft : normalX) - lock.x;\r\n                                        dispatcher.tune.setNotesList(notesList.slice());\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseUp={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            if (isPut) {\r\n                                setPut(false);\r\n                                if (width > 0) {\r\n                                    notesList.push({\r\n                                        posX: lock.x,\r\n                                        pitchIndex: Math.floor(lock.y / TUNE_PITCH_HEIGHT),\r\n                                        length: width,\r\n                                        lenType: width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)\r\n\r\n                                    });\r\n                                    notesList.sort((a, b) => {\r\n                                        return a.posX === b.posX ? 0 : (\r\n                                            a.posX < b.posX ? -1 : 1\r\n                                        );\r\n                                    });\r\n                                    dispatcher.tune.setNotesList(notesList);\r\n                                }\r\n                            }\r\n                            if (notesState.isResize) {\r\n\r\n                                notesState.isResize = false;\r\n                                setNotesState({ ...notesState });\r\n                                const notes = notesList[notesState.index];\r\n                                notes.lenType = notes.length % beatWidth === 0 ? 4 : (notes.length % (beatWidth / 2) === 0 ? 8 : 16);\r\n                                dispatcher.tune.setNotesList(notesList.slice());\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f74646';\r\n            case 8: return '#467ef7';\r\n            case 16: return '#46f79f';\r\n        }\r\n    }};\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #69696921;\r\n    `}\r\n    /* &:hover {\r\n        background-color: #ffffff22;\r\n    } */\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #bddfff34;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ff00006e;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : '' : ''}\r\n    box-sizing: border-box;\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    /* background-color: red; */\r\n    background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }});\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/soundUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}