{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/redux/store/state/dataHistory.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/backing/pattern/builder/patternAdjust.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/utils/PreviewUtil.tsx","system/contents/score/preview/previewTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_DOMAIN","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","ret","find","symbol","undefined","list","forEach","push","rootIndex","map","relation","divCount","Array","fill","table","channels","i","length","j","octave","structIndex","voicingList","struct","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","interval","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","Math","floor","playHarmony","adjustRate","startTimeList","total","div","normal","rate","isDot","div3","timingAdj","timing","startTime","sustainTime","gain","velAdj","setTimeout","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","BackingUtil","CacheUtil","chordList","detail","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","score","setScoreState","notesCacheList","duration","pos","curMemori","range","info","posTime","pastLen","last","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","start","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","cache","getSymbolFromKey","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INTERVALS","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","changeLayer","testBacking","checkError","this","initialStore","userEnv","keyConfig","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","distMode","sustainMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialog","isTune","initialBeat","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","DummyUtil","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","args","split","baseBeat","Number","diatonicNo","charAt","option","beatChange","ProgSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","STEP_LIST","getDefaultChord","label","blockList","elementList","block","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","secCategory","setSecCategory","secNo","setSecNo","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","progUnitList","progJsxList","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","degreeChangeAction","e","isEnableSectionForm","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","_ListDiv","_ButtonDiv","_ExecutableButton","secNoStr","secName","insertProgUnit","_Record","RECORD_HEIGHT","span","ProgOutputFrame","blockJsxList","isFixed","inner","_FixedItem","_SectionItem","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","k","_BeatTip","getBeatTipsJsx","_Block","CSS_LABEL_SMALL","ProgTemplateFrame","templateJsxList","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","outputUnits","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","getInitialBlockList","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","searchLocalFileAction","showOpenFilePicker","fileContents","unZip","_Wrap","_ButtonsDiv","_Button","_Left","_ListInfoDiv","_Right","_DataInfoDiv","_ScoreInfoDiv","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","getChordRoot","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","HarmonizeUtil","previewMelody","clearTimeout","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","test","signal","backingEditorInput","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","ROOT_ALL","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_Minute","_MinuteItem","isReverse","_RootDiv","_SymbolDiv","input","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","getIntervalValues","_InfoItem","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternAdjust","_Rocord","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","vel","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","cellJsxList","isSelected","_Cell","isOver","soundfont","_TableRow","_StructItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","_ModeItem","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","sustain","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","harmMeasure","onKeyDown","onKeyUp","_SECTIONS","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","isHead","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","scaleDivJsxList","divList","MINOR_SCALE_INTERVALS","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","switchMode","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","PreviewUtil","PIT_HEIGTH","RATE_WIDTH","PreviewTab","areaRef","rateRef","past","setPast","timerId","setTimerId","isPlay","pit","sus","startList","normalList","areaWidth","recordJsxList","getTime","setInterval","_MainFixed","_RateFrame","_RateValue","_MainScroll","_HarmonyBox","_Line","HEADER_WIDTH","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","remove","_NowLoading","_Copylight","fadeIn","ValidateUtil","str","conditions","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","title","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ea90f7b.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        // const props = beatSignature.split('/');\r\n        // // 分子\r\n        // const mol = Number(props[0]);\r\n        // // 分母\r\n        // const den = Number(props[1]);\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n        const ret = SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, DetailInit, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: TheoryUtil.SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                // バッキング内で経過した時間（ノーツごとの開始時間）\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60000 / bpm * total);\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timingAdj = notes.status.timing * (60 / bpm * 1 / 32);\r\n                    const startTime = startTimeList[notes.x] + timingAdj;\r\n                    const sustainTime = chordTime - startTime;\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const beatLen = chordInfo.beatLen;// * (memoriCount / 4)\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange(); \r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n\r\n\r\n    export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const notesList = store.scoreData.notesList;\r\n        const state = store.melodyState;\r\n\r\n        const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n        notesList.forEach((notes) => {\r\n            const startTime = 0;\r\n            const duration = 0;\r\n            notesCacheList.push({\r\n                startTime,\r\n                duration\r\n            });\r\n        });\r\n    }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n    \r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n                    \r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            // const chordTime = 60 / init.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    init.bpm,\r\n                    init.beatSignature\r\n                );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                setTimeout(() => {\r\n                    CacheUtil.updateHarmonizeCache(this.store, this);\r\n                }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n                });\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INTERVALS;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as TheoryUtil.DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n            \r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 2,\r\n        scoreTabIndex: 0,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        sustainMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            sustainMode: 'f',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\nnamespace ProgSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: Condition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type Condition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: Condition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    const parseChord = (source: string): ChordItemBean[] => {\r\n        const args = source.split('@');\r\n        const baseBeat = Number(args[0]);\r\n        const script = args[1];\r\n        const list = script.split(' ');\r\n        return list.map((value)=> {\r\n            const diatonicNo = Number(value.charAt(0)) - 1;\r\n            const option = value.charAt(1);\r\n            const beatChange = value.charAt(2);\r\n\r\n            const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n            switch(option) {\r\n                case '_': break;\r\n            };\r\n            const beatLen = beatChange === '' ? baseBeat : Number(beatChange);\r\n            const chordItem: ChordItemBean = {\r\n                root: chord.root, symbolKey: chord.symbolKey, beatLen\r\n            }\r\n            return chordItem;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('4@1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@4 5 3 6 4 5 3 6')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n}\r\n\r\nexport default ProgStyle;","import { BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type BlockProps = {\r\n        label: DetailSection | DetailFixed;\r\n        chordList?: DetailChord[];\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            {\r\n                label: { labelName: \"Section\" }, chordList: [\r\n                    getDefaultChord()\r\n                ]\r\n            },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param blockList ブロックリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (blockList: BlockProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        blockList.forEach((block) => {\r\n            if (block.chordList == undefined) {\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: block.label });\r\n            } else {\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: block.label });\r\n                block.chordList.forEach((chord) => {\r\n                    elementList.push({ type: 'chord', detail: chord });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (unit: ProgSearcher.UnitBean, secName: string) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(2);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** セクションカテゴリのステート */\r\n    const [secCategory, setSecCategory] = useState('Section');\r\n    /** セクション連番のステート */\r\n    const [secNo, setSecNo] = useState('');\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if(props.beat === '') return [[], [<></>]];\r\n        const beat = props.beat as BeatSignature;\r\n        const unitList = ProgSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            // 表示する進行ユニット\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, i) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (i !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span>{divStr}</_Span>);\r\n                }\r\n                let isMatch = false;\r\n                if(i === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (i === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName isMatch={isMatch}>{chordName}</_ChordName>);\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        // セクション連番が設定されている場合のみ半角スペースで連結する\r\n        const secNoStr = secNo === '' ? '' : ` ${secNo}`;\r\n        const secName = secCategory + secNoStr;\r\n        props.insertProgUnit(progUnitList[focusIndex], secName);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n    };\r\n\r\n    /** セクションフォームの活性状態 */\r\n    const isEnableSectionForm = focusIndex !== -1;\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={150} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={90} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* セクション名 */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Section</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={150} value={secCategory} onChange={(e) => {\r\n                    setSecCategory(e.target.value);\r\n                }}>{secCatOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={80} value={secNo} onChange={(e) => {\r\n                    setSecNo(e.target.value);\r\n                }}>{secNoOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={true} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 3 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    blockList: ProgUtil.BlockProps[];\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const blockJsxList = props.blockList.map((block, i) => {\r\n        const isFixed = block.chordList == undefined;\r\n        const labelName = isFixed ? (block.label as DetailFixed).fixed :\r\n            (block.label as DetailSection).labelName;\r\n\r\n        const getChordListJsx = () => {\r\n            return (block.chordList as DetailChord[]).map((chord, j) => {\r\n\r\n                const getBeatTipsJsx = () => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let k = 0; k < chord.beatLen; k++) {\r\n                        jsxList.push(<_BeatTip key={k} />);\r\n                    }\r\n                    return jsxList;\r\n                }\r\n                let chordName = 'none';\r\n                if (chord.root !== null) {\r\n                    const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                        index: chord.root.index,\r\n                        isFlat: chord.root.isFlat\r\n                    });\r\n                    const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                    chordName = degreeRoot + symbolName;\r\n                }\r\n                return (\r\n                    <_ChordItem key={j}>\r\n                        <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                        <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                    </_ChordItem>\r\n                );\r\n            });\r\n        }\r\n        const inner = isFixed ? (\r\n            <_FixedItem>{labelName}</_FixedItem>\r\n        ) : (<>\r\n            <_SectionItem>{labelName}</_SectionItem>\r\n            <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n        </>);\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{inner}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: center;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 0;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <_Item key={i}>{val}</_Item>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #87b4b4;\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame beat={beatFilter} insertProgUnit={insertProgUnit} />;\r\n            case 'template': return <ProgTemplateFrame />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    const insertProgUnit = (unit: ProgSearcher.UnitBean, secName: string) => {\r\n        const block: ProgUtil.BlockProps = {\r\n            label: { labelName: secName },\r\n            chordList: unit.chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            })\r\n        }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits([]);\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame blockList={outputUnits} />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={true} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n        <_ButtonsDiv>\r\n            <_Button onClick={()=> {\r\n                store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData}/>;\r\n                dispatcher.system.setState(store.systemState);\r\n            }}>new score</_Button>\r\n            <_Button onClick={searchLocalFileAction}>load file</_Button>\r\n            <_Button onClick={searchLocalFileAction}>search local</_Button>\r\n            <_Button onClick={disconnectAction}>disconnect</_Button>\r\n        </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                    {/* <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link> */}\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_DataInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { NoteKeySwitch } from \"../../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n    // const keySwitch = props.keySwitch;\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    background-color: #7c89a1;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin: 2px 0 0 4px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    background-color: #a8c7a8;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n\r\n\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [elementJson, isSameSection, isRange, isFocus, state.keySwitch.symbolMode, state.keySwitch.sustainMode]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebf1e2;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4badd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #e8f3ab9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = store.scoreState.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - start + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                        break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        // case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        // case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        // case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        // case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.sustainMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const test: ChordBacking = {\r\n                    voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n                    pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern),\r\n                    hasError: state.hasError\r\n                }\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (!keySwitch.sustainMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                }\r\n                if (pattern.channelIndex === -1) {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.incrementVel(1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.incrementVel(-1);\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addPatternColumn();\r\n                        }\r\n                            break;\r\n                        case 'w': {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                            break;\r\n                        case '1': {\r\n                            dispatcher.backing.setCurrentDivRate(16);\r\n                        }\r\n                            break;\r\n                        case '2': {\r\n                            dispatcher.backing.setCurrentDivRate(8);\r\n                        }\r\n                            break;\r\n                        case '3': {\r\n                            dispatcher.backing.setCurrentDivRate(4);\r\n                        }\r\n                            break;\r\n                        case '4': {\r\n                            dispatcher.backing.setCurrentDivRate(2);\r\n                        }\r\n                            break;\r\n                        case '5': {\r\n                            dispatcher.backing.setCurrentDivRate(1);\r\n                        }\r\n                            break;\r\n                        case '.': {\r\n                            dispatcher.backing.toggleCurrentDivHalf();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            dispatcher.backing.deleteColumn();\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = 0;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.backing.mappingEditorToScore();\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                const pattern = state.pattern as BackingState.Pattern;\r\n                const layer = pattern.layers[pattern.layerIndex];\r\n                const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                if (cell != null) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            cell.velAdj++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            cell.velAdj--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            cell.timing--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            cell.timing++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? ['0', '2', '4', '5', '7', '9', '11'] : ['0', '2', '3b', '5', '7', '8b', '10b'];\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index + (root.isFlat ? '' : 'b'));\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(root)} ({TheoryUtil.getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat Length'}</_CategoryLabel>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute Head'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_CategoryLabel>{'Minute Tail'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #94c5e6b9;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = TheoryUtil.getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{TheoryUtil.IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternAdjust = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            cell == null ? <></> : (<>\r\n                <_Rocord>\r\n                    <_Label>delay</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n                <_Rocord>\r\n                    <_Label>velocity</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternAdjust;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Rocord = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(50% - 2px);\r\n    margin: 1px 0;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 1px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 2px);\r\n    width: 80px;\r\n    background-color: #868686;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 600;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 6px 0 0 10px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternAdjust from \"./patternAdjust\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                <PatternVelocity /> :\r\n                <PatternAdjust />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + TheoryUtil.IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = TheoryUtil.KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null,\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分の関数コンポーネント\r\n * @returns \r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = TheoryUtil.KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n    let total = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${TheoryUtil.KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    const structJsxList: JSX.Element[] = [];\r\n    symbol.structs.forEach((struct, i) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n        const chordIndex = (+ interval) % 12;\r\n        structJsxList.push(\r\n            <_StructItem key={i}>{struct} [{TheoryUtil.KEY12_SHARP_LIST[chordIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面の関数コンポーネント\r\n * @returns \r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プロビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const harmMeasure = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const chordInfo = state.elementCacheList.length === 0 ? <></> : <ChordInfo />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SECTIONS><HarmSections /></_SECTIONS>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    {/* <InitialBeatTip /> */}\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{harmMeasure}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{chordInfo}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache, i) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, {  } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                   MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, DetailInit } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n        const init = data.chordList[0].detail as DetailInit;\r\n        const bpm = init.bpm;\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        \r\n        let firstTime = -1;\r\n        for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pitch = notes.pitchIndex;\r\n            const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                firstTime = time;\r\n            }\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    state.focusIndex = i;\r\n                    state.destIndex = state.focusIndex;\r\n                    \r\n                    if (instrument != null) {\r\n                        const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n                        const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                    }\r\n                }, (time - firstTime) * 1000)\r\n            );\r\n\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (time - firstTime + 60 / bpm * len) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / init.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n                        store.melodyState.tableMouse.curChord = element;\r\n                        update();\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import { useContext, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport PreviewUtil from \"../../../utils/PreviewUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n\r\n\r\nconst HEADER_WIDTH = 100;\r\nconst FOOTER_WIDTH = 50;\r\n\r\nconst BEAT_RATE = 50;\r\nconst PIT_HEIGTH = 10;\r\nconst START_LINE = 200;\r\nconst RATE_WIDTH = 500;\r\n\r\nconst PreviewTab = (props: {\r\n    data: ScoreData;\r\n}) => {\r\n\r\n    const chordList = props.data.chordList;\r\n    const notesList = props.data.notesList;\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const areaRef = useRef<null | HTMLDivElement>(null);\r\n    const rateRef = useRef<null | HTMLDivElement>(null);\r\n    const [past, setPast] = useState(0);\r\n    const [timerId, setTimerId] = useState<null | NodeJS.Timeout>(null);\r\n\r\n\r\n    const isPlay = timerId != null;\r\n\r\n    const [jsxList, totalLen, bpm, areaWidth] = useMemo(() => {\r\n\r\n        const jsxList: JSX.Element[] = [];\r\n        const add = (pos: number, len: number, pit: number, isRight: boolean) => {\r\n            const isActive = past >= pos && past <= pos + len;\r\n            jsxList.push(<_Notes key={jsxList.length}\r\n                pos={pos}\r\n                sus={len}\r\n                pit={pit}\r\n                isRight={isRight}\r\n                isActive={isActive}\r\n            />);\r\n        }\r\n        const init = chordList[0].detail as DetailInit;\r\n        let curPos = 0;\r\n        for (let i = 0; i < chordList.length; i++) {\r\n            const chord = chordList[i];\r\n            switch (chord.type) {\r\n                case 'chord': {\r\n                    const detail = chord.detail as DetailChord;\r\n                    const backing = detail.backing;\r\n                    if (detail.root != null) {\r\n                        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n                        if (backing.pattern == null) {\r\n                            pitchList.forEach((index) => {\r\n                                // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                // const octave = Math.floor(index / 12);\r\n                                const pit = 87 - index;\r\n                                add(curPos, len, pit, false);\r\n                            });\r\n                        } else {\r\n                            const pattern = backing.pattern;\r\n                            pattern.layers.forEach((layer, layerIndex) => {\r\n                                const startList: number[] = [];\r\n                                const normalList: number[] = [];\r\n                                let total = 0;\r\n                                layer.divs.forEach(div => {\r\n                                    startList.push(total);\r\n                                    let normal = 4 / div.rate;\r\n                                    if (div.isDot) normal *= 1.5;\r\n                                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                                    normalList.push(normal);\r\n                                    total += normal;\r\n                                });\r\n                                layer.notesList.forEach((notes) => {\r\n\r\n                                    const timingAdj = notes.status.timing * (1 / 32);\r\n                                    const start = curPos + startList[notes.x] + timingAdj;\r\n                                    const sustain = normalList[notes.x];\r\n\r\n                                    const index = pitchList[notes.y];\r\n\r\n                                    const pit = 87 - index;\r\n\r\n                                    // if (!isPlay || (start <= past + 15 && start + sustain > past)) {\r\n                                    add(start, sustain, pit, layerIndex === 1);\r\n                                    // }\r\n                                    // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                    // const octave = Math.floor(index / 12);\r\n                                    // const soundFullName = soundName + octave;\r\n\r\n                                });\r\n                            });\r\n                        }\r\n                        curPos += len;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n        const areaWidth = areaRef.current == null ? 0 : areaRef.current.clientWidth;\r\n        return [jsxList, curPos, init.bpm, areaWidth];\r\n        }, [props.data, past, isPlay]);\r\n    // }, [props.data]);\r\n\r\n    // const recordJsxList = useMemo(() => {\r\n    //     return jsxList;\r\n    // }, []);\r\n    const recordJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 88; i++) {\r\n        recordJsxList.push(\r\n            <_Record key={i} pit={i} isScale={i % 2 == 0}></_Record>\r\n        );\r\n    }\r\n\r\n\r\n    const setRate = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rateRef.current == null || timerId != null) return;\r\n        const rect = rateRef.current.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        console.log(x);\r\n        setPast(totalLen * x / RATE_WIDTH);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header onClick={() => {\r\n                if (timerId == null) {\r\n                    const start = new Date().getTime();\r\n                    const id = setInterval(() => {\r\n                        const time = new Date().getTime() - start;\r\n                        setPast(past + time * bpm / 60000);\r\n                        // console.log(past);\r\n                    }, 150);\r\n                    setTimerId(id);\r\n                    PreviewUtil.previewStart(store, dispatcher);\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    setTimerId(null);\r\n                }\r\n            }}></_Header>\r\n            <_Main>\r\n                <_MainFixed>\r\n                    <_RateFrame pos={areaWidth / 2 - RATE_WIDTH / 2} ref={rateRef}\r\n                        onClick={setRate}>\r\n                        <_RateValue value={totalLen === 0 ? 0 : RATE_WIDTH * (past / totalLen)} />\r\n                    </_RateFrame>\r\n                </_MainFixed>\r\n                <_MainScroll ref={areaRef}>\r\n                    <_HarmonyBox pos={past} width={totalLen} isPlay={isPlay}>\r\n                        {recordJsxList}\r\n                        {jsxList}\r\n                    </_HarmonyBox>\r\n                    <_Line pos={START_LINE} />\r\n                </_MainScroll>\r\n            </_Main>\r\n            <_Footer></_Footer>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2d3246;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #95a5ca;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH + FOOTER_WIDTH}px);\r\n    /* background-color: #2d3246; */\r\n    text-align: left;\r\n`;\r\nconst _MainScroll = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _HarmonyBox = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isPlay: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => START_LINE - props.pos * BEAT_RATE}px;\r\n    width: ${props => props.width * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: #ffffffb5;\r\n    ${props => props.isPlay ? '' : css`\r\n        transition: left 0.5s;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isScale: boolean;\r\n    pit: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    // position: absolute;\r\n    width: 100%;\r\n    height: ${PIT_HEIGTH}px;\r\n    // background-color: ${props => props.isScale ? '#fffffff9f' : '#00ff4cf8f'};\r\n    /* background-color: #0026fc11; */\r\n    ${props => props.isScale ? '' : css`\r\n        background-color: #ffffff08;\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    sus: number;\r\n    pit: number;\r\n    isRight: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_RATE}px;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    width: ${props => props.sus * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH}px;\r\n    background-color: ${props => !props.isRight ? '#ad0000e0' : '#002ca7df'};\r\n    opacity: 0.3;\r\n    ${props => !props.isActive ? '' : css<{\r\n    isRight: boolean;\r\n}>`\r\n        opacity: 1;\r\n        background-color: ${props => !props.isRight ? '#ff4242df' : '#4677ffdf'};\r\n        box-shadow: 0 0 14px 0 #ffffff46;\r\n    `}\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos - 1}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: white;\r\n    width: 3px;\r\n`;\r\n\r\nconst _MainFixed = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    // background-color: #c4444453;\r\n`;\r\n\r\nconst _RateFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    z-index: 5;\r\n    // left: ${props => props.pos}px;\r\n    top: calc(100% - 40px);\r\n    width: ${RATE_WIDTH}px;\r\n    height: 25px;\r\n    background-color: #000000;\r\n    border: solid 1px #000;\r\n    box-sizing: border-box;\r\n    opacity: 0.9;\r\n    text-align: left;\r\n`;\r\nconst _RateValue = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: ${props => props.value}px;\r\n    height: 100%;\r\n    background-color: #afe7e9;\r\n`;\r\n\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #5a5e72;\r\n    text-align: left;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: false, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, isEnable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}