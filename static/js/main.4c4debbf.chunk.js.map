{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/utils/backingUtil.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","getDefaultBacking","voicingList","struct","octave","pattern","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","notes","total","len4","len8","len16","len4div3","len8div3","getSortetdNotesLen","len8div3Cnt3","Math","floor","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","i","keyIndex","soundName","instrument","soundfontPlayer","stop","play","duration","playPiano","soundFullName","piano","alert","previewHarmony","start","dispatcher","state","cacheList","sampler","elementCacheList","chordList","init","detail","cache","element","pastSecond","rootIndex","len","beatLen","minute","head","tail","channelList","backing","map","item","interval","chordTime","bpm","setTimeout","mouseState","curChord","tune","setState","length","j","previewCurHarmony","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","focusIndex","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","slice","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","setNotesList","notesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","cur","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","distIndex","adjustScrollX","updateCurChord","moveDistFocus","x","beatWidth","left","searchedChord","addNotes","notes1","notes2","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","focusStart","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","normal","moveNotes","isBehind","curNormalLeft","prevNormalRight","nextNormalLeft","moveNormal","table","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","isPreview","firstTime","pitch","time","id","clearInterval","releaseAll","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isDot","div3","velocityList","Array","col","isExist","voicing","applyBackingToChordData","channelSize","channels","layers","layer","divs","signals","record","cell","y","val","signal","addPatternColumn","layerIndex","lenList","newLen","lenIndex","column","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","channelIndex","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","deleteColumn","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isSolo","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","shift","Sampler","toDestination","harmonize","measure","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","JSON","stringify","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","parse","textarea","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","config","curType","soundfont","playChordSoundfont","Number","NoteKeySwitch","isPress","isElement","update","timing","velocityAdjust","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","height","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","BackingUtil","OCTAVE_NUM","STRUCT_NUM","CHANNEL_MAX","getInitialRecord","divCount","fill","getVoicingStructs","structIndex","getChannels","voicingStructs","size","channel","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","status","_Notes","_State","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","initialCellArray","PatternChannel","channelJsxList","soundIndex","PatternStatus","createItem","callback","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","_VoicingLane","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","focus","Soundfont","AudioContext","release","then","soundFontPlayer","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","prev","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","right","mouseUpEvent","sort","a","b","posA","posB","MelodyInput","keyDownEvent","clearTimeout","keySwitchEvent","MelodyFrame","tableRef","pitchRef","invalidate","setInvalidate","tableWidth","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","notesRight","middle","focusEnd","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","_PrevireBrind","editAnimation","keyframes","EditTab","switchMode","preview","toggleEnsamble","_Mode","_ModeItem","_Buttons","_Switch","_SwitchInner","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+IAKYA,E,4ECHCC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAYjCC,EAA4C,CACrD,KACA,CAAEC,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,GAAIC,QAAQ,GACrB,CAAED,MAAO,GAAIC,QAAQ,GACrB,CAAED,MAAO,GAAIC,QAAQ,IAIZC,EAAqB,CAC9B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,UAKnDC,EAAsB,CAC/B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,UAGnDC,EAAgB,SAACC,GAE1B,OADaA,EAAMJ,OAASC,EAAqBC,GACrCE,EAAML,QAGTM,EAAkB,CAC3B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEnDC,EAAmB,CAC5B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAGnDC,EAAe,SAACH,EAAoBI,GAE7C,OADaJ,EAAMJ,OAASK,EAAkBC,IACjCE,EAAeJ,EAAML,OAAS,KAIlCU,EAAyB,CAClC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAKnDC,EAAyB,CAClC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KA0CnDC,EAAuC,CAChD,CACIC,IAAK,QAASC,KAAM,GACpBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,QAASC,KAAM,IACpBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,aAAcC,KAAM,OACzBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,WAAYC,KAAM,MACvBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,WACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,WAAYC,KAAM,MACvBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,WACNC,QAAS,CAAC,KAAM,KAAM,KAAM,OAEhC,CACIH,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,gBAAiBC,KAAM,SAC5BC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,IAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,YAAaC,KAAM,KACxBC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,WAAYC,KAAM,QACvBC,KAAM,aACNC,QAAS,CAAC,KAAM,KAAM,OAE1B,CACIH,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,UAEV,CACIJ,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,UAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,UAEV,CACIJ,IAAK,YAAaC,KAAM,IACxBC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,QAUjBE,EAAwB,CACjC,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,GACN,GAAM,IAGGC,EAAmD,CAC5D,CAAEC,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,GAAIC,QAAQ,GAASoB,UAAW,iBAGxCC,EAAoC,CAC7C,SAAK,aACL,UAAM,WACN,UAAM,WACN,SAAK,aACL,SAAK,UACL,UAAM,WACN,cAAU,gBAaDC,EAAmB,SAACV,GAC7B,IAAMW,EAAMZ,EAAYa,MAAK,SAACC,GAC1B,GAAIb,IAAQa,EAAOb,IACf,OAAOa,KAGf,YAAcC,GAAPH,EAAmBA,EAAMZ,EAAY,IAGnCgB,EAAmB,SAACf,GAC7B,IAAIgB,EAAoB,GAMxB,OALAjB,EAAYkB,SAAQ,SAACJ,GACbb,IAAQa,EAAOX,MACfc,EAAKE,KAAKL,EAAOb,QAGlBgB,I,SD7RChC,O,uCAAAA,I,qCAAAA,I,mCAAAA,I,mCAAAA,I,uBAAAA,I,qCAAAA,I,yCAAAA,I,0CAAAA,M,KAmBL,I,ygBAAMmC,GAAU,SAACC,EAAcC,GAClC,IAAMC,EAAOD,EAAOC,KACdC,EAAUF,EAAOE,QACvB,OAAQD,GACJ,KAAKtC,EAAWwC,iBACZJ,EAAMK,YAAcF,EAAQE,YAC5B,MACJ,KAAKzC,EAAW0C,gBACZN,EAAMO,WAAaJ,EAAQI,WAC3B,MACJ,KAAK3C,EAAW4C,eACZR,EAAMS,UAAYN,EAAQM,UAC1B,MACJ,KAAK7C,EAAW8C,eACZV,EAAMW,YAAcR,EAAQS,UAC5B,MACJ,KAAKhD,EAAWiD,SACZb,EAAMc,KAAOX,EAAQW,KACrB,MACJ,KAAKlD,EAAWmD,gBACZf,EAAMgB,YAAcb,EAAQa,YAC5B,MACJ,KAAKpD,EAAWqD,kBACZjB,EAAMkB,aAAef,EAAQe,aAC7B,MACJ,KAAKtD,EAAWuD,kBACZnB,EAAMoB,aAAejB,EAAQiB,aAGrC,OAAO,eAAKpB,I,SEwCHqB,GAAoB,SAACrC,GAC9B,IAAIsC,EAA8B,GAClC,OAAQtC,GACJ,IAAK,QAASsC,EAAc,CACxB,CAAEC,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,IAOtB,MACH,IAAK,UAYL,IAAK,SAAUF,EAAc,CACzB,CAAEC,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,IAa7B,MAJ8B,CAC1BF,cACAG,QAAS,OC1HJC,GAAyB,SAAC3D,GACnC,OAAQ4D,GAAgB5D,EAAQ,GAAK,IAG5B6D,GAA2B,SAACC,GACrC,IAAIC,EAAQ,EAMZ,OALAA,GAASD,EAAME,KACfD,GAASD,EAAMG,KAAO,EACtBF,GAASD,EAAMI,MAAQ,EACvBH,GAASD,EAAMK,SAAW,EAC1BJ,GAASD,EAAMM,SAAW,GAcjBC,GAAqB,SAACtD,GAE/B,IAAMuD,EAAeC,KAAKC,MAAMzD,EAAKqD,SAAW,GAChDrD,EAAKqD,UAA2B,EAAfE,EACjBvD,EAAKkD,MAAQK,EAEb,IAAMG,EAAeF,KAAKC,MAAMzD,EAAKqD,SAAW,GAChDrD,EAAKqD,UAA2B,EAAfK,EACjB1D,EAAKoD,UAAYM,EAEjB,IAAMC,EAAeH,KAAKC,MAAMzD,EAAKoD,SAAW,GAChDpD,EAAKoD,UAA2B,EAAfO,EACjB3D,EAAKiD,MAAQU,EAEb,IAAMC,EAAYJ,KAAKC,MAAMzD,EAAKmD,MAAQ,GAC1CnD,EAAKmD,OAAqB,EAAZS,EACd5D,EAAKkD,MAAQU,EAEb,IAAMC,EAAWL,KAAKC,MAAMzD,EAAKkD,KAAO,GAIxC,OAHAlD,EAAKkD,MAAmB,EAAXW,EACb7D,EAAKiD,MAAQY,EAEN7D,GAGE8D,GAA0B,SAACC,EAAkBC,GAEtD,IAAIf,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAW,EACXC,EAAW,EAEf,OAAQU,GACJ,KAAK,EAAGd,EAAOe,EAAO,MACtB,KAAK,EAAGd,EAAOc,EAAO,MACtB,KAAK,EAAGZ,EAAWY,EAAO,MAC1B,KAAK,EAAGb,EAAQa,EAAO,MACvB,KAAK,EAAGX,EAAWW,EAEvB,OAAOV,GAAmB,CACtBL,OAAMC,OAAMC,QAAOC,WAAUC,cA+BxBY,GAAoB,SAAClB,GAE9B,OAAIA,EAAMM,SAAW,EAAU,EACtBN,EAAMI,MAAQ,EAAU,EACxBJ,EAAMK,SAAW,EAAU,EAC3BL,EAAMG,KAAO,EAAU,EACvBH,EAAME,KAAO,EAAU,EACpB,GAGHiB,GAAgB,SAACC,EAAWjD,GACrC,IAAMkD,GAAa,GAAKD,EAAK,GAAK,GAC5BzB,EAASc,KAAKC,OAAQ,GAAKU,EAAK,GAAK,IAAM,EAC3CE,EAAY7E,EAAiB4E,EAAW,IACxCE,EAAapD,EAAMgB,YAAYqC,gBACnB,MAAdD,IACAA,EAAWE,OACXF,EAAWG,KAAKJ,EAAY3B,EAAQ,EAAG,CAAEgC,SAAU,OAI9CC,GAAY,SAACC,EAAuB1D,EAAcwD,GAC3D,IAAMJ,EAAapD,EAAMgB,YAAY2C,MACnB,MAAdP,EACAA,EAAWG,KAAKG,EAAe,EAAG,CAAEF,aAEpCI,MAAM,SA4FDC,GAAiB,SAACC,EAAe9D,EAAc+D,EAAwB3C,GAQhF,IAPA,IAAM4C,EAAQhE,EAAMO,WAEd0D,GADUjE,EAAMgB,YAAYkD,QAChBF,EAAMG,kBAClBC,EAAYpE,EAAMS,UAAU2D,UAE5BC,EAAOD,EAAU,GAAGE,OANyF,WAQ1GrB,GACL,IAAMsB,EAAQN,EAAUhB,GAClBuB,EAAUJ,EAAUnB,GAC1B,GAAqB,UAAjBuB,EAAQtE,KAAkB,CAC1B,GAAIqE,EAAME,WAAaX,EAAO,iBAE9B,IAAMQ,EAASE,EAAQF,OAEvB,GAAmB,MAAfA,EAAOnF,KAAc,MAAM,CAAN,UAEzB,IAAMuF,GAAaJ,EAAOnF,KAAKpB,MAAQsG,EAAKnB,UAAY,GAClDzD,EAASH,EAAiBgF,EAAOlF,WACjCuF,EAAML,EAAOM,QAAUN,EAAOO,OAAOC,KAAOR,EAAOO,OAAOE,KAE1DC,EAAcV,EAAOW,QAAQ3D,YAAY4D,KAAI,SAACC,GAChD,IAAMC,EAAWnG,EAAsBQ,EAAOV,QAAQoG,EAAK5D,SAC3D,OAAO,GAAK4D,EAAK3D,OAASkD,EAAYU,KAGpCC,EAAY,GAAKhB,EAAKiB,IAAMX,EAClCvD,EAAatB,KACTyF,YAAW,WAGPvF,EAAMW,YAAY6E,WAAWC,SAAWjB,EACxCT,EAAW2B,KAAKC,SAAS3F,EAAMW,aAEL0D,EAAKiB,IACJN,EAAYY,OAEvCZ,EAAYnF,SAAQ,SAAC9B,EAAO8H,GACxB,IAAM1C,EAAY7E,EAAiBP,EAAQ,IACrCyD,EAASc,KAAKC,MAAMxE,EAAQ,IAElC0F,GADsBN,EAAY3B,EACTxB,EAAOqF,QA2DrCd,EAAME,WAAaX,EA9FnB,MACNb,EAAI,EAAGA,EAAImB,EAAUwB,OAAQ3C,IAAK,CAAC,IAAD,IAAlCA,GAAkC,oDAmGlC6C,GAAoB,SAAC9F,GAE9B,IAAMgE,EAAQhE,EAAMW,YAEd0D,EADYrE,EAAMS,UAAU2D,UACX,GAAGE,OACpBmB,EAAWzB,EAAMwB,WAAWC,SAClC,GAAgB,MAAZA,EAAkB,CAElB,IAAMnB,EAASmB,EAASnB,OAExB,GAAmB,MAAfA,EAAOnF,KAAc,OAEzB,IAAMuF,GAAaJ,EAAOnF,KAAKpB,MAAQsG,EAAKnB,UAAY,GAClDzD,EAASH,EAAiBgF,EAAOlF,WAGjC4F,GAFMV,EAAOM,QAAUN,EAAOO,OAAOC,KAAOR,EAAOO,OAAOE,KAE5CT,EAAOW,QAAQ3D,YAAY4D,KAAI,SAACC,GAChD,IAAMC,EAAWnG,EAAsBQ,EAAOV,QAAQoG,EAAK5D,SAC3D,OAAO,GAAK4D,EAAK3D,OAASkD,EAAYU,MAGpCC,EAAY,GAAKhB,EAAKiB,IAAM,EAClCN,EAAYnF,SAAQ,SAAC9B,GACjB,IAAMoF,EAAY7E,EAAiBP,EAAQ,IACrCyD,EAASc,KAAKC,MAAMxE,EAAQ,IAElC0F,GADsBN,EAAY3B,EACTxB,EAAOqF,QClU/BU,GAAmB,IACnBC,GAAoB,GCxBpBC,GAKT,WAAYjG,EAAckG,GAAmC,IAAD,gCAHpDlG,WAGoD,OAFpDkG,cAEoD,OAKrDC,OAAS,CAEZR,SAAU,SAACtF,GACP,EAAK6F,SAAStI,EAAWwC,iBAAkB,CAAEC,iBAGjD+F,mBAAoB,WAChB,IAAM/F,EAAc,EAAKL,MAAMK,YAC/BA,EAAYgG,UAAW,EACvB,EAAKH,SAAStI,EAAWwC,iBAAkB,CAAEC,iBAGjDiG,gBAAiB,SAACvI,GACd,IAAMsC,EAAc,EAAKL,MAAMK,YAC/BA,EAAYkG,iBAAmBxI,EAC/B,EAAKmI,SAAStI,EAAWwC,iBAAkB,CAAEC,iBAGjDmG,QAAS,SAAC1F,GACN,EAAKoF,SAAStI,EAAWiD,SAAU,CAAEC,UAGzC2F,gBAAiB,SAACrF,GACd,EAAK8E,SAAStI,EAAWuD,kBAAmB,CAAEC,mBA5BM,KAgCrDsF,MAAQ,CACXC,SAAU,SAACtD,GACP,EAAK6C,SAAStI,EAAWmD,gBAAiB,CACtCC,YAAY,2BACL,EAAKhB,MAAMgB,aADP,IACoB2C,MAAON,OAK9CuD,iBAAkB,SAAC7I,GACf,IAAMsC,EAAc,EAAKL,MAAMK,YAC/BA,EAAYwG,cAAgB9I,EAC5B,EAAKmI,SAAStI,EAAWwC,iBAAkB,CAAEC,iBAGjDyG,cAAe,SAACvG,GACZ,EAAK2F,SAAStI,EAAW0C,gBAAiB,CAAEC,gBAGhDwG,aAAc,SAACC,GACX,IAAMhD,EAAQ,EAAKhE,MAAMO,WACzByD,EAAMgD,UAAYA,EAClB,EAAKN,MAAMI,cAAc9C,IAG7BiD,aAAc,SAACxG,GACX,EAAKyF,SAAStI,EAAW4C,eAAgB,CAAEC,eAG/CyG,YAAa,SAACC,GACV,IAAMnD,EAAQ,EAAKhE,MAAMO,WAEnB6G,EAAMD,EAAS,GAAK,EACgB,UAF7B,EAAKnH,MAAMS,UAAU2D,UAEzBJ,EAAMqD,WAAaD,GAAKlH,OAC7B8D,EAAMqD,YAAcD,EACpB,EAAKV,MAAMI,cAAc9C,KAIjCsD,YAAa,SAACH,GACV,IAAMnD,EAAQ,EAAKhE,MAAMO,WACnBgH,EAAkBvD,EAAMG,iBAAiBH,EAAMqD,YAAYG,UAC3DC,EAAmBzD,EAAMyD,iBACzBC,EAAiBD,EAAiBF,GAClCI,EAAiB,EAAK3H,MAAMS,UAAU2D,UAAUJ,EAAMqD,YAAYnH,KACnEiH,EAWGI,EAAkBE,EAAiB7B,OAAS,EAE5C5B,EAAMqD,WAAaI,EAAiBF,EAAkB,GAAGK,gBAGzD5D,EAAMqD,WAAaK,EAAeG,cAZlC7D,EAAMqD,WAFa,YAAnBM,GAAgCJ,EAAkB,EAE/BE,EAAiBF,EAAkB,GAAGK,gBAGtCF,EAAeE,gBAa1C,EAAKlB,MAAMI,cAAc9C,IAG7B8D,oBAAqB,SAACC,GAClB,IAAM/D,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1C8C,EAAMW,EAAO,GAAK,EACL,MAAfzD,EAAOnF,MACPmF,EAAOnF,KAAO,CAAEpB,MAAO,EAAGC,QAAQ,GAClC,EAAK0I,MAAMO,aAAae,IACjB1D,EAAOnF,KAAKpB,MAAQqJ,GAAO,GAAK9C,EAAOnF,KAAKpB,MAAQqJ,GAAO,KAClE9C,EAAOnF,KAAKpB,OAASqJ,EACrB9C,EAAOnF,KAAKnB,QAAU+J,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIE,SAAS3D,EAAOnF,KAAKpB,OAC3E,EAAK2I,MAAMO,aAAae,KAIhCE,iBAAkB,SAACH,GACf,IAAM/D,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB2D,EAAY4D,EAAK5D,UAAU+D,QAC3B7D,EAASF,EAAUJ,EAAMqD,YAAY/C,OACrC8C,EAAMW,EAAO,GAAK,EACpBzD,EAAOM,QAAUwC,GAAO,GAAK9C,EAAOM,QAAUwC,GAAO,IACrD9C,EAAOM,SAAWwC,EAClBY,EAAK5D,UAAYA,EACjB,EAAKsC,MAAMO,aAAae,KAIhCI,mBAAoB,SAACC,EAAaC,EAAiBC,GAC/C,IAAMP,EAAO,EAAKhI,MAAMS,UAElB6D,EADM0D,EAAK5D,UAAUiE,GACR/D,OACfkE,EAAUF,EAA8BhE,EAAOO,OAAOE,KAAnCT,EAAOO,OAAOC,MACrC0D,GAAUD,KACK,IAAOC,GAAU,KACvBF,EACAhE,EAAOO,OAAOE,KAAOyD,EADblE,EAAOO,OAAOC,KAAO0D,EAGlCR,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChC,EAAKzB,MAAMO,aAAae,KAIhCS,2BAA4B,SAACH,EAAiBC,GAC1C,IAAMlB,EAAa,EAAKrH,MAAMO,WAAW8G,WACnCjD,EAAY,EAAKpE,MAAMS,UAAU2D,UAEnCsE,GAAa,EACjB,GAAKJ,GAQD,IAAK,IAAIrF,EAAIoE,EAAa,EAAGpE,EAAImB,EAAUwB,OAAS,EAAG3C,IACnD,GAA0B,UAAtBmB,EAAUnB,GAAG/C,KAAkB,CAC/BwI,EAAYzF,EACZ,YAVR,IAAK,IAAIA,EAAIoE,EAAa,EAAGpE,EAAI,EAAGA,IAChC,GAA0B,UAAtBmB,EAAUnB,GAAG/C,KAAkB,CAC/BwI,EAAYzF,EACZ,OAWM,GAAdyF,IACA,EAAKhC,MAAM0B,mBAAmBf,EAAYiB,EAAQC,GAClD,EAAK7B,MAAM0B,mBAAmBM,GAAYJ,GAASC,KAI3DI,gBAAiB,WACb,IAAM3E,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB+D,EAAU,CACZtE,KAAM,QAASoE,OAAQ,CACnBM,QAASZ,EAAM4E,YACf/D,OAAQ,CAAEC,KAAM,EAAGC,KAAM,GAGzB5F,KAAM,KACN0J,GAAI,KACJzJ,UAAW,QACX6F,QAAS,CACL3D,YAAa,GACbG,QAAS,QAIrBuG,EAAK5D,UAAU0E,OAAO9E,EAAMqD,WAAa,EAAG,EAAG7C,GAC/C,EAAKkC,MAAMO,aAAae,IAc5Be,kBAAmB,WACf,IAAM/E,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAMxBuH,EAAK5D,UAAU0E,OAAO9E,EAAMqD,WAAa,EAAG,EAL5B,CACZnH,KAAM,UAAWoE,OAAQ,CACrB0E,UAAW,aAInB,EAAKtC,MAAMO,aAAae,IAG5BiB,iBAAkB,WACd,IAAMjF,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAcxBuH,EAAK5D,UAAU0E,OAAO9E,EAAMqD,WAAa,EAAG,EAb5B,CACZnH,KAAM,SAAUoE,OAAQ,CACpB4E,WAAY,KACZC,iBAAkB,KAClBC,eAAgB,EAChBC,UAAW,EACXC,cAAe,KACfC,UAAW,EACXC,UAAW,EACXC,cAAe,EACfC,cAAe,SAIvB,EAAKhD,MAAMO,aAAae,IAG5B2B,iBAAkB,WACd,IAAM3F,EAAQ,EAAKhE,MAAMO,WACnBiE,EAAU,EAAKxE,MAAMS,UAAU2D,UAAUJ,EAAMqD,YAC/CG,EAAY,EAAKxH,MAAMO,WAAW4D,iBAAiBH,EAAMqD,YAAYG,UAC3E,GAAqB,YAAjBhD,EAAQtE,MAAoC,IAAdsH,EAAlC,CAGA,IAAMjD,EAAQP,EAAMG,iBAAiBH,EAAMqD,YAErCuC,EAAUrF,EAAMsF,QAAQC,KACdvF,EAAMsF,QAAQE,KAE9BH,EAAQI,MAAMC,QAAU,IACxBL,EAAQI,MAAME,SAAW,SAEzBN,EAAQI,MAAMG,MAAd,UAAyBP,EAAQQ,YAAjC,MACA7E,YAAW,WACPqE,EAAQI,MAAMG,MAAQ,MACvB,GACH5E,YAAW,WACPqE,EAAQI,MAAMC,QAAU,GACxBL,EAAQI,MAAMG,MAAQ,GACtBP,EAAQI,MAAME,SAAW,GAEzB,IAAMlC,EAAO,EAAKhI,MAAMS,UACxBuH,EAAK5D,UAAU0E,OAAO9E,EAAMqD,WAAY,GACxC,EAAKX,MAAMO,aAAae,GACxBhE,EAAMqD,aACN,EAAKX,MAAMI,cAAc9C,KAQ1B,OAGPqG,gBAAiB,SAACtC,GACd,IAAM/D,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1C8C,EAAMW,EAAO,GAAK,EACL,MAAfzD,EAAOnF,MACPmF,EAAOnF,KAAO,CAAEpB,MAAO,EAAGC,QAAQ,GAClC,EAAK0I,MAAMO,aAAae,IACjB1D,EAAOnF,KAAKpB,MAAQqJ,GAAO,GAAK9C,EAAOnF,KAAKpB,MAAQqJ,GAAO,KAClE9C,EAAOnF,KAAKpB,OAASqJ,EACrB9C,EAAOnF,KAAKnB,QAAU+J,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIE,SAAS3D,EAAOnF,KAAKpB,OAC3E,EAAK2I,MAAMO,aAAae,KAIhCsC,iBAAkB,SAACC,GACf,IAAMvG,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1CkG,EAAQtL,EAA0BqL,GACxCjG,EAAOnF,KAAP,eAAmBqL,EAAMrL,MACzBmF,EAAOlF,UAAYoL,EAAMpL,UACzB,EAAKsH,MAAMO,aAAae,IAG5ByC,kBAAmB,WACf,IAAMzG,EAAQ,EAAKhE,MAAMO,WACnByH,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1C7E,EAASH,EAAiBgF,EAAOlF,gBACpBM,GAAfD,EAAOT,OACPsF,EAAOW,QAAU5D,GAAkB5B,EAAOT,MAC1C,EAAK0H,MAAMO,aAAae,MAjTwB,KAsTrDvI,OAAS,CAEZiL,OAAQ,SAAC3C,GACL,IAAM/D,EAAQ,EAAKhE,MAAMO,WACnBoK,EAAM3G,EAAM4G,UACZ5C,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1C8C,EAAMW,EAAO,GAAK,EAClBhK,EAAQ4M,EAAI5M,MAAQqJ,EACtBrJ,GAAS,GAAKA,GAAS4M,EAAIE,QAAQjF,OAAS,IAC5C+E,EAAI5M,OAASqJ,EACb9C,EAAOlF,UAAYuL,EAAIE,QAAQF,EAAI5M,OACnC,EAAK2I,MAAMI,cAAc9C,GACzB,EAAK0C,MAAMO,aAAae,KAIhC8C,OAAQ,WACJ,IAAM9G,EAAQ,EAAKhE,MAAMO,WACnBoK,EAAM3G,EAAM4G,UACZ5C,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC5CqG,EAAII,WAAWnF,OAAS,IACxBtB,EAAOlF,UAAYuL,EAAII,WAAW,GAClC,EAAKrE,MAAMO,aAAae,KAIhCgD,SAAU,WACN,IAAMhH,EAAQ,EAAKhE,MAAMO,WACnBoK,EAAM3G,EAAM4G,UACZ5C,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC5CqG,EAAIM,aAAarF,OAAS,IAC1BtB,EAAOlF,UAAYuL,EAAIM,aAAa,GACpC,EAAKvE,MAAMO,aAAae,MAzVwB,KA+VrDtC,KAAO,CAEVC,SAAU,SAAC/E,GACP,EAAKsF,SAAStI,EAAW8C,eAAgB,CAAEE,eAG/CsK,aAAc,SAACC,GACX,IAAMnD,EAAO,EAAKhI,MAAMS,UACxBuH,EAAKmD,UAAYA,EACjB,EAAKzE,MAAMO,aAAae,IAG5BoD,cAAe,SAAC/H,GACZ,EAAK6C,SAAStI,EAAWmD,gBAAiB,CACtCC,YAAY,2BACL,EAAKhB,MAAMgB,aADP,IACoBqC,uBAKvCgI,oBAAqB,SAACC,EAAkBC,GAEpC,IAAMlE,EAAa,EAAKrH,MAAMW,YAAY0G,WAC1C,IAAoB,IAAhBA,EAAJ,CAWA,IATA,IAAMhD,EAAO,EAAKrE,MAAMS,UAAU2D,UAAU,GAAGE,OACzCkH,EAAgB3N,EAAYqH,KAAI,SAAAqD,GAAK,OAAKlE,EAAKnB,SAAWqF,GAAS,MACnE4C,EAAY,EAAKnL,MAAMS,UAAU0K,UAEjCM,EAAMN,EAAU9D,GAChBqE,EAAiBD,EAAIE,WACrBvG,EAAoB,WAATmG,EAAoB,EAAI,GACrCK,EAAiBH,EAAIE,WAElBL,EAAUG,EAAIE,WAAa,EAAIF,EAAIE,WAAahK,IAGnD,GAFAiK,GAAkBxG,GAAYkG,GAAW,EAAI,GAEhC,UAATC,GACU,UAATA,GAAoBC,EAAcvD,SAASvG,GAAuBkK,IACrE,CACEH,EAAIE,WAAaC,EACjB,MAKJF,IAAmBD,EAAIE,aACvB3I,GAAcyI,EAAIE,WAAY,EAAK3L,OAEnC,EAAK0F,KAAKwF,aAAaC,EAAUhD,SAEjC,EAAKzC,KAAKmG,mBAIlB9E,aAAc,SAACC,GACX,IAAMhD,EAAQ,EAAKhE,MAAMW,YACzBqD,EAAMgD,UAAYA,EAClB,EAAKtB,KAAKC,SAAS3B,IAGvB8H,UAAW,SAAC3E,GACR,IAAMnD,EAAQ,EAAKhE,MAAMW,YAEnBwK,EADO,EAAKnL,MAAMS,UACD0K,WAGG,IAAtBnH,EAAMqD,WACF8D,EAAUvF,OAAS,IACnB5B,EAAMqD,WAAarD,EAAM+H,UACzB/H,EAAMgI,UAAYhI,EAAMqD,WACxB,EAAK3B,KAAKC,SAAS3B,KAGlBmD,EAAgCnD,EAAMqD,WAAa8D,EAAUvF,OAAS,EAA7D5B,EAAMqD,WAAa,KAC7BrD,EAAMqD,YAAeF,EAAS,GAAK,EACnCnD,EAAMgI,UAAYhI,EAAMqD,WACxB,EAAK3B,KAAKC,SAAS3B,IAI3B,EAAK0B,KAAKuG,gBACV,EAAKvG,KAAKwG,eAAelI,EAAMqD,aAGnC8E,cAAe,SAAChF,GACZ,IAAMnD,EAAQ,EAAKhE,MAAMW,YAEnBwK,EADO,EAAKnL,MAAMS,UACD0K,WAEG,IAAtBnH,EAAMqD,cAELF,EAA+BnD,EAAMgI,UAAYb,EAAUvF,OAAS,EAA3D5B,EAAMgI,UAAY,KAC5BhI,EAAMgI,WAAc7E,EAAS,GAAK,EAClC,EAAKzB,KAAKC,SAAS3B,IAEvB,EAAK0B,KAAKuG,kBAGdC,eAAgB,SAAC7E,GACb,IAAMrD,EAAQ,EAAKhE,MAAMW,YACnByD,EAAY,EAAKpE,MAAMS,UAAU2D,UACjCgI,EAAIxK,GAAyB,EAAK5B,MAAMS,UAAU0K,UAAU9D,GAAYgB,KAAOrE,EAAMqI,UACvFC,EAAO,EACLC,EAAgBnI,EAAU5E,MAAK,SAACgF,GAClC,GAAqB,UAAjBA,EAAQtE,KAAkB,CAC1B,IACMiK,EADS3F,EAAQF,OACFM,QAAUZ,EAAMqI,UACrC,GAAID,GAAKE,GAAQF,EAAIE,EAAOnC,EAExB,OAAO3F,EAEX8H,GAAQnC,MAGhBnG,EAAMwB,WAAWC,cAA4B/F,GAAjB6M,EAA6B,KAAOA,EAChE,EAAK7G,KAAKC,SAAS3B,IAGvBwI,SAAU,WACN,IAAMxI,EAAQ,EAAKhE,MAAMW,YACzB,IAA0B,IAAtBqD,EAAMqD,WAAV,CAEA,IFnduBoF,EAAsBC,EEmdvC1E,EAAO,EAAKhI,MAAMS,UAClB0K,EAAYnD,EAAKmD,UACjBM,EAAMN,EAAUnH,EAAMqD,YACtBgB,GFtdiBoE,EEsdQhB,EAAIpD,IFtdUqE,EEsdLjB,EAAI9G,IFrd7CvC,GAAmB,CACtBL,KAAM0K,EAAO1K,KAAO2K,EAAO3K,KAC3BC,KAAMyK,EAAOzK,KAAO0K,EAAO1K,KAC3BC,MAAOwK,EAAOxK,MAAQyK,EAAOzK,MAC7BC,SAAUuK,EAAOvK,SAAWwK,EAAOxK,SACnCC,SAAUsK,EAAOtK,SAAWuK,EAAOvK,YEidzBwK,EAAgB/K,GAAyByG,GACzCuE,EAAgB5I,EAAMqD,aAAe8D,EAAUvF,OAAS,GAAK,EAAIhE,GAAyBuJ,EAAUnH,EAAMqD,WAAa,GAAGgB,KAC1HwE,EAAiBF,EAAgB,EAAI3I,EAAMnB,WAE1B,IAAnB+J,GAAwBC,GAAkBD,KAC1C5E,EAAKmD,UAAUrC,OAAO9E,EAAMqD,WAAa,EAAG,EAAG,CAC3CgB,MACAsD,WAAYF,EAAIE,WAChBhH,IAAK/B,GAAwBoB,EAAMnB,SAAU,KAEjD,EAAK6D,MAAMO,aAAae,GACxBhE,EAAMqD,aACNrD,EAAMgI,UAAYhI,EAAMqD,WACxB,EAAK3B,KAAKC,SAAS3B,IAGvB,EAAK0B,KAAKuG,kBAGda,YAAa,WACT,IAAM9I,EAAQ,EAAKhE,MAAMW,YACnBwK,EAAY,EAAKnL,MAAMS,UAAU0K,UAFxB,EAGgBnH,EAAMqD,WAAarD,EAAMgI,UAAY,CAAChI,EAAMqD,WAAYrD,EAAMgI,WAAa,CAAChI,EAAMgI,UAAWhI,EAAMqD,YAHnH,mBAGR0F,EAHQ,KAITC,EAJS,KAIWD,EAAa,EACvC5B,EAAUrC,OAAO9E,EAAMqD,WAAY2F,GACnC,EAAKtH,KAAKwF,aAAaC,GACvBnH,EAAMqD,WAAa0F,EAAa,EAChC/I,EAAMgI,UAAYhI,EAAMqD,WACxB,EAAK3B,KAAKC,SAAS3B,IAGvBiJ,YAAa,SAACC,GAEV,IAAMlJ,EAAQ,EAAKhE,MAAMW,YACzB,IAA0B,IAAtBqD,EAAMqD,WAAV,CAEA,IAAMW,EAAO,EAAKhI,MAAMS,UAClB0K,EAAYnD,EAAKmD,UACjBM,EAAMN,EAAUnH,EAAMqD,YACtB8F,EAAevL,GAAyB6J,EAAI9G,KAC5CyI,EAAiBxL,GAAyB6J,EAAIpD,KAAO8E,EACrDP,EAAgB5I,EAAMqD,aAAe8D,EAAUvF,OAAS,GAAK,EAAIhE,GAAyBuJ,EAAUnH,EAAMqD,WAAa,GAAGgB,KAC1HgF,EAAe,EAAIrJ,EAAMnB,SAO/B,GANmBqK,GAII,IAAnBN,GAAwBQ,EAAiBC,GAAgBT,EAFzDO,EAAeE,EAIJ,CACX,IAAMC,EAAS1L,GAAyB6J,EAAI9G,KAAO0I,GAAgBH,EAAW,GAAK,GACnFzB,EAAI9G,IAAM/B,GAAwBoB,EAAMnB,SAAUyK,EAAStJ,EAAMnB,UACjEmF,EAAKmD,UAAYA,EAAUhD,QAC3B,EAAKzB,MAAMO,aAAae,MAIhCuF,UAAW,SAACC,GAER,IAAMxJ,EAAQ,EAAKhE,MAAMW,YACzB,IAA0B,IAAtBqD,EAAMqD,WAAV,CAEA,IAAMW,EAAO,EAAKhI,MAAMS,UAClB0K,EAAYnD,EAAKmD,UACjBM,EAAMN,EAAUnH,EAAMqD,YACtBoG,EAAgB7L,GAAyB6J,EAAIpD,KAE7C+E,EAAiBK,EADF7L,GAAyB6J,EAAI9G,KAE5C+I,EAAuC,IAArB1J,EAAMqD,WAAmB,EAAIzF,GAAyBuJ,EAAUnH,EAAMqD,WAAa,GAAGgB,KAC1GzG,GAAyBuJ,EAAUnH,EAAMqD,WAAa,GAAG1C,KACvDgJ,EAAiB3J,EAAMqD,aAAe8D,EAAUvF,OAAS,GAAK,EAAIhE,GAAyBuJ,EAAUnH,EAAMqD,WAAa,GAAGgB,KAC3HuF,EAAa,EAAI5J,EAAMnB,SAO7B,GANmB2K,GAIK,IAApBG,GAAyBP,EAAiBQ,GAAcD,EAFxDF,EAAgBG,GAAcF,EAInB,CACX,IAAMJ,EAAS1L,GAAyB6J,EAAIpD,KAAOuF,GAAcJ,EAAW,GAAK,GACjF/B,EAAIpD,IAAMzF,GAAwBoB,EAAMnB,SAAUyK,EAAStJ,EAAMnB,UACjEmF,EAAKmD,UAAYA,EAAUhD,QAC3B,EAAKzB,MAAMO,aAAae,MAIhCiE,cAAe,WACX,IAAMjI,EAAQ,EAAKhE,MAAMW,YACnBkN,EAAQ,EAAK7N,MAAMc,KAAKgN,OAAOD,MAC/BxG,EAAarD,EAAMgI,UACzB,IAAoB,IAAhB3E,GAA8B,MAATwG,EAAe,CACpC,IAAME,EAASnM,GAAyB,EAAK5B,MAAMS,UAAU0K,UAAU9D,GAAYgB,KAAOrE,EAAMqI,UAChGwB,EAAMG,SAAS,CAAE1B,KAAMyB,EAAS,IAAKE,SAAU,aAIvDpC,cAAe,WACX,IAAM7H,EAAQ,EAAKhE,MAAMW,YACnBkN,EAAQ,EAAK7N,MAAMc,KAAKgN,OAAOD,MACrC,IAA0B,IAAtB7J,EAAMqD,YAA8B,MAATwG,EAAe,CAC1C,IAAMK,EAAS,EAAKlO,MAAMS,UAAU0K,UAAUnH,EAAMqD,YAAYsE,WAAa3F,GAC7E6H,EAAMG,SAAS,CAAEG,IAAKD,EAASL,EAAMO,aAAe,EAAGH,SAAU,aAIzEI,aAAc,YAEgB,IADZ,EAAKrO,MAAMW,YACf0G,YFzbM,SAACrH,EAAc+D,GAEvC,IAAMC,EAAQhE,EAAMW,YACdqH,EAAOhI,EAAMS,UACbW,EAAiC,GACjCgC,EAAapD,EAAMgB,YAAYqC,gBAE/BiC,EADO0C,EAAK5D,UAAU,GAAGE,OACdgB,IACjBtB,EAAM+H,UAAY/H,EAAMqD,WACxBrD,EAAMsK,WAAY,EAElB,IADA,IAAIC,GAAa,EAViD,WAWzDtL,GACL,IAAMpB,EAAQmG,EAAKmD,UAAUlI,GACvBoF,EAAMzG,GAAyBC,EAAMwG,KACrC1D,EAAM/C,GAAyBC,EAAM8C,KACrC6J,EAAQ3M,EAAM8J,WACd8C,EAAO,GAAKnJ,EAAM+C,GAGL,IAAfkG,IACAA,EAAYE,GAGhBrN,EAAatB,KACTyF,YAAW,WAMP,GALAvB,EAAMqD,WAAapE,EACnBe,EAAMgI,UAAYhI,EAAMqD,WAExBtD,EAAW2B,KAAKC,SAAS3B,GACzBD,EAAW2B,KAAKuG,gBACE,MAAd7I,EAAoB,CACpB,IAAMF,EAAWxB,GAAuB8M,GAClCrL,EAAY7E,EAAiB4E,EAAW,IACxC1B,EAASc,KAAKC,OAAQ,GAAKiM,EAAS,GAAK,IAAM,EACrDpL,EAAWE,OACXF,EAAWG,KAAKJ,EAAY3B,EAAQ,EAAG,CAAEgC,SAAU,GAAK8B,EAAMX,OAE9C,KAApB8J,EAAOF,KAGXtL,IAAM+E,EAAKmD,UAAUvF,OAAS,GAC9BxE,EAAatB,KACTyF,YAAW,WACPvB,EAAMsK,WAAY,EAClBtK,EAAMqD,WAAarD,EAAM+H,UACzB/H,EAAMgI,UAAYhI,EAAMqD,WACxBjG,EAAavB,SAAQ,SAAA6O,GAAE,OAAIC,cAAcD,MACzC1O,EAAMgB,YAAYkD,QAAQ0K,aAC1B7K,EAAW2B,KAAKC,SAAS3B,KACY,KAArCyK,EAAOF,EAAY,GAAKjJ,EAAMX,MAtCrC1B,EAAIe,EAAMqD,WAAYpE,EAAI+E,EAAKmD,UAAUvF,OAAQ3C,IAAM,EAAvDA,GA4CTY,GAA2B,IAAZ0K,EAAkBvO,EAAO+D,EAAY3C,GAGpD2C,EAAWoC,OAAOM,gBAAgBrF,GAClC2C,EAAW2B,KAAKC,SAAS3B,GEgYjBqK,CAAa,EAAKrO,MAAO,KA3kB2B,KA+kBrDiF,QAAU,CAEb4J,kBAAmB,WACf,IAAM7K,EAAQ,EAAKhE,MAAMO,WAEnB+D,EADO,EAAKtE,MAAMS,UACJ2D,UAAUJ,EAAMqD,YAAY/C,OAC1CC,EAAQP,EAAMG,iBAAiBH,EAAMqD,YAC3CrD,EAAM8K,SAAW,UACjB,EAAKpI,MAAMI,cAAc9C,GACzB,IAAM+K,EAAe,EAAK9J,QAAQ+J,oBAAoB1K,EAAOW,QAAQ3D,aACrE,EAAK2D,QAAQU,SAAS,CAClBsJ,UAAW,CACP7P,UAAWkF,EAAOlF,UAClBwF,QAASN,EAAOM,QAChBC,OAAQP,EAAOO,OACfqK,WAAa5K,EAAOnF,KAAqBpB,MAAQwG,EAAMrB,UAAY,IAEvE6L,eACAtN,QAAS,QAIjB0N,mBAAoB,WAChB,IAAMnL,EAAQ,EAAKhE,MAAMO,WACzByD,EAAM8K,SAAW,OACjB,EAAKpI,MAAMI,cAAc9C,IAG7B2B,SAAU,SAACzE,GACP,EAAKgF,SAAStI,EAAWqD,kBAAmB,CAAEC,kBAGlDkO,gBAAiB,WACb,MAAO,CACHC,YAAa,CAAC,CAAEC,KAAM,EAAGC,OAAO,EAAOC,KAAM,IAC7C3B,MAAO,CAAC,CAAC,OACT4B,aAAc,CAAC,KAIvBT,oBAAqB,SAAC1N,GAElB,IADA,IAAMuM,EAAQ,IAAI6B,MAAiB,GAD4B,WAEtDzM,GACL4K,EAAM5K,GAAK,IAAIyM,MAAe,GAE9B,IADA,IAAMC,EAAM9B,EAAM5K,GAJyC,WAKlD4C,GACL,IAAM+J,EAAUtO,EAAY9B,MAAK,SAAAqQ,GAC7B,GAAIA,EAAQrO,SAAWyB,GAAK4M,EAAQtO,SAAWsE,EAC3C,OAAOgK,KAGfhC,EAAM5K,GAAG4C,GAAgB,MAAX+J,GANT/J,EAAI,EAAGA,EAAI8J,EAAI/J,OAAQC,IAAM,EAA7BA,IAHJ5C,EAAI,EAAGA,EAAI4K,EAAMjI,OAAQ3C,IAAM,EAA/BA,GAYT,OAAO4K,GAGXiC,wBAAyB,WACrB,IAAMvP,EAAa,EAAKP,MAAMO,WACxByH,EAAO,EAAKhI,MAAMS,UAClB6D,EAAS0D,EAAK5D,UAAU7D,EAAW8G,YAAY/C,OAC/CpD,EAAe,EAAKlB,MAAMkB,aAC1B6N,EAAe7N,EAAa6N,aAC5B9J,EAAUX,EAAOW,QAEvB,GADAA,EAAQ3D,YAAYsE,OAAS,EACT,MAAhBmJ,EACA,IAAK,IAAI9L,EAAI,EAAGA,EAAI8L,EAAanJ,OAAQ3C,IACrC,IAAK,IAAI4C,EAAI,EAAGA,EAAIkJ,EAAa9L,GAAG2C,OAAQC,IACpCkJ,EAAa9L,GAAG4C,IAChBZ,EAAQ3D,YAAYxB,KAAK,CAAE0B,OAAQyB,EAAG1B,OAAQsE,IAK9D,GAA4B,MAAxB3E,EAAaO,QACb6C,EAAOW,QAAQxD,QAAU,SACtB,CACH,IAAMsO,EAAc7O,EAAaO,QAAQuO,SAASpK,OAC5CqK,EAA6B,GACnC/O,EAAaO,QAAQwO,OAAOpQ,SAAQ,SAAAqQ,GAChC,IAAMC,EAAkBD,EAAMb,YACxBe,EAAgC,GACtCF,EAAMrC,MAAMhO,SAAQ,SAACwQ,EAAQpN,GACzBoN,EAAOxQ,SAAQ,SAACyQ,EAAMzK,GAClBuK,EAAQtQ,KAAK,CAAEsM,EAAGvG,EAAG0K,EAAGtN,EAAGuN,IAAa,MAARF,EAAe,IAAMA,EAAKG,eAGlER,EAAOnQ,KAAK,CAAEqQ,OAAMC,eAExBnL,EAAQxD,QAAU,CAAEsO,cAAaE,UAGrC,EAAKvJ,MAAMO,aAAae,IAkB5B0I,iBAAkB,WAEd,IAAM1M,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QAEhByO,EAAQzO,EAAQwO,OAAOxO,EAAQkP,YAC/BC,EAAUV,EAAMb,YAChBwB,EAAkB,CAAEvB,KAAMsB,EAAQnP,EAAQqP,UAAUxB,KAAME,KAAM,EAAGD,OAAO,GAChFqB,EAAQ9H,OAAOrH,EAAQqP,SAAW,EAAG,EAAGD,GACxCX,EAAMrC,MAAMhO,SAAQ,SAACkR,GACjBA,EAAOjI,OAAOrH,EAAQqP,SAAW,EAAG,EAAG,SAE3C,EAAK7L,QAAQU,SAAS3B,IAG1BgN,kBAAmB,SAACC,GAEhB,IAAMjN,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QAChByO,EAAQzO,EAAQwO,OAAOxO,EAAQkP,YAEjCO,EAAYzP,EAAQqP,UACxBI,GAAa,GAAKD,EAAU,GAAK,KAChB,GAAKC,GAAahB,EAAMb,YAAYzJ,OAAS,IAC1DnE,EAAQqP,SAAWI,GAEvB,EAAKjM,QAAQU,SAAS3B,IAG1BmN,iBAAkB,SAACC,GAEf,IAAMpN,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QAChB1D,EAAQ0D,EAAQ4P,cAEjBD,EAAqBrT,EAAQ0D,EAAQuO,SAASpK,OAAS,EAA9C7H,EAAQ,KAClB0D,EAAQ4P,cAAkBD,EAAc,GAAJ,GAExC,EAAKnM,QAAQU,SAAS3B,IAG1BsN,kBAAmB,SAAChC,GAChB,IAAMtL,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QACRA,EAAQwO,OAAOxO,EAAQkP,YACnBtB,YAAY5N,EAAQqP,UAClCxB,KAAOA,EACX,EAAKrK,QAAQU,SAAS3B,IAG1BuN,qBAAsB,WAClB,IAAMvN,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QAEhBgK,EADQhK,EAAQwO,OAAOxO,EAAQkP,YACnBtB,YAAY5N,EAAQqP,UACtCrF,EAAI8D,OAAS9D,EAAI8D,MACjB,EAAKtK,QAAQU,SAAS3B,IAI1BwN,SAAU,WACN,IACM/P,EADQ,EAAKzB,MAAMkB,aACHO,QAEtB,OADcA,EAAQwO,OAAOxO,EAAQkP,YACxB9C,MAAMpM,EAAQuO,SAASpK,OAAS,EAAInE,EAAQ4P,cAAc5P,EAAQqP,WAGnFW,SAAU,SAAC5P,GACP,IAAMmC,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QACRA,EAAQwO,OAAOxO,EAAQkP,YAC/B9C,MAAMpM,EAAQuO,SAASpK,OAAS,EAAInE,EAAQ4P,cAAc5P,EAAQqP,UAAYjP,EACpF,EAAKoD,QAAQU,SAAS3B,IAG1B0N,aAAc,WACV,IAAM1N,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QAChByO,EAAQzO,EAAQwO,OAAOxO,EAAQkP,YACrCT,EAAMrC,MAAMhO,SAAQ,SAACkR,GACjBA,EAAOjI,OAAOrH,EAAQqP,SAAU,MAEpCZ,EAAMb,YAAYvG,OAAOrH,EAAQqP,SAAU,GAI3CrP,EAAQqP,WACR,EAAK7L,QAAQU,SAAS3B,IAG1B2N,YAAa,WACT,IAAM3N,EAAQ,EAAKhE,MAAMkB,aACnBO,EAAUuC,EAAMvC,QACtBA,EAAQkP,WAAoC,IAAvBlP,EAAQkP,WAAmB,EAAI,EACpDlP,EAAQqP,SAAW,EACnBrP,EAAQ4P,cAAgB,EACxB,EAAKpM,QAAQU,SAAS3B,KA5xB1B4N,KAAK5R,MAAQA,EACb4R,KAAK1L,SAAW,SAAChG,EAAkBC,GAAnB,OAAuC+F,EAAS,CAAEhG,OAAMC,cCGnE0R,GAAsB,CAC/BC,QAAS,CACLC,UCCG,CACHC,KAAM,CACFC,YAAa,YACbC,YAAa,aACbC,YAAa,UACbC,YAAa,YACbC,SAAU,IACVC,WAAY,IACZC,UAAW,IACXC,UAAW,SACXC,SAAU,QACVC,QAAS,UACTC,QAAS,YACTC,QAAS,aACTC,QAAS,YACTC,WAAY,MDfhBC,WEzBoC,CACxCC,gBAAiB,YF0BjB3S,YAAa,CACTgG,UAAU,EACVE,iBAAkB,EAClBM,cAAe,EACfoM,WAAY,QAEhB/R,aAAc,KACdX,WAAY,CACR2S,QAAQ,EACRtK,YAAa,EACbvB,YAAa,EACblD,iBAAkB,GAClBsD,iBAAkB,GAClBT,UAAW,CACPyL,UAAU,EACVK,YAAY,GAEhBlI,UAAW,KACXkE,SAAU,OACVR,WAAW,EACX6E,QAAQ,GAEZxS,YAAa,CACT0G,YAAa,EACb2E,WAAY,EACZD,WAAY,EACZlJ,SAAU,EACVwJ,UAAW,IACX7G,WAAY,CACR4N,OAAO,EACPC,KAAM,CAAEjH,EAAG,EAAGmE,EAAG,GACjBpG,MAAO,EACPmJ,UAAW,EACXC,SAAU,EACVC,WAAY,CAAEzV,OAAQ,EAAG0V,KAAM,SAAUC,UAAU,EAAOC,QAAQ,GAClElO,SAAU,KACVmO,iBAAkB,EAClBC,iBAAkB,GAEtBC,cAAe,CACXjV,KAAM,SACNkV,KAAM,GAEV/M,UAAW,CACPgN,WAAW,EACXxS,QAAQ,EACRyS,QAAQ,EACRC,MAAM,EACNC,OAAO,GAEX7F,WAAW,EACX6E,QAAQ,GAEZ1S,UAAW,CACP2D,UAAW,GACX+G,UAAW,IAEfnK,YAAa,CACTkD,QJxEG,IAAIkQ,KAAQ,CACf,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,iEACPC,gBIiDC1Q,MAAO,KACPN,gBAAiB,MAGrBvC,KAAM,CACFwT,UAAW,CACPtC,KAAM,IAEVlE,OAAQ,CACJD,MAAO,KACP0G,QAAS,KACT/J,MAAO,KACPgE,MAAO,OAGfpN,aAAc,I,QGnFHoT,GAhBQ,WAAO,IAAD,EAEKC,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAGF2U,GALmB,EAEV5Q,WAGY,SADd/D,EAAMK,YAAY4S,YAG/B,OACI,eAAC2B,GAAD,CAAQD,UAAWA,EAAnB,SACI,eAACE,GAAD,OASND,GAASE,IAAOC,IAAV,iKAGG,SAAA3W,GAAK,OAAIA,EAAMuW,UAAY,QAAU,UAO9CE,GAASC,IAAOC,IAAV,2NChBCC,GAAc,SAAC5W,GAA6B,IAAD,EACpB6W,mBAAS7W,EAAM8W,UADK,mBAC7CA,EAD6C,KACnCC,EADmC,KAgBpD,OAJAC,qBAAU,WACND,EAAY/W,EAAM8W,YACnB,CAAC9W,EAAM8W,WAGN,uCACI,eAACG,GAAD,UAEQjX,EAAMkX,YAAYpQ,KAAI,SAACqQ,EAAKxX,GACxB,OAAO,eAAC,GAAD,CACSc,KAAM0W,EAAI1W,KAAM2W,KAAMD,EAAIC,KAAMC,SAAU1X,GAASmX,EAAUQ,UAAWH,EAAII,QACxFC,UAAW,kBAnBZ,SAAC7X,QACQ2B,GAAxBtB,EAAMyX,eACNzX,EAAMyX,eAAe9X,GAErBoX,EAAYpX,GAeqB8X,CAAe9X,KAD3BA,QAMrB,eAAC+X,GAAD,UAEQ1X,EAAMkX,YAAYpQ,KAAI,SAACqQ,EAAKxX,GACxB,OAAO,eAAC,GAAD,CAA6BgY,KAAMR,EAAIQ,KAAMN,SAAU1X,IAAUmX,GAA3CnX,YAQ/CiY,GAAe,SAAC5X,GAOlB,OACI,gBAAC6X,GAAD,CACIR,SAAUrX,EAAMqX,SAChBS,QAAS,kBAAM9X,EAAMwX,aAFzB,UAII,eAACO,GAAD,UAAQ/X,EAAMoX,OACd,eAACY,GAAD,UAAShY,EAAMS,WAKrBwX,GAAkB,SAACjY,GAIrB,OACI,eAACkY,GAAD,CAAWb,SAAUrX,EAAMqX,SAA3B,SACKrX,EAAM2X,QAKbV,GAAaP,IAAOC,IAAV,uTAYVe,GAAYhB,IAAOC,IAAV,gRAWTuB,GAAYxB,IAAOC,IAAV,6MAST,SAAA3W,GAAK,OAAKA,EAAMqX,SAAiCc,YAAxC,gDAAkBA,YAAlB,2CAGTN,GAAQnB,IAAOC,IAAV,mXAQL,SAAA3W,GACE,OAAIA,EAAMqX,SACCc,YAAP,+HAKOA,YAAP,sHAWN,SAAAnY,GAAK,OAAIA,EAAMqX,SAAW,GAAKc,YAAtB,qRAiBTJ,IALYI,YAAH,2FAKDzB,IAAOC,IAAV,8PAYLqB,GAAStB,IAAOC,IAAV,gO,0BC/JCyB,GAAa,SAACpY,GAA4B,IAAD,EAClB6W,mBAAS7W,EAAM8W,UADG,mBAC3CA,EAD2C,KACjCC,EADiC,KAgBlD,OAJAC,qBAAU,WACND,EAAY/W,EAAM8W,YACnB,CAAC9W,EAAM8W,WAGN,uCACI,eAAC,GAAD,UAGQ9W,EAAMkX,YAAYpQ,KAAI,SAACqQ,EAAKxX,GACxB,OAAO,eAAC,GAAD,CACSc,KAAM0W,EAAI1W,KAAM4W,SAAU1X,GAASmX,EAAUQ,UAAWH,EAAII,QACxEC,UAAW,kBApBZ,SAAC7X,QACQ2B,GAAxBtB,EAAMyX,eACNzX,EAAMyX,eAAe9X,GAErBoX,EAAYpX,GAgBqB8X,CAAe9X,KAD3BA,QAMrB,eAAC,GAAD,UAGQK,EAAMkX,YAAYpQ,KAAI,SAACqQ,EAAKxX,GACxB,OAAO,eAAC,GAAD,CAAyBgY,KAAMR,EAAIQ,KAAMN,SAAU1X,IAAUmX,GAA3CnX,YAQ3C0Y,GAAW,SAACrY,GAMd,OACI,eAACsY,GAAD,CACIhB,UAAWtX,EAAMsX,UACjBD,SAAUrX,EAAMqX,SAChBS,QAAS,kBAAM9X,EAAMwX,aAHzB,SAIKxX,EAAMS,QAKb8X,GAAc,SAACvY,GASjB,OACI,eAAC,GAAD,CAAWqX,SAAUrX,EAAMqX,SAA3B,SACKrX,EAAM2X,QAKbV,GAAaP,IAAOC,IAAV,2EAIVe,GAAYhB,IAAOC,IAAV,0LAQTuB,GAAYxB,IAAOC,IAAV,4HAMT,SAAA3W,GAAK,OAAKA,EAAMqX,SAAiCc,YAAxC,gDAAkBA,YAAlB,2CAGTG,GAAY5B,IAAOC,IAAV,kUAOT,SAAA3W,GACE,OAAIA,EAAMqX,SACCc,YAAP,2TAUOA,YAAP,qWAQOnY,EAAMsX,UAAiBa,YAAxB,0HAAmB,OC7GxBK,IAzBgB9B,IAAOC,IAAV,6FAMHD,IAAOC,IAAV,wDAIGD,IAAOC,IAAV,4EAKYD,IAAOC,IAAV,qKAUIwB,YAAH,4NAWjBM,GAAeN,YAAH,4ECUVO,GAnCX,WAAYzS,GAAmB,IAAD,gCAJtB5D,eAIsB,OAFtBsW,cAEsB,OAcvB1E,SAAW,SAACzN,EAAiBzF,EAAmBC,GAEnD,IAAMK,EAASH,EAAiBF,GAC1B6F,OAAuCvF,GAAfD,EAAOT,KAAoB,CAAEsC,YAAa,GAAIG,QAAS,MAASJ,GAAkB5B,EAAOT,MACvH,EAAKyB,UAAU2D,UAAU0E,OAAO,EAAKiO,SAAU,EAAG,CAC9C7W,KAAM,QAASoE,OAAQ,CACnBM,UAASC,OAAQ,CAAEC,KAAM,EAAGC,KAAM,GAAK5F,OAAM0J,GAAI,KAAMzJ,YACvD6F,aAGR,EAAK8R,YAxBqB,KA2BvBC,iBAAmB,SAACpS,EAAiB2F,GACxC,IAAMC,EAAQtL,EAA0BqL,GACxC,EAAK8H,SAASzN,EAAS4F,EAAMrL,KAAMqL,EAAMpL,YA7Bf,KAgCvB6X,aAAe,WAAQ,OAAO,EAAKxW,WA/BtCmR,KAAKnR,UAAY,CACb2D,UAAW,CACP,CAAElE,KAAM,OAAQoE,OAAQD,GACxB,CAAEnE,KAAM,QAASoE,OAAQ,CAAE4S,MAAO,UAClC,CAAEhX,KAAM,UAAWoE,OAAQ,CAAE0E,UAAW,YACxC,CAAE9I,KAAM,QAASoE,OAAQ,CAAE4S,MAAO,SAEtC/L,UAAW,IAGfyG,KAAKmF,SAAW,GC8DTI,GA9EG,WAAO,IAAD,EAEU1C,qBAAWC,IAAjC1U,EAFY,EAEZA,MAAO+D,EAFK,EAELA,WAFK,EAIQkR,mBAAiB,IAJzB,mBAIbmC,EAJa,KAILC,EAJK,KAMpB,OACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAAOtB,QAAS,WAoBZmB,EAAUI,KAAKC,UAlBS,CACpBtT,UAAW,CACP,CAAElE,KAAM,OAAQoE,OAAQ,CAAEpB,SAAU,EAAGoC,IAAK,IAAKqS,MAAO,QAASC,cAAe,QAChF,CAAE1X,KAAM,QAASoE,OAAQ,CAAE4S,MAAO,UAClC,CAAEhX,KAAM,UAAWoE,OAAQ,CAAE0E,UAAW,YACxC,CACI9I,KAAM,QAASoE,OAAQ,CACnBM,QAAS,EAAGC,OAAQ,CAAEC,KAAM,EAAGC,KAAM,GAAK5F,KAAM,KAAM0J,GAAI,KAAMzJ,UAAW,QAC3E6F,QAAS,CACL3D,YAAa,GACbG,QAAS,QAIrB,CAAEvB,KAAM,QAASoE,OAAQ,CAAE4S,MAAO,SAEtC/L,UAAW,OAlBnB,oCAsBA,eAACqM,GAAD,CAAOtB,QAAS,WACZ,IAAM2B,EAAU,IAAIf,GAAa,CAAE5T,SAAU,EAAGoC,IAAK,IAAKqS,MAAO,QAASC,cAAe,QACzFC,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5BK,EAAUI,KAAKC,UAAUG,EAAQZ,kBAXrC,sHAaA,eAACO,GAAD,CAAOtB,QAAS,WACZ,IAAM2B,EAAU,IAAIf,GAAa,CAAE5T,SAAU,EAAGoC,IAAK,IAAKqS,MAAO,QAASC,cAAe,QACzFC,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5Ba,EAAQb,iBAAiB,EAAG,GAC5BK,EAAUI,KAAKC,UAAUG,EAAQZ,kBAXrC,6GAcJ,gBAACa,GAAD,WACI,eAACC,GAAD,CAASxP,MAAO6O,EAAQY,SAAU,SAAAC,GAAC,OAAIZ,EAAUY,EAAEzP,OAAOD,UAC1D,gBAAC2P,GAAD,WACI,eAACC,GAAD,CAASjC,QAAS,WACdmB,EAAUI,KAAKC,UAAU1X,EAAMS,aADnC,oBAGA,eAAC0X,GAAD,CAASjC,QAAS,WACd,IAAMlO,EAAOyP,KAAKW,MAAMhB,GACxBrT,EAAW2C,MAAMO,aAAae,GAC9BhI,EAAMO,WAAW8G,WAAa,EAC9BtD,EAAW2C,MAAMI,cAAjB,eAAoC9G,EAAMO,aAE1CwD,EAAW2C,MAAME,iBAAiB,IANtC,6BAgBd0Q,GAAQxC,IAAOC,IAAV,sJAQLwC,GAAQzC,IAAOC,IAAV,+KASL+C,GAAShD,IAAOC,IAAV,+KASNyC,GAAQ1C,IAAOC,IAAV,sfAsBLgD,GAAUjD,IAAOuD,SAAV,0SAaPH,GAAcpD,IAAOC,IAAV,mLASXoD,GAAUrD,IAAOC,IAAV,2PACP6B,ICxCS0B,GAhHM,SAACla,GACf,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WAETC,EAAQhE,EAAMO,WACd+D,EAAStE,EAAMS,UAAU2D,UAAUJ,EAAMqD,YAAY/C,OAG3D8Q,qBAAU,WAEN,IAAMmD,EAAYjZ,EAAiBgF,EAAOlF,WACpCoZ,EAA+B,MAAlBD,EAAUzZ,KAAe,KAAOQ,EAAiBiZ,EAAUzZ,MAExE+L,EAAuB,GACvBE,EAA0B,GAC1BE,EAA4B,GAC9BlN,EAAQ,EAEZ,GAAkB,MAAdya,EACA3N,EAAQ/K,KAAK,SACb+K,EAAQ/K,KAAK,SACb+K,EAAQ/K,KAAK,cACb+K,EAAQ/K,KAAK,YACb+K,EAAQ/K,KAAK,YACb+K,EAAQ/K,KAAK,oBACV,CACHnB,EAAYkB,SAAQ,SAACJ,GACbA,EAAOb,MAAQ4Z,EAAW5Z,KAC1BmM,EAAWjL,KAAKL,EAAOb,QAG/B,IAAM6Z,EAAU9Y,EAAiB6Y,EAAW5Z,KAC5CD,EAAYkB,SAAQ,SAACJ,GACbgZ,EAAQxQ,SAASxI,EAAOb,MACxBiM,EAAQ/K,KAAKL,EAAOb,QAIhCiM,EAAQhL,SAAQ,SAACJ,EAAQwD,GAClBxD,IAAW6E,EAAOlF,YACjBrB,EAAQkF,MAGhB,IAAMwV,EAAU9Y,EAAiB4Y,EAAU3Z,KAC3CD,EAAYkB,SAAQ,SAACJ,GACbgZ,EAAQxQ,SAASxI,EAAOb,MACxBqM,EAAanL,KAAKL,EAAOb,QAGjCoF,EAAM4G,UAAY,CACd7M,QACA8M,UACAE,aACAE,gBAEJlH,EAAW2C,MAAMI,cAAc9C,KAChC,CAACM,EAAOlF,YAWX,IAAMwL,EAAY5G,EAAM4G,UAElB8N,EAA2B,GAC3BC,EAAwB,GACxBC,EAA6B,GA+BnC,OA7BiB,MAAbhO,IACA8N,EAAU5Y,KAAK,eAAC+Y,GAAD,kBAAcH,EAAU9S,SACvCgF,EAAUG,WAAWlL,SAAQ,SAACsF,EAAMlC,GAChC,IAAMxD,EAASH,EAAiB6F,GAChCuT,EAAU5Y,KACN,gBAAC,GAAD,CACI2V,UAAU,EADd,qBAEGhW,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY6Z,EAAU9S,YAK9B+S,EAAO7Y,KAAK,eAAC+Y,GAAD,qBAAcF,EAAO/S,SACjCgF,EAAUC,QAAQhL,SAAQ,SAACsF,EAAMlC,GAC7B,IAAMxD,EAASH,EAAiB6F,GAChCwT,EAAO7Y,KACH,gBAAC,GAAD,CACI2V,SAAU7K,EAAU7M,QAAUkF,EADlC,qBAEGxD,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY8Z,EAAO/S,YAK3BgT,EAAY9Y,KAAK,eAAC+Y,GAAD,qBAAcD,EAAYhT,SAC3CgF,EAAUK,aAAapL,SAAQ,SAACsF,EAAMlC,GAClC,IAAMxD,EAASH,EAAiB6F,GAChCyT,EAAY9Y,KACR,gBAAC,GAAD,CACI2V,UAAU,EADd,qBAEGhW,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY+Z,EAAYhT,aAOhC,gBAAC,GAAD,WACI,eAACkT,GAAD,UAAOJ,IACP,eAACI,GAAD,UAAOH,IACP,eAACG,GAAD,UAAOF,QAObtB,GAAQxC,IAAOC,IAAV,oYAiBL+D,GAAOhE,IAAOC,IAAV,iLAUJ8D,GAAU/D,IAAOC,IAAV,scAiBPkB,GAAQnB,IAAOC,IAAV,+TAQL,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,sDAAkB,MCrFlBwC,GAhFG,SAAC3a,GAGZ,IAAD,IAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAEFgE,GAJJ,EAEaD,WAED/D,EAAMO,YAGdgE,GAFYvE,EAAMS,UAAU2D,UACRhG,EAAML,OAClBiG,EAAMG,iBAAiB/F,EAAML,QAErCib,EAAU,UAAG1Z,EAAiBlB,EAAMkG,OAAOlF,kBAAjC,aAAG,EAA0CP,KAIzDqQ,EAA2B,KAEN,MAArB9Q,EAAMkG,OAAOnF,OACAhB,EAAc,CACvBJ,MAAOK,EAAMkG,OAAOnF,KAAKpB,MACzBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,SAE9BkR,EAAY3Q,EAAa,CACrBR,MAAOK,EAAMkG,OAAOnF,KAAKpB,MACzBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,QAC3BuG,EAAMrB,UAEc,MAAnB9E,EAAMkG,OAAOuE,KACF1K,EAAc,CACrBJ,MAAOK,EAAMkG,OAAOuE,GAAG9K,MACvBC,OAAQI,EAAMkG,OAAOuE,GAAG7K,SAElBO,EAAa,CACnBR,MAAOK,EAAMkG,OAAOuE,GAAG9K,MACvBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,QAC3BuG,EAAMrB,YAIjB,IAAI+V,GAAO,EACLC,EAAYlV,EAAMG,iBAAiB/F,EAAML,MAAQ,GZlC1B,IYqCzBK,EAAML,OAA+Bmb,EAAUD,MAAQ1U,EAAM0U,MAC7DA,EAAM1U,EAAM0U,IAAM,GAEtB,IAAME,GAAmB,IAATF,GAA6B,IAAf1U,EAAM6U,KAEhCC,EAAY,IAKhB,OAJiB,MAAbnK,IACAmK,EAAS,UAAMnK,GAAN,OAAkB8J,IAI3B,gBAACM,GAAD,WACI,eAACC,GAAD,UAASF,IAGT,gBAACG,GAAD,WACI,eAACC,GAAD,CACIN,QAASA,EADb,UAGc,IAATF,EAAa,8CAAcA,IAEhC,gBAACS,GAAD,WACI,gCACoB,IAAfnV,EAAM6U,KAAa,8CAAc7U,EAAM6U,OAG1B,IAAjB7U,EAAMM,OAAe,GAArB,YAA+BN,EAAMM,OAArC,QAEL,gBAAC8U,GAAD,WACKrX,KAAKsX,MAAMrV,EAAME,WAAa,KAAO,GAD1C,cAYVgV,GAAW3E,IAAOC,IAAV,sIAMR,SAAA3W,GAAK,OAAKA,EAAM+a,QAAe5C,YAAtB,sKAAiB,MAQ1BoD,GAAc7E,IAAOC,IAAV,+HAOX2E,GAAQ5E,IAAOC,IAAV,4BAELuE,GAAUxE,IAAOC,IAAV,+RAcPwE,GAASzE,IAAOC,IAAV,wOAEgB8E,IAgBtBL,IAPW1E,IAAOC,IAAV,iIAODD,IAAOC,IAAV,wbZtH4B,GY8HzB8E,GAILJ,GAEAC,KCvIOI,GArBK,SAAC1b,GAEd,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAEFgE,GAJJ,EAEaD,WAED/D,EAAMO,YACdiH,EAAYxD,EAAMG,iBAAiB/F,EAAML,OAAOyJ,UAChDuS,EAAa/V,EAAMyD,iBAAiBD,GAEpCwS,EAAS1X,KAAKC,MAAMwX,EAAWE,QAAU,GACzCC,EAASH,EAAWE,QAAU,EAEpC,OACI,gBAAC,GAAD,WACI,gBAACE,GAAD,WAAOH,EAAmB,IAAXE,EAAe,GAAf,YAAyBA,EAAzB,QACf,eAACE,GAAD,QASN9C,GAAQxC,IAAOC,IAAV,kSAcLoF,GAAOrF,IAAOC,IAAV,wRAaJqF,GAAUtF,IAAOC,IAAV,uMCtCEsF,GAhBa,SAACjc,GAIzB,OACI,gBAAC,GAAD,WACI,eAACkc,GAAD,yBAGA,eAAC,GAAD,yBASNhD,GAAQxC,IAAOC,IAAV,iIAOLqB,GAAStB,IAAOC,IAAV,kRAaNuF,GAAQxF,YAAOsB,GAAPtB,CAAH,mDAILwE,GAAUxE,YAAOsB,GAAPtB,CAAH,mDC0DEyF,GA9FY,SAACnc,GAGrB,IAAD,QAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MAEFgE,GAHJ,EACaD,WAED/D,EAAMO,YAEdgE,EAAQP,EAAMG,iBAAiBH,EAAMqD,YAErCxC,EAASzG,EAAMkG,OAAOO,OAEtBmC,EAAYhH,EAAMO,WAAWyG,UAC/BwT,EAA4B,KAC5BC,EAA0B,KAGL,MAArBrc,EAAMkG,OAAOnF,OACbqb,EAAarc,EAAc,CACvBJ,MAAOK,EAAMkG,OAAOnF,KAAKpB,MACzBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,SAElBO,EAAa,CACrBR,MAAOK,EAAMkG,OAAOnF,KAAKpB,MACzBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,QAC3BuG,EAAMrB,UAEc,MAAnB9E,EAAMkG,OAAOuE,KACb4R,EAAWtc,EAAc,CACrBJ,MAAOK,EAAMkG,OAAOuE,GAAG9K,MACvBC,OAAQI,EAAMkG,OAAOuE,GAAG7K,SAElBO,EAAa,CACnBR,MAAOK,EAAMkG,OAAOuE,GAAG9K,MACvBC,OAAQI,EAAMkG,OAAOnF,KAAKnB,QAC3BuG,EAAMrB,YAIjB,IAAM8V,EAAU,UAAG1Z,EAAiBlB,EAAMkG,OAAOlF,kBAAjC,aAAG,EAA0CP,KAC7D,OAAO6b,mBAAQ,kBACX,gBAAC,GAAD,WACI,eAACC,GAAD,CACIC,SAAU5T,EAAUyL,UAAYrU,EAAMyc,UACtCC,cAA6B,MAAdN,GAAsBnb,EAAkC4I,SAASuS,EAAaxB,GAAc,WAAa,OACxH+B,eAAmC,MAAnB3c,EAAMkG,OAAOuE,IAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIZ,SAAS7J,EAAMkG,OAAOuE,GAAG9K,OAH/F,SAKmB,MAAdyc,EAAqB,OAAU,uCAC5B,eAACQ,GAAD,UAAcR,IACd,eAACS,GAAD,UAAgBjC,IAChB,eAACkC,GAAD,UAA6B,MAAZT,EAAmB,GAAnB,WAA4BA,UAQrD,eAACU,GAAD,CAAMP,SAAU5T,EAAUyL,UAAYrU,EAAMyc,UAA5C,SACM,WAEE,IADA,IAAMO,EAAyB,GACtBnY,EAAI,EAAGA,EAAI7E,EAAMkG,OAAOM,QAAS3B,IAAK,CAC3C,IAAIoY,EAAsB,SACtBC,EAA0B,EAC9B,GAAI,CAAC,EAAGld,EAAMkG,OAAOM,QAAU,GAAGqD,SAAShF,GAAI,CAC3C,IAAMuF,EAAe,IAANvF,EAAU4B,EAAOC,KAAOD,EAAOE,KAC/B,IAAXyD,IACA6S,EAAU7S,EAAS,EAAI,OAAS,QAChC8S,EAAYhZ,KAAKiZ,IAAI/S,IAG7B4S,EAAQtb,KACJ,eAAC0b,GAAD,CAEIH,QAASA,EACTC,UAAWA,GAFNrY,IAMjB,OAAOmY,EApBT,UAwBR,CACEhd,EAAMyc,UAAWzc,EAAMkG,OAAOM,QADhC,UACyCxG,EAAMkG,OAAOnF,YADtD,aACyC,EAAmBpB,MAD5D,UAEEK,EAAMkG,OAAOuE,UAFf,aAEE,EAAiB9K,MACjBK,EAAMkG,OAAOlF,UACb4E,EAAMgD,UAAUyL,SAChBlO,EAAMrB,SACN9E,EAAMkG,OAAOO,OAAOC,KACpB1G,EAAMkG,OAAOO,OAAOE,QAM1BuS,GAAQxC,IAAOC,IAAV,4PAYLiG,GAAclG,IAAOC,IAAV,4BACXkG,GAAgBnG,IAAOC,IAAV,4BACbmG,GAAiBpG,IAAOC,IAAV,4BACd4F,GAAU7F,IAAOC,IAAV,2fASP,SAAA3W,GAAK,OAAKA,EAAMwc,SAAgBrE,YAAvB,wDAAkB,KASzByE,IAEE,SAAA5c,GAAK,MACiB,aAAxBA,EAAM0c,cAA+BvE,YAArC,6CAC4B,cAAxBnY,EAAM0c,cAAgCvE,YAAtC,6CACIA,YADJ,+CAKJ0E,IAEE,SAAA7c,GAAK,MACiB,aAAxBA,EAAM0c,cAA+BvE,YAArC,6CAC4B,cAAxBnY,EAAM0c,cAAgCvE,YAAtC,6CACIA,YADJ,+CAIJ2E,IAEE,SAAA9c,GAAK,OAAIA,EAAM2c,eAAiB,GAAKxE,YAA5B,gDAgBb4E,IAXSrG,IAAOC,IAAV,wOAWCD,IAAOC,IAAV,yKAMJ,SAAA3W,GAAK,OAAKA,EAAMwc,SAAgBrE,YAAvB,wDAAkB,OAK3BiF,GAAW1G,IAAOC,IAAV,iWAMR,SAAA3W,GAAK,MAAsB,UAAlBA,EAAMid,QAAsB9E,YAA5B,uDAEW,SAAlBnY,EAAMid,QAAqB9E,YAA3B,wDAEA,MAIF,SAAAnY,GAAK,MAAwB,KAApBA,EAAMkd,UAAoB/E,YAA1B,wEAEa,MAApBnY,EAAMkd,UAAqB/E,YAA3B,wEAEA,MCvLOkF,GAfY,SAACrd,GAIxB,IAAMgd,EAAyB,GAI/B,OAHAA,EAAQtb,KAAK,eAAC,GAAD,GAAc,IAC3Bsb,EAAQtb,KAAK,eAAC,GAAD,UAAiB1B,EAAMkG,OAAO4S,OAAjB,IAGtB,eAAC,GAAD,UAC4B,UAAvB9Y,EAAMkG,OAAO4S,MAAoBkE,EAAUA,EAAQM,aAO1DpE,GAAQxC,IAAOC,IAAV,+MhBGuB,IgBM5BqF,GAAUtF,IAAOC,IAAV,4JASPqB,GAAStB,IAAOC,IAAV,+TCTG4G,GA1BW,SAACvd,GAIvB,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAACwd,GAAD,qBACA,eAACC,GAAD,UAASzd,EAAMkG,OAAOqT,WAE1B,gBAAC,GAAD,WACI,eAACiE,GAAD,mBACA,eAACC,GAAD,UAASpd,EAAuBL,EAAMkG,OAAOpB,eAEjD,gBAAC,GAAD,WACI,eAAC0Y,GAAD,qBACA,eAACC,GAAD,UAASzd,EAAMkG,OAAOgB,SAE1B,gBAAC,GAAD,WACI,eAACsW,GAAD,oBACA,eAACC,GAAD,UAASzd,EAAMkG,OAAOsT,uBAQhCN,GAAQxC,IAAOC,IAAV,sGAML+G,GAAUhH,IAAOC,IAAV,yTAaP6G,GAAS9G,IAAOC,IAAV,gLAQN8G,GAAS/G,IAAOC,IAAV,gLCvCGgH,GAhBc,SAAC3d,GAEvB,IAAD,EAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MAEFgE,GAHJ,EACaD,WAED/D,EAAMO,YACdiH,EAAYxD,EAAMG,iBAAiB/F,EAAML,OAAOyJ,UAChDuS,EAAa/V,EAAMyD,iBAAiBD,GAE1C,OACI,eAAC,GAAD,UACI,eAAC,GAAD,UAASuS,EAAW/Q,eAO1BsO,GAAQxC,IAAOC,IAAV,gNAULqB,GAAStB,IAAOC,IAAV,oSCXGiH,GAhBI,SAAC5d,GAEb,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAFN,EAEa+D,WAED/D,EAAMO,WAEpB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,kBACA,eAAC,GAAD,4BAON+W,GAAQxC,IAAOC,IAAV,kSAcLqB,GAAStB,IAAOC,IAAV,iQAYNuF,GAAQxF,YAAOsB,GAAPtB,CAAH,qDAILwE,GAAUxE,YAAOsB,GAAPtB,CAAH,qDCkEEmH,GArGM,SAAC7d,GAEf,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WAET6F,EAAUsS,iBAAO,IACjBC,EAAUD,iBAAO,IAEjBlY,EAAQhE,EAAMO,WACdsa,EAAY7W,EAAMqD,YAAcjJ,EAAML,MAEtCyG,EADYxE,EAAMS,UAAU2D,UACRhG,EAAML,OAC1BwG,EAAQP,EAAMG,iBAAiB/F,EAAML,OAE3CqX,qBAAU,WACN7Q,EAAMsF,QAAQC,KAAOF,EAAQwS,QAC7B7X,EAAMsF,QAAQE,KAAOoS,EAAQC,QAC7BrY,EAAW2C,MAAMI,cAAc9C,KAChC,CAACA,EAAMG,iBAAiByB,SAM3B,IAAMyW,EAAUrY,EAAMqD,aAAejJ,EAAML,MACrCue,EAAgBtY,EAAMG,iBAAiBH,EAAMqD,YAAYG,YAAcjD,EAAMiD,UAE7E+U,EAA+B,UAAjB/X,EAAQtE,KAAmB,KAAOsE,EAAQF,OAC9D,OACI,gBAAC,GAAD,CACIkY,IAAK5S,EACL6S,aAA+B,UAAjBjY,EAAQtE,KACtBuV,SAAU4G,EACVK,YAAaJ,EACbK,QAA0B,UAAjBnY,EAAQtE,KALrB,UAOI,eAAC0c,GAAD,UACsB,UAAjBpY,EAAQtE,KAAmB,+BACxB,eAAC2c,GAAD,UAAUve,EAAiBiG,EAAMrB,cAKxC,CAAC,OAAQ,QAAS,UAAW,UAAU+E,SAASzD,EAAQtE,MACrD,eAAC4c,GAAD,CACIN,IAAKL,EACL1G,SAAU4G,EACVK,YAAaJ,EACbpc,KAAMsE,EAAQtE,KACd6c,UAAW,CAAC,QAAS,QAAQ9U,SAASzD,EAAQtE,OAA8B,IAArB8D,EAAMqD,WAC7D6O,QAAS,WACgB,UAAjB1R,EAAQtE,OAGZ8D,EAAMqD,WAAajJ,EAAML,MACzBgG,EAAW2C,MAAMI,cAAc9C,KAXvC,SAaG,WACC,OAAQQ,EAAQtE,MACZ,IAAK,OACD,IAAMoE,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAmBA,OAAQA,IAEvC,IAAK,UACcE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAsBvG,MAAOK,EAAML,QAE/C,IAAK,QACD,IAAMuG,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAoBA,OAAQA,EAAQuW,UAAWwB,IAE3D,IAAK,SACD,IAAM/X,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAqBA,OAAQA,KAhB9C,KAqBF,eAAC,GAAD,CAAoBA,OAAQE,EAAQF,SAIpB,UAAjBE,EAAQtE,KAAoB,eAAC,GAAD,CAAWnC,MAAOK,EAAML,MAAOuG,OAAQiY,IAC9C,YAAjB/X,EAAQtE,KAAsB,eAAC,GAAD,CAAanC,MAAOK,EAAML,QACnC,WAAjByG,EAAQtE,KAAqB,eAAC,GAAD,CAAYnC,MAAOK,EAAML,QAClD,+BAEhB,qCAAK8c,GAA4B,MAAf0B,GAA2C,MAApBA,EAAYpd,MAAgBa,EAAMO,WAAWyG,UAAU8L,WAC5F,eAAC,GAAD,IAD0G,KAG7G,CAAC,QAAS,QAAQ7K,SAASzD,EAAQtE,MAAQ,+BACxC,gBAAC8c,GAAD,WACI,eAACC,GAAD,gBACA,eAACA,GAAD,CAAgB/G,QAAS,kBAAMnS,EAAW2C,MAAMiC,mBAAhD,sBAgBdmU,IAPYhI,IAAOC,IAAV,uHAODD,IAAOC,IAAV,8WAUemI,IAEpB,SAAA9e,GAAK,MAAmB,YAAfA,EAAM8B,KAAqB,GAAKqW,YAAhC,2EAGT,SAAAnY,GAAK,MAAmB,SAAfA,EAAM8B,KAAkB,GAAKqW,YAA7B,kGAIT,SAAAnY,GAAK,MAAmB,WAAfA,EAAM8B,KAAoB,GAAKqW,YAA/B,2EAMT,SAAAnY,GAAK,OAAIA,EAAMse,WAAa,GAAKnG,YAAxB,gGAIT,SAAAnY,GAAK,OAAKA,EAAM2e,UAAiBxG,YAAxB,uDAAmB,MAM5B,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,kHAAkB,OAM3ByG,GAAclI,IAAOC,IAAV,4BACXkI,GAAiBnI,IAAOC,IAAV,4BAEduC,GAAQxC,IAAOC,IAAV,osCpBrJmB,IAGM,GoBqK9B,SAAA3W,GAAK,OAAIA,EAAMse,aAAete,EAAMue,QAAU,GAAKpG,YAA1C,0EAIPyG,GpBrKgC,GoB4KzB,GACGG,GAGNF,GpBhL4B,OoBqM9B,SAAA7e,GAAK,OAAKA,EAAMqe,aAAoBlG,YAA3B,uMAGHuG,IACE,SAAA1e,GAAK,OAAIA,EAAMqX,SAAW,GAAKc,YAAtB,0DAGXyG,IAPyB,MAcnCH,GAAU/H,IAAOC,IAAV,4BACP6H,GAAQ9H,IAAOC,IAAV,kZpB1NuB,GoBiO1B8H,ICtNOO,GA3BE,WAAO,IAAD,EACW3I,qBAAWC,IAAjC1U,EADW,EACXA,MAEFqd,GAHa,EACJtZ,WAEH/D,EAAMS,UAAU2D,UAAUwB,QAGhChG,EAAsB,GAC5B,GAAII,EAAMO,WAAW4D,iBAAiByB,SAAWyX,EAC7C,IAAK,IAAIpa,EAAI,EAAGA,EAAIoa,EAAKpa,IACrBrD,EAAKE,KACD,eAAC,GAAD,CAAsB/B,MAAOkF,GAAVA,IAI/B,OACI,gBAAC,GAAD,WAEI,eAACqa,GAAD,UACK1d,IAEL,eAAC0d,GAAD,QAUNhG,GAAQxC,IAAOC,IAAV,2pBAmCLuI,IAPSxI,IAAOC,IAAV,oIAOED,IAAOC,IAAV,0RrB9C6B,GACA,GqBiD3B,IACC,OCxEDwI,GAAiB,SAACtF,EAAkBjY,EAAc+D,GAG3D,IAAMyZ,EAASxd,EAAM8R,QAAQC,UAAUC,KAKjChK,GAJYhI,EAAMO,WAAWyG,UAItBhH,EAAMS,WACbuD,EAAQhE,EAAMO,WACdkd,EAAUzV,EAAK5D,UAAUJ,EAAMqD,YAAYnH,KAGjD,OAAQud,GACJ,IAAK,QACgBzd,EAAMO,WAAWuO,SAClC,OAAQmJ,EAAErZ,KACN,IAAK,IACD,IAAM0F,EAAS0D,EAAK5D,UAAUJ,EAAMqD,YAAY/C,OAC1CoZ,EAAY1d,EAAMgB,YAAY2C,MACnB,MAAb+Z,GxB4CU,SAACA,EAA6BpZ,GAG5D,GADAoZ,EAAUpa,OACS,MAAfgB,EAAOnF,KAAX,CAEA,IAAMuF,EAAYJ,EAAOnF,KAAKpB,MACxB0B,EAASH,EAAiBgF,EAAOlF,WAEnBkF,EAAOW,QAAQ3D,YAAY4D,KAAI,SAACC,GAChD,IAAMC,EAAWnG,EAAsBQ,EAAOV,QAAQoG,EAAK5D,SAC3D,OAAO,GAAK4D,EAAK3D,OAASkD,EAAYU,KAG9BvF,SAAQ,SAAC9B,GACjB,IAEM2F,EAFYpF,EAAiBP,EAAQ,IAC5BuE,KAAKC,MAAMxE,EAAQ,IAGlC2f,EAAUna,KAAKG,EAAe,EAAG,CAAEF,SAAU,QwB7D7Bma,CAAmBD,EAAWpZ,GAGlC,MACJ,IAAK,IACDP,EAAW2C,MAAM+D,oBAEjB,MACJ,IAAK,IACD1G,EAAWkB,QAAQ4J,qBAOnC,OAAQoJ,EAAErZ,KAEN,KAAK4e,EAAOvL,YACRlO,EAAW2C,MAAMQ,aAAY,GAE7B,MACJ,KAAKsW,EAAOtL,YACRnO,EAAW2C,MAAMQ,aAAY,GAE7B,MAEJ,KAAKsW,EAAOrL,YACRpO,EAAW2C,MAAMY,aAAY,GAE7B,MACJ,KAAKkW,EAAOpL,YACRrO,EAAW2C,MAAMY,aAAY,GAE7B,MACJ,KAAKkW,EAAOnL,SACRtO,EAAW2C,MAAMiC,kBAEjB,MACJ,KAAK6U,EAAOlL,WACRvO,EAAW2C,MAAMqC,oBAEjB,MACJ,IAAK,IAIL,IAAK,IACDhF,EAAW2C,MAAMuC,mBAEjB,MACJ,KAAKuU,EAAOhL,UACRzO,EAAW2C,MAAMiD,mBAEjB,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD5F,EAAW2C,MAAM4D,iBAAiBsT,OAAO3F,EAAErZ,KAAO,KChBjDif,GAAgB,SAAC5F,EAAkBjY,EAAc+D,EAAwB+Z,GAElF,GAAkC,SAA9B9d,EAAMO,WAAWuO,SAAqB,CACtC,IAAM0O,EAASxd,EAAM8R,QAAQC,UAAUC,KACjChL,EAAYhH,EAAMO,WAAWyG,UAGnC,OAAQiR,EAAErZ,KACN,KAAK4e,EAAO/K,SACRzL,EAAUyL,SAAWqL,EACrB/Z,EAAW2C,MAAMK,aAAaC,GAE9B,MACJ,KAAKwW,EAAO1K,WACR9L,EAAU8L,WAAagL,EACvB/Z,EAAW2C,MAAMK,aAAaC,IAMtC8W,GAvFmB,SAAC7F,EAAkBjY,EAAc+D,GAExD,IAAMyZ,EAASxd,EAAM8R,QAAQC,UAAUC,KACjChL,EAAYhH,EAAMO,WAAWyG,UAI7BgB,EAAOhI,EAAMS,UACbuD,EAAQhE,EAAMO,WAEdwd,EAAwB,SADd/V,EAAK5D,UAAUJ,EAAMqD,YAAYnH,KAGjD,GAAkC,SAA9BF,EAAMO,WAAWuO,UACjB,GAAIiP,EACA,GAAI/W,EAAUyL,SACV,OAAQwF,EAAErZ,KACN,KAAK4e,EAAO7K,QACR5O,EAAW2C,MAAMoB,qBAAoB,GAErC,MACJ,KAAK0V,EAAO9K,QACR3O,EAAW2C,MAAMoB,qBAAoB,GAErC,MACJ,KAAK0V,EAAO3K,QACR9O,EAAW2C,MAAMwB,kBAAiB,GAElC,MACJ,KAAKsV,EAAO5K,QACR7O,EAAW2C,MAAMwB,kBAAiB,GAElC,MACJ,IAAK,IAAKnE,EAAW2C,MAAM+B,4BAA2B,GAAQ,KAAO,MACrE,IAAK,IAAK1E,EAAW2C,MAAM+B,4BAA2B,EAAO,KAAO,MACpE,IAAK,IAAK1E,EAAW2C,MAAM+B,4BAA2B,GAAO,KAAO,MACpE,IAAK,IAAK1E,EAAW2C,MAAM+B,4BAA2B,EAAM,UAE7D,GAAIzB,EAAU8L,WACjB,OAAQmF,EAAErZ,KACN,IAAK,UACDmF,EAAWtE,OAAOiL,QAAO,GAEzB,MACJ,IAAK,YACD3G,EAAWtE,OAAOiL,QAAO,GAEzB,MACJ,IAAK,YACD3G,EAAWtE,OAAOqL,SAElB,MACJ,IAAK,aACD/G,EAAWtE,OAAOuL,gBAK1BuS,GAAetF,EAAGjY,EAAO+D,OAGI,YAA9B/D,EAAMO,WAAWuO,UC9DE,SAACmJ,EAAkBjY,EAAc+D,GAEhD/D,EAAM8R,QAAQC,UAAUC,KACrBhS,EAAMO,WAAWyG,UAItBhH,EAAMS,UALnB,IAMMuD,EAAQhE,EAAMkB,aAEpB,GAAa,MAAT8C,EAAJ,CAGA,IAAMga,EAAS,kBAAMja,EAAWkB,QAAQU,SAAS3B,IAC3CvC,EAAUuC,EAAMvC,QAEtB,OAAQwW,EAAErZ,KACN,IAAK,IACDmF,EAAWkB,QAAQkK,qBAEnB,MACJ,IAAK,QACDpL,EAAWkB,QAAQ6K,0BAK3B,GAAe,MAAXrO,EAAiB,CACjB,OAAQwW,EAAErZ,KACN,IAAK,YACDmF,EAAWkB,QAAQ+L,mBAAkB,GAErC,MACJ,IAAK,aACDjN,EAAWkB,QAAQ+L,mBAAkB,GAI7C,IAA8B,IAA1BvP,EAAQ4P,aAER,OAAQ4G,EAAErZ,KACN,IAAK,UAIL,IAAK,YAGD,MACJ,IAAK,IACDmF,EAAWkB,QAAQyL,mBAEnB,MACJ,IAAK,IACD3M,EAAWkB,QAAQ0M,cAEnB,MACJ,IAAK,IACD5N,EAAWkB,QAAQqM,kBAAkB,IAErC,MACJ,IAAK,IACDvN,EAAWkB,QAAQqM,kBAAkB,GAErC,MACJ,IAAK,IACDvN,EAAWkB,QAAQqM,kBAAkB,GAErC,MACJ,IAAK,IACDvN,EAAWkB,QAAQqM,kBAAkB,GAErC,MACJ,IAAK,IACDvN,EAAWkB,QAAQqM,kBAAkB,GAErC,MACJ,IAAK,IACDvN,EAAWkB,QAAQsM,uBAEnB,MACJ,IAAK,SACDxN,EAAWkB,QAAQyM,eAEnB,MACJ,IAAK,IACDjQ,EAAQ4P,aAAe,EACvB2M,SAOR,OAAQ/F,EAAErZ,KACN,IAAK,UACDmF,EAAWkB,QAAQkM,kBAAiB,GAEpC,MACJ,IAAK,YACDpN,EAAWkB,QAAQkM,kBAAiB,GAEpC,MACJ,IAAK,IACD1P,EAAQ4P,cAAgB,EACxB2M,IAEA,MACJ,IAAK,QACD,IACMnc,EAAuC,MAD5BkC,EAAWkB,QAAQuM,WACgB,CAAEf,OAAQ,IAAKwN,OAAQ,EAAGC,eAAgB,GAAM,KACpGna,EAAWkB,QAAQwM,SAAS5P,MDhDxCsc,CAAmBlG,EAAGjY,EAAO+D,GA2B7Bqa,CAAYnG,EAAGjY,EAAO+D,IE8Cfsa,GAtIO,SAACjgB,GAWnB,IAVG,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WAETC,EAAQhE,EAAMO,WAEd+D,EADMtE,EAAMS,UAAU2D,UAAUJ,EAAMqD,YACzB/C,OACbC,EAAQP,EAAMG,iBAAiBH,EAAMqD,YAErCiX,EAA8B,GATlC,WAUOrb,GACL,IAAM2M,EAAUtL,EAAOM,SAAY3B,EAAI,EACvCqb,EAAaxe,KACT,eAACye,GAAD,CAAmB3O,QAASA,EAASsG,QAAS,WAC1C,IAAMlO,EAAOhI,EAAMS,UACnBuH,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChC7D,EAAOM,QAAW3B,EAAI,EACtB+E,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,IALlC,SAOI,2BAPY/E,KAHfA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAeT,IAAMub,EAA8B,GACpC1gB,EAAS+B,SAAQ,SAACV,EAAM8D,GACpB,IAAMwb,EAAehH,KAAKC,UAAUpT,EAAOnF,QAAUsY,KAAKC,UAAUvY,GAC9Duf,EAA0B,MAAbpa,EAAOuE,IAAc4O,KAAKC,UAAUpT,EAAOuE,MAAQ4O,KAAKC,UAAUvY,GACrFqf,EAAa1e,KACT,eAAC6e,GAAD,CACIF,aAAcA,EACdC,WAAYA,EACZE,WAAoB,MAARzf,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI8I,SAAS9I,EAAKpB,OACjEmY,QAAS,WACL,IAAMlO,EAAOhI,EAAMS,WAEfie,GAAsB,MAARvf,KACdmF,EAAOuE,GAAK,MAEhBvE,EAAOnF,KAAe,MAARA,EAAe,KAAf,eAA2BA,GACzC6I,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,IAElC6W,cAAe,WACX,IAAM7W,EAAOhI,EAAMS,UAEA,MAAf6D,EAAOnF,MAAiBsf,IAGpBna,EAAOuE,GADP6V,GAGoB,MAARvf,EAFA,KAEA,eAA2BA,GAE3C6I,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,KAzB1C,SA6Ba,MAAR7I,EAAe,IAAM,uCACjBhB,EAAcgB,GADG,KACMZ,EAAaY,EAAMoF,EAAMrB,UAD/B,QA7BVD,OAoCxB,IAAM6b,EAAgC,GAmBtC,OAlBAngB,EAAYkB,SAAQ,SAACJ,EAAQwD,GACzB,IAAMwS,EAA0B,MAAfnR,EAAOnF,MAAgBM,EAAOb,MAAQ0F,EAAOlF,UAC9D0f,EAAehf,KACX,gBAACif,GAAD,CACItJ,SAAUA,EACVmJ,YAAY,EACZ1I,QAAS,WACL,IAAMlO,EAAOhI,EAAMS,UACnB6D,EAAOlF,UAAYK,EAAOb,IAC1BoJ,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,IAPtC,cAUMvI,EAAOZ,KAVb,MAAkBoE,OAgBtB,gBAAC,GAAD,WACI,gBAAC+b,GAAD,WACI,eAACC,GAAD,UAAa,gBACb,eAAC,GAAD,UACKX,IAEL,gBAACY,GAAD,WACI,eAACC,GAAD,UAAe,gBAEf,eAACC,GAAD,CAAaC,WAAW,EAAMnf,KAAK,QAAQof,KAAM,IAAMC,KAAM,GAAKC,IAAK,GACnEjX,MAAOjE,EAAOO,OAAOC,KACrBkT,SAAU,SAACC,GACP,IAAMjQ,EAAOhI,EAAMS,UACnBuH,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChC7D,EAAOO,OAAOC,KAAO8Y,OAAO3F,EAAEzP,OAAOD,OACrCP,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,MAGtC,eAACmX,GAAD,UAAe,gBAEf,eAACC,GAAD,CAAaC,WAAW,EAAOnf,KAAK,QAAQof,KAAM,IAAMC,KAAM,GAAKC,IAAK,GACpEjX,MAAOjE,EAAOO,OAAOE,KACrBiT,SAAU,SAACC,GACP,IAAMjQ,EAAOhI,EAAMS,UACnBuH,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChC7D,EAAOO,OAAOE,KAAO6Y,OAAO3F,EAAEzP,OAAOD,OACrCP,EAAK5D,UAAUpE,EAAMO,WAAW8G,YAAY/C,OAASA,EACrDP,EAAW2C,MAAMO,aAAae,YAK9C,gBAAC,GAAD,WACI,eAACyX,GAAD,UACKjB,IAEL,eAACkB,GAAD,CACIhK,UAA0B,MAAfpR,EAAOnF,KADtB,SAGK2f,WAUfG,GAAanK,IAAOC,IAAV,0ZAiBVuC,GAAQxC,IAAOC,IAAV,sJAQLiK,GAAUlK,IAAOC,IAAV,uJAQP2E,GAAQ5E,IAAOC,IAAV,sJAOLwJ,GAAYzJ,IAAOC,IAAV,+VAeL,SAAA3W,GAAK,OAAKA,EAAMwR,QAAe2G,YAAtB,4KAAiB,MAO9B2I,GAAUpK,IAAOC,IAAV,sJAQPoK,GAAerK,IAAOC,IAAV,oZAyCZqK,GAActK,IAAO6K,MAAV,kKAQX,SAAAvhB,GAAK,OAAKA,EAAMihB,UAAiB9I,YAAxB,uEAAmB,MAM5BgD,GAASzE,IAAOC,IAAV,uMAWN0K,GAAQ3K,IAAOC,IAAV,sJAOL4J,GAAY7J,IAAOC,IAAV,seAUT,SAAA3W,GAAK,OAAKA,EAAMqgB,aAAoBlI,YAA3B,wDAAsB,MAC/B,SAAAnY,GAAK,OAAKA,EAAMsgB,WAAkBnI,YAAzB,wDAAoB,MAI7B,SAAAnY,GAAK,OAAKA,EAAMwgB,WAAkBrI,YAAzB,2CAAoB,MAUzB,SAAAnY,GAAK,OAAKA,EAAMqgB,aAAoBlI,YAA3B,wDAAsB,MAC/B,SAAAnY,GAAK,OAAKA,EAAMsgB,WAAkBnI,YAAzB,wDAAoB,MAIjCmJ,GAAU5K,IAAOC,IAAV,4KAQP,SAAA3W,GAAK,OAAKA,EAAMsX,UAAiBa,YAAxB,wFAAmB,MAM5BwI,GAAcjK,IAAOC,IAAV,gdASX,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MAI3B,SAAAnY,GAAK,OAAKA,EAAMwgB,WAAkBrI,YAAzB,2CAAoB,MAUzB,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MC5QtBqJ,GAhFM,WAAO,IAAD,EAEOnL,qBAAWC,IAAjC1U,EAFe,EAEfA,MAAO+D,EAFQ,EAERA,WAETiE,EAAOhI,EAAMS,UACb6D,EAAS0D,EAAK5D,UAAU,GAAGE,OAE3Bub,EAAkC,CAAC,QAAS,SAAS3a,KAAI,SAACC,EAAMlC,GAClE,OACI,eAAC6c,GAAD,CAAoBrK,SAAUnR,EAAOqT,QAAUxS,EAAM+Q,QAAS,WAC1D5R,EAAOqT,MAAQxS,EACf6C,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChCpE,EAAW2C,MAAMO,aAAae,IAHlC,SAKK7C,GALYlC,MAWnB8c,GAD2B,UAAjBzb,EAAOqT,MAAoBlZ,EAAyBC,GACtBwG,KAAI,SAACC,EAAMlC,GACrD,IAAM0U,EAAQrT,EAAOqT,MACrB,OACI,eAACqI,GAAD,CAAkBvK,SAAUnR,EAAOpB,WAAaD,EAAGiT,QAAS,WACxD5R,EAAOpB,SAAWD,EAClB+E,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChCpE,EAAW2C,MAAMO,aAAae,IAHlC,mBAKQ7C,EALR,YAKgBwS,IALD1U,MAWjBgd,EAAiC,CAAC,MAAO,OAAO/a,KAAI,SAACC,EAAMlC,GAC7D,OACI,eAACid,GAAD,CAAmBzK,SAAUnR,EAAOsT,gBAAkBzS,EAAM+Q,QAAS,WACjE5R,EAAOsT,cAAgBzS,EACvB6C,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChCpE,EAAW2C,MAAMO,aAAae,IAHlC,SAKK7C,GALWlC,MAWxB,OACI,gBAAC,GAAD,WACI,eAACkd,GAAD,oBACA,eAACC,GAAD,UAAaP,IACb,eAACM,GAAD,kBACA,eAACE,GAAD,UAAWN,IACX,eAACI,GAAD,oBACA,gBAACG,GAAD,WACI,wBACIpgB,KAAK,SAASqf,IAAK,GAAIC,IAAK,IAAKF,KAAM,EACvC/W,MAAOjE,EAAOgB,IACd0S,SAAU,SAACC,GACP3T,EAAOgB,IAAM2S,EAAEsI,cAAcC,cAC7BxY,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChCpE,EAAW2C,MAAMO,aAAae,MAGtC,wBACI9H,KAAK,QAAQqf,IAAK,GAAIC,IAAK,IAAKF,KAAM,EACtC/W,MAAOjE,EAAOgB,IACd0S,SAAU,SAACC,GACP3T,EAAOgB,IAAM2S,EAAEsI,cAAcC,cAC7BxY,EAAK5D,UAAY4D,EAAK5D,UAAU+D,QAChCpE,EAAW2C,MAAMO,aAAae,SAI1C,eAACmY,GAAD,mBACA,eAACM,GAAD,UAAYR,QAOlB3I,GAAQxC,IAAOC,IAAV,sJAQLoL,GAAcrL,IAAOC,IAAV,4YAgBXqL,GAAatL,IAAOC,IAAV,0LASV+K,GAAahL,IAAOC,IAAV,6WAQV,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAe3B8J,GAAWvL,IAAOC,IAAV,gMASRiL,GAAWlL,IAAOC,IAAV,8WAQR,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAe3B+J,GAAaxL,IAAOC,IAAV,6pBA8BV0L,GAAY3L,IAAOC,IAAV,gMASTmL,GAAYpL,IAAOC,IAAV,8WAQT,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MChKlBmK,GA1DS,SAACtiB,GAClB,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WACTC,EAAQhE,EAAMO,WAEd+D,EADMtE,EAAMS,UAAU2D,UAAUJ,EAAMqD,YACzB/C,OAEbqc,EAAe,SAACpY,GAClBjE,EAAO0E,UAAYT,EACnBvI,EAAMS,UAAU2D,UAAYpE,EAAMS,UAAU2D,UAAU+D,QACtDpE,EAAW2C,MAAMO,aAAajH,EAAMS,YAGlCmgB,EAAqClG,mBAAQ,WAC/C,IAAMU,EAAyB,GAa/B,MAZA,CAAC,QAAS,SAAU,SAAU,OAAQ,SAAU,SAASvb,SAAQ,SAACsF,GAC9D,IAAMsQ,EAA8C,IAAnCnR,EAAO0E,UAAU6X,QAAQ1b,GAC1CiW,EAAQtb,KACJ,eAACghB,GAAD,CAAoCrL,SAAUA,EAC1CS,QAAS,WACLyK,EAAaxb,IAFrB,SAKKA,GALeiW,EAAQxV,YAS7BwV,IACR,IAEG2F,EAAmCrG,mBAAQ,WAC7C,IAAMU,EAAyB,GAS/B,MARA,CAAC,EAAG,EAAG,EAAG,GAAGvb,SAAQ,SAACsF,GAClB,IAAMsQ,GAA0D,IAA/CnR,EAAO0E,UAAU6X,QAAQ1b,EAAK6b,YAC/C5F,EAAQtb,KACJ,eAACmhB,GAAD,CAAkCxL,SAAUA,EAA5C,SACKtQ,GADaiW,EAAQxV,YAK3BwV,IACR,IAEH,OACI,gBAAC,GAAD,WACI,eAAC8F,GAAD,CAAahhB,KAAK,OACdqI,MAAOjE,EAAO0E,UACdgP,SAAU,SAACC,GACP0I,EAAa1I,EAAEzP,OAAOD,UAG9B,eAAC4Y,GAAD,UAAiBP,IACjB,eAACQ,GAAD,UAAeL,QAOrBzJ,GAAQxC,IAAOC,IAAV,sJAQLmM,GAAcpM,IAAO6K,MAAV,gUAiBX0B,GAAYvM,IAAOC,IAAV,iUAiBToM,GAAiBrM,IAAOC,IAAV,4LASdqM,GAAetM,IAAOC,IAAV,4LASZ+L,GAAgBhM,YAAOuM,GAAPvM,CAAH,uEAIb,SAAA1W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAK3B0K,GAAcnM,YAAOuM,GAAPvM,CAAH,uEAIX,SAAA1W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MCxGlB+K,GA1BM,WAAO,IAAD,EAEO7M,qBAAWC,IAAjC1U,EAFe,EAEfA,MACFgE,GAHiB,EAERD,WACD/D,EAAMO,YACd6D,EAAYpE,EAAMS,UAAU2D,UAElC,IAA0B,IAAtBJ,EAAMqD,YAAqBrD,EAAMqD,WAAajD,EAAUwB,OAAS,EACjE,OAAO,+BAGX,IAAMpB,EAAUJ,EAAUJ,EAAMqD,YAEhC,OACI,eAAC,GAAD,UACM,WACE,OAAQ7C,EAAQtE,MACZ,IAAK,OAAQ,OAAO,eAAC,GAAD,IACpB,IAAK,UAAW,OAAO,eAAC,GAAD,IACvB,IAAK,QAAS,OAAO,eAAC,GAAD,IACrB,IAAK,SAAU,OAAO,gCAL5B,MAcRoX,GAAQxC,IAAOC,IAAV,wMCgJIwM,GA5KK,WAwBhB,IAxBuB,IAAD,EAEQ9M,qBAAWC,IAAjC1U,EAFc,EAEdA,MAEFgE,GAJgB,EAEPD,WAED/D,EAAMO,YACdihB,EAAWxhB,EAAMS,UAAU2D,UAC3BiD,EAAarD,EAAMqD,WACnBpD,EAAYD,EAAMG,iBAEpBsd,EAA0B,+BAC1BC,EAA2B,+BAC3BC,EAA2B,+BAC3BC,EAA4B,+BAC5BC,EAA6B,+BAC7BC,EAA6B,+BAE3BC,EAA+B,GAIjChL,EAAW,EACXiL,EAAY,EACZC,EAAYT,EAAS5b,OAAS,EAC9Bsc,EAAO7a,EACJ6a,EAAO,GAAG,CAEb,GAAqB,UADLV,EAASU,GACbhiB,KAAkB,CAC1B6W,EAAWmL,EACX,MAEJA,IAGJ,GAAInL,EAAW,EAEX,IADAmL,EAAOnL,EAAW,EACXmL,EAAO,GAAG,CAEb,GAAqB,UADLV,EAASU,GACbhiB,KAAkB,CAC1B8hB,EAAYE,EACZ,MAEJA,IAIR,IADAA,EAAO7a,EAAa,EACb6a,EAAOV,EAAS5b,OAAS,GAAG,CAE/B,GAAqB,UADL4b,EAASU,GACbhiB,KAAkB,CAC1B+hB,EAAYC,EACZ,MAEJA,IAEJ,IAA0B,IAAtBle,EAAMqD,YAAqBrD,EAAMqD,WAAarD,EAAMG,iBAAiByB,OACrE,OAAO,+BAGX,IAAMuc,EAAM,SAACC,EAAiB7d,GAE1B,IADA,IAAM8d,EAAS9d,EAAM6U,KAAO7U,EAAMM,OACzB5B,EAAI,EAAGA,EAAIX,KAAKC,MAAM6f,EAAU,KAAOnf,IAAK,CACjD,IAAMoF,EAAMpF,EAAIX,KAAKC,MAAM8f,EAAS,KAChCC,EAAyD,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,QAC5F,QAAQ,GACJ,KAAKna,EAAM,KAAO,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACxE,KAAKna,EAAM,IAAM,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACvE,KAAKna,EAAM,IAAM,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAE9DT,EAAcjiB,KACV,eAAC2iB,GAAD,CAEItY,MAAOmY,EAAKnY,MACZoY,OAAQD,EAAKC,OACbC,MAAOF,EAAKE,MAJhB,SAMKna,EAAM,KAAO,EAAI,eAACqa,GAAD,UAAOne,EAAM0U,IAAM,GAAgB,IAAXoJ,EAAe,EAAI,KAAa,IALrEN,EAAcnc,WAWnC,GAAImR,EAAW,EAEX,GAAkB,IAAdiL,EACAN,EACI,eAACiB,GAAD,CAAOP,QAAS,EAAhB,mBAEJP,EACI,eAACc,GAAD,CAAOP,QAAS,IAGpBL,EAAcjiB,KAAK,eAAC8iB,GAAD,GAAab,EAAcnc,aAC3C,CACH,IAAM4E,EAAQgX,EAASQ,GAAW1d,OAC5BC,EAAQN,EAAU+d,GAClBI,EAAU5X,EAAM5F,QAAU4F,EAAM3F,OAAOC,KAAO0F,EAAM3F,OAAOE,KACjE2c,EACI,eAACiB,GAAD,CAAOP,QAAS5X,EAAM5F,QAAtB,kBAEJid,EACI,eAACc,GAAD,CAAOP,QAASA,IAGpBD,EAAIC,EAAS7d,GAGrB,GAAiB,IAAbwS,EACA0K,EACI,eAACoB,GAAD,CAAMT,QAAS,EAAf,mBAEJR,EACI,eAACiB,GAAD,CAAMT,QAAS,IAGnBL,EAAcjiB,KAAK,eAAC8iB,GAAD,GAAab,EAAcnc,aAC3C,CACH,IAAM4E,EAAQgX,EAASzK,GAAUzS,OAC3BC,EAAQN,EAAU8S,GAClBqL,EAAU5X,EAAM5F,QAAU4F,EAAM3F,OAAOC,KAAO0F,EAAM3F,OAAOE,KACjE0c,EACI,eAACoB,GAAD,CAAMT,QAAS5X,EAAM5F,QAArB,iBAEJgd,EACI,eAACiB,GAAD,CAAMT,QAASA,IAGnBD,EAAIC,EAAS7d,GAEjB,GAAI0d,IAAcT,EAAS5b,OAAS,EAChC+b,EACI,eAACmB,GAAD,CAAOV,QAAS,EAAhB,iBAEJN,EACI,eAACgB,GAAD,CAAOV,QAAS,IAGpBL,EAAcjiB,KAAK,eAAC8iB,GAAD,GAAab,EAAcnc,aAC3C,CACH,IAAM4E,EAAQgX,EAASS,GAAW3d,OAC5BC,EAAQN,EAAUge,GAClBG,EAAU5X,EAAM5F,QAAU4F,EAAM3F,OAAOC,KAAO0F,EAAM3F,OAAOE,KACjE4c,EACI,eAACmB,GAAD,CAAOV,QAAS5X,EAAM5F,QAAtB,kBAEJkd,EACI,eAACgB,GAAD,CAAOV,QAASA,IAGpBD,EAAIC,EAAU,IAAM7d,GAIxB,OACI,gBAAC,GAAD,WACI,gBAACwe,GAAD,WACI,gBAAC,GAAD,WACKrB,EACAD,EACAE,KAEL,gBAAC,GAAD,WACKE,EACAD,EACAE,QAGT,eAACkB,GAAD,UACKjB,QAUXzK,GAAQxC,IAAOC,IAAV,wGAMLgO,GAAUjO,IAAOC,IAAV,0KAQP2E,GAAQ5E,IAAOC,IAAV,sEAKLmK,GAAUpK,IAAOC,IAAV,sEAKPkB,GAAQnB,IAAOC,IAAV,2LAIE,SAAA3W,GAAK,OA9BC,GA8BGA,EAAMgkB,WAStBO,GAAQ7N,YAAOmB,GAAPnB,CAAH,8EAKL+N,GAAO/N,YAAOmB,GAAPnB,CAAH,qEAKJgO,GAAQhO,YAAOmB,GAAPnB,CAAH,8EAKLkO,GAAWlO,IAAOC,IAAV,yQAUR6N,GAAS9N,IAAOC,IAAV,4JAECkO,KAKPR,GAAU3N,IAAOC,IAAV,yLAOAkO,MACC,SAAA7kB,GAAK,OAAIA,EAAMmkB,UACJ,SAAAnkB,GAAK,OAAIA,EAAM+L,SAAW,SAAA/L,GAAK,OAAIA,EAAMokB,SAG5DE,GAAO5N,IAAOC,IAAV,wMC1MKmO,GAzDG,WAAO,IAAD,EAEUzO,qBAAWC,IAAjC1U,EAFY,EAEZA,MAEFgE,GAJc,EAELD,WAED/D,EAAMO,YACdkL,EAAMzL,EAAMS,UAAU2D,UAAUJ,EAAMqD,YACtC9C,EAAQP,EAAMG,iBAAiBH,EAAMqD,YACrC8b,EAAqB,MAAT5e,EAAgB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIW,KAAI,SAAAqD,GAAK,OAAKhE,EAAMrB,SAAWqF,GAAS,MAClGxJ,EAAoB,GARJ,EAUgD2b,mBAAQ,WAExE,IAAM0I,EAA+B,GACjCC,EAA4B,GAEhC,GAAiB,UAAb5X,EAAIvL,KAAkB,CACtB,IAAMoE,EAASmH,EAAInH,OACbnF,EAAOmF,EAAOnF,KACdM,EAASH,EAAiBgF,EAAOlF,WAC3B,MAARD,GAA0B,MAAVM,IAChBV,EjC2QiB,SAAC2F,EAAmB3F,GACjD,OAAOA,EAAQmG,KAAI,SAAAoe,GAAQ,OAAI5e,EAAYzF,EAAsBqkB,MiC5Q3CC,EAAmBpkB,EAAKpB,MAAQwG,EAAMrB,UAAY,GAAIzD,EAAOV,SAGvEskB,EAAa5jB,EAAOV,QAAQmG,KAAI,SAAC3D,EAAQ0B,GAAT,OAAe,gBAACugB,GAAD,WAC3C,gCAAOjiB,IAAc,gCAAOtC,EAAsBsC,OADS0B,OAKvE,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAErB,IAAM8T,EAAWqM,EAAcxd,OACzB6d,EAAUN,EAAUlb,SAAS8O,EAAW,IACxC2M,EAAQ3kB,EAAQkJ,SAAS8O,GAKnC,GAJIqM,EAActjB,KACV,eAAC,GAAD,CAAkC6jB,SAAS,EAAO5lB,MAAOkF,EAAGwgB,QAASA,EAASC,MAAOA,GAAzEN,EAAcxd,SAG9B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGqC,SAAShF,EAAI,GAAI,CACjC,IAAM8T,EAAWqM,EAAcxd,OACzB6d,EAAUN,EAAUlb,SAAS8O,EAAW,IACxC2M,EAAQ3kB,EAAQkJ,SAAS8O,GAC/BqM,EAActjB,KACV,eAAC,GAAD,CAAkC6jB,SAAS,EAAM5lB,MAAOkF,EAAGwgB,QAASA,EAASC,MAAOA,GAAxEN,EAAcxd,UAItC,MAAO,CAACwd,EAAeC,KACxB,CAACtkB,IA/CgB,mBAUbqkB,EAVa,UAiDpB,OACI,eAAC,GAAD,CAAOM,MAAO3kB,EAAQ6G,OAAS,EAA/B,SAEI,eAACge,GAAD,UAAUR,OAOhB9L,GAAQxC,IAAOC,IAAV,wJAML,SAAA3W,GAAK,OAAIA,EAAMslB,MAAQ,GAAKnN,YAAnB,4DAiBTiN,IAVQ1O,IAAOC,IAAV,iOAUOD,IAAOC,IAAV,qnBA0BT6O,GAAU9O,IAAOC,IAAV,0OAgBPkB,GAAQnB,IAAOC,IAAV,8TAQA,SAAA3W,GAAK,OAAI,GAAMA,EAAMulB,QAAyB,EAVpC,OAWT,SAAAvlB,GAAK,OAAI,EAVJylB,GAUSzlB,EAAML,OAAsBK,EAAMulB,QAAcE,KAAJ,MAKxD,SAAAzlB,GAAK,OAAKA,EAAMulB,QAhBT,GADA,MAmBf,SAAAvlB,GAAK,OAAIA,EAAMqlB,QAAUlN,YAAhB,sFAEPA,YAFO,yFAKT,SAAAnY,GAAK,OAAKA,EAAMslB,MAAatlB,EAAMqlB,QAAUlN,YAAhB,0FAE3BA,YAF2B,0FAAL,MC5HfuN,GAvBQ,WAMnB,IAN0B,IAAD,EAEKrP,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAAO+D,EAFU,EAEVA,WAETC,EAAQhE,EAAMO,WACd8iB,EAA2B,GALR,WAMjBpgB,GACJogB,EAAWvjB,KACP,eAAC,GAAD,CAAc2V,SAAUzR,EAAM4E,YAAc3F,EAAGiT,QAAS,WACpDlS,EAAM4E,YAAc3F,EAAI,EACxBc,EAAW2C,MAAMI,cAAc9C,KAFxBf,KAFXA,EAAI,EAAGA,EAAI,EAAGA,IAAO,EAArBA,GAQR,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,0BACA,eAAC8gB,GAAD,UAAWV,QAQjB/L,GAAQxC,IAAOC,IAAV,8JAQLqB,GAAStB,IAAOC,IAAV,4PAWNgP,GAAWjP,IAAOC,IAAV,4NAURoG,GAAOrG,IAAOC,IAAV,2OAQJ,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,sDAAkB,MC/DpByN,GAAb,kCAAaA,GAGFC,WAAa,EAHXD,GAKFE,WAAa,EALXF,GAOFG,YAAc,GAPZH,GASFI,iBAAmB,SAACC,GACvB,OAAO,IAAI3U,MAAyB2U,GAAUC,KAAK,OAV9CN,GAaFO,kBAAoB,SAAC1W,GAExB,IADA,IAAMmC,EAA2B,GACxB/M,EAAI,EAAGA,EAAI4K,EAAMjI,OAAQ3C,IAC9B,IAAK,IAAI4C,EAAI,EAAGA,EAAIgI,EAAM5K,GAAG2C,OAAQC,IAC7BgI,EAAM5K,GAAG4C,IACTmK,EAASlQ,KAAK,CAAE0B,OAAQyB,EAAGuhB,YAAa3e,IAOpD,OAHwB,IAApBmK,EAASpK,QACToK,EAASlQ,KAAK,CAAE0B,QAAS,EAAGgjB,YAAa,IAEtCxU,GAzBFgU,GA4BFS,YAAc,SAACC,EAAgCC,GAElD,IADA,IAAM3U,EAA2B,GACxB/M,EAAI,EAAGA,EAAI0hB,EAAM1hB,IAAK,CAC3B,IAAM2hB,EAAwB,CAAEpjB,QAAS,EAAGgjB,YAAa,GACrDvhB,EAAIyhB,EAAe9e,SACnBgf,EAAQpjB,OAASkjB,EAAezhB,GAAGzB,OACnCojB,EAAQJ,YAAcE,EAAezhB,GAAGuhB,aAE5CxU,EAASlQ,KAAK8kB,GAElB,OAAO5U,EAAS0L,WAITsI,I,6UAAAA,MCJAa,GAnCO,WAAO,IAAD,EAEMpQ,qBAAWC,IAAjC1U,EAFgB,EAEhBA,MAAO+D,EAFS,EAETA,WAETC,EAAQhE,EAAMkB,aAEd4jB,EAA6B,GAC7BrjB,EAAUuC,EAAMvC,QAChByO,EAAQzO,EAAQwO,OAAOxO,EAAQkP,YAsBrC,OAnBAT,EAAMb,YAAYxP,SAAQ,SAACmS,EAAM/O,GAC7B,IAAMwS,EAAWhU,EAAQqP,WAAa7N,EAChC8hB,EAAStP,IAAsC,IAA1BhU,EAAQ4P,aAC/B/B,EAAO0C,EAAK1C,KACZ0C,EAAKzC,QAAOD,GAAQ,KACN,IAAd0C,EAAKxC,OAAYF,GAAQ0C,EAAKxC,KAAO,GACzCsV,EAAYhlB,KACR,gBAAC,GAAD,CAAewP,KAAMA,EAAMmG,SAAUA,EAAUsP,OAAQA,EACnD7O,QAAS,WACLzU,EAAQ4P,cAAgB,EACxB5P,EAAQqP,SAAW7N,EAZdc,EAAWkB,QAAQU,SAAS3B,IASzC,UAOKgO,EAAK1C,KAAO0C,EAAKzC,MAAa,IAAL,GAAwB,IAAdyC,EAAKxC,KAAa,GAAK,MAPnDvM,OAYZ,eAAC,GAAD,UACH6hB,KAMHxN,GAAQxC,IAAOC,IAAV,yHASLkB,GAAQnB,IAAOC,IAAV,sTAME,SAAA3W,GAAK,OjCTc,IiCSSA,EAAMkR,KAAO,KAIhD,SAAAlR,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAG3B,SAAAnY,GAAK,OAAKA,EAAM2mB,OAAcxO,YAArB,wEAAgB,MCKhByO,GAhEM,WAAO,IAAD,EAEOvQ,qBAAWC,IAAjC1U,EAFe,EAEfA,MAAO+D,EAFQ,EAERA,WAETC,EAAQhE,EAAMkB,aACdO,EAAUuC,EAAMvC,QAChBwjB,EAAexjB,EAAQuO,SAASpK,OAGhCoY,EAAS,kBAAMja,EAAWkB,QAAQU,SAAS3B,IAE3CkhB,EAAgCxV,MAAM,GAgD5C,OA/CAjO,EAAQwO,OAAOpQ,SAAQ,SAACqQ,EAAOrK,GAG3B,IADA,IAAMsf,EAAyB,GAFE,WAGxBliB,GACL,IAAMmiB,EAA8B,GAEpClV,EAAMb,YAAYxP,SAAQ,SAACmS,EAAMqT,GAC7B,IAAMhU,EAAgB4T,EAAe,EAAKhiB,EACpCwS,EAAWhU,EAAQqP,WAAauU,EAChC/U,EAAOJ,EAAMrC,MAAMwD,GAAcgU,GACjCC,EAAiB,SAACC,GAAD,OAA+BrV,EAAMrC,MAAMwD,GAAcgU,GAAKE,GAE/E7B,EAAgB,MAARpT,EACRyU,EAAStP,GAAYhU,EAAQ4P,eAAiBpO,EAChDqM,EAAO0C,EAAK1C,KACZ0C,EAAKzC,QAAOD,GAAQ,KACN,IAAd0C,EAAKxC,OAAYF,GAAQ0C,EAAKxC,KAAO,GACzC4V,EAAatlB,KACT,eAAC0lB,GAAD,CAAgBlW,KAAMA,EAAMmG,SAAUA,EAAUsP,OAAQA,EAAxD,SACI,eAACU,GAAD,CAAQ/B,MAAOA,EAAOjT,OAAQ,IAC1ByF,QAAS,WAEDoP,EADQ,MAARhV,EACe,CAAEG,OAAQ,IAAKwN,OAAQ,EAAGC,eAAgB,GAE1C,MAEnBF,KAEJa,cAAe,WACXpd,EAAQ4P,aAAepO,EACvBxB,EAAQqP,SAAWuU,EACnBrH,QAbCqH,OAmBrBF,EAAQrlB,KACJ,eAAC,GAAD,CAAiB4lB,OAAQziB,EAAI,GAAK,EAAG0iB,SAAS,EAA9C,SACKP,GADSniB,KAnCbA,EAAI,EAAGA,EAAIgiB,EAAchiB,IAAM,EAA/BA,GAwCTiiB,EAAarf,GAAKsf,KAId,qCACJ,eAACS,GAAD,CAAQC,OAAQ,EAAhB,SAAoBX,EAAazjB,EAAQkP,iBAM3CiV,GAAS9Q,IAAOC,IAAV,+IAUN+G,GAAUhH,IAAOC,IAAV,yJASP,SAAA3W,GAAK,OAAKA,EAAMunB,QAAepP,YAAtB,+CAGL,SAAAnY,GAAK,OAAKA,EAAMsnB,OAEdnP,YAFO,gFAAgBA,YAAhB,mFAHa,MAW1BiP,GAAS1Q,IAAOC,IAAV,qRAMC,SAAA3W,GAAK,OlC3Dc,IkC2DSA,EAAMkR,KAAO,KAIhD,SAAAlR,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAG3B,SAAAnY,GAAK,OAAKA,EAAM2mB,OAAcxO,YAArB,wEAAgB,MAUzBkP,GAAS3Q,IAAOC,IAAV,kSASN,SAAA3W,GAAK,OAAKA,EAAMslB,MAAanN,YAApB,wEAAe,MAMpB,SAAAnY,GAAK,OAAKA,EAAMslB,MAAanN,YAApB,gFAAe,MCvGnBuP,GA7BQ,WAAO,IAAD,EAEKrR,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAEFgE,GAJmB,EAEVD,WAED/D,EAAMkB,cACF8C,EAAMiL,UAEHjL,EAAMvC,QAM3B,OAAQ,uCACJ,gBAAC,GAAD,WACI,eAACskB,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,OAGJ,eAACC,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,QAOFrN,GAAU/D,IAAOC,IAAV,iInCIwB,ImCE/BgR,GAAajR,IAAOC,IAAV,iIAGFoR,IAGRH,GAAclR,IAAOC,IAAV,iIAGHoR,IAGRF,GAAQnR,IAAOC,IAAV,0JnCbwB,KmCoB7BmR,GAAUpR,IAAOC,IAAV,iInCnBwB,IoCItBqR,GA3CK,SAAChoB,GAGd,IAAD,EAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MAAO+D,EADb,EACaA,WAETC,EAAQhE,EAAMkB,aACdO,EAAUuC,EAAMvC,QAChB1D,EAAQ0D,EAAQuO,SAASpK,OAAS,EAAIxH,EAAML,MAE5CigB,EAAS,WACXja,EAAWkB,QAAQU,SAAS3B,IAuBhC,OAAQ,qCACJ,gBAAC,GAAD,WACI,eAAC,GAAD,UAAU5F,EAAMsF,gBAChB,eAAC2iB,GAAD,CAASnQ,QAbI,WACjBzU,EAAQwO,OAAOpQ,SAAQ,SAACqQ,GACpBA,EAAMrC,MAAM/E,OAAO/K,EAAO,MAG9B,IAAMgB,EAAUilB,GAAYO,kBAAkBvgB,EAAM+K,cACpDtN,EAAQuO,SAAWgU,GAAYS,YAAY1lB,EAAS0C,EAAQuO,SAASpK,OAAS,GAC9EoY,KAMI,eACA,eAACqI,GAAD,CAASnQ,QAzBC,WACdzU,EAAQwO,OAAOpQ,SAAQ,SAACqQ,GACpB,IAAMoW,EAAmBtC,GAAYI,iBAAiBlU,EAAMb,YAAYzJ,QACxEsK,EAAMrC,MAAM/E,OAAO/K,EAAO,EAAGuoB,MAGjC,IAAMvnB,EAAUilB,GAAYO,kBAAkBvgB,EAAM+K,cACpDtN,EAAQuO,SAAWgU,GAAYS,YAAY1lB,EAAS0C,EAAQuO,SAASpK,OAAS,GAC9EoY,KAiBI,qBAON1G,GAAQxC,IAAOC,IAAV,yJAQLkB,GAAQnB,IAAOC,IAAV,wRAaL6O,GAAU9O,YAAOmB,GAAPnB,CAAH,kDAKPuR,GAAUvR,YAAOmB,GAAPnB,CAAH,kHC9BEyR,GAvCQ,WAAO,IAAD,EAEK9R,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAEFgE,GAJmB,EAEVD,WAED/D,EAAMkB,cACd+N,EAAYjL,EAAMiL,UAClBxP,EAASH,EAAiB2P,EAAU7P,WACpCqC,EAAUuC,EAAMvC,QAEhB+kB,EAAgC,GACvB,MAAX/kB,GACiBA,EAAQuO,SAChBnQ,SAAQ,SAAC+kB,EAAS3hB,GACvB,IAAIpE,EAAO,IACX,IAAwB,IAApB+lB,EAAQpjB,OAAe,CACvB,IAAMilB,EAAaxX,EAAUC,UAAYjQ,EAAsBQ,EAAOV,QAAQ6lB,EAAQJ,cAChFhjB,EAASojB,EAAQpjB,OAASc,KAAKC,MAAMkkB,EAAa,IACxD5nB,EAAOP,EAAiBmoB,EAAa,IAAMjlB,EAE/CglB,EAAe1mB,KACX,eAAC,GAAD,CACI/B,MAAOkF,EACPS,cAAe7E,GAFDoE,OAQ9B,OAAQ,uCACJ,eAAC,GAAD,IAEA,eAAC,GAAD,UACKujB,IAEL,eAAC,GAAD,QAOF3N,GAAU/D,IAAOC,IAAV,uIrCNwB,IqCY/BkR,GAAQnR,IAAOC,IAAV,mIrCXwB,KqCiB7BmR,GAAUpR,IAAOC,IAAV,mIrChBwB,IsCyEtB2R,GA9GO,WA+BlB,IA/ByB,IAAD,EAEMjS,qBAAWC,IAAjC1U,EAFgB,EAEhBA,MAAO+D,EAFS,EAETA,WAETC,EAAQhE,EAAMkB,aACdO,EAAUuC,EAAMvC,QAEhBgK,EADQhK,EAAQwO,OAAOxO,EAAQkP,YACnBtB,YAAY5N,EAAQqP,UAEhCkN,GADYha,EAAMiL,UACT,WACXlL,EAAWkB,QAAQU,SAAS3B,KAQ1B2iB,EAAa,SAAC9nB,EAAc4W,EAAmBmR,GACjD,OACI,eAAC,GAAD,CAAOC,UAAU,EAAMpR,SAAUA,EAC7BS,QAAS0Q,EADb,SAEK/nB,KAIPioB,EAAiB,SAACxX,GACpB,OAAOqX,EAAWI,OAAOzX,GAAO7D,EAAI6D,OAASA,GAAM,kBAdvC,SAACA,GACb7D,EAAI6D,KAAOA,EACX0O,IAYyDgJ,CAAQ1X,OAG/D2X,EAA6B,GAC1BhkB,EAAI,EAAGA,EAAI+gB,GAAYG,YAAalhB,IAAK,CAC9C,IAAMsF,EAAQtF,EAAI,EAClBgkB,EAAYnnB,KACR,eAAConB,GAAD,CACI3e,MAAOA,EADX,SAEKA,GAFWtF,IAOxB,IAAMkkB,EAAa,gBAACC,GAAD,WACf,eAACC,GAAD,CACI9e,MAAO9G,EAAQuO,SAASpK,OACxBoS,SAAU,SAACC,GACP,IAAMqP,EAAW7lB,EAAQuO,SAASpK,OAC5B2hB,EAAU3J,OAAO3F,EAAEzP,OAAOD,OAC1Bmc,EAAiBV,GAAYO,kBAAkBvgB,EAAM+K,cAC3DtN,EAAQuO,SAAWgU,GAAYS,YAAYC,EAAgB6C,GAC3D,IAAMngB,EAAMwW,OAAO3F,EAAEzP,OAAOD,OAAS+e,EACrC7lB,EAAQwO,OAAOpQ,SAAQ,SAACqQ,EAAOjN,GAC3B,GAAImE,EAAM,EAEN,IADA,IAAMkf,EAAmB,IAAI5W,MAAyBQ,EAAMb,YAAYzJ,QAAQ0e,KAAK,MAC5Eze,EAAI,EAAGA,EAAIuB,EAAKvB,IAAKqK,EAAMrC,MAAM/N,KAAK2X,KAAKW,MAAMX,KAAKC,UAAU4O,SACtE,CACH,IAAMkB,EAASllB,KAAKiZ,IAAInU,GACxB8I,EAAMrC,MAAM/E,QAAQ0e,EAAQA,OAGpCxJ,KAjBR,SAmBKiJ,IAEJH,EAAe,IACfA,EAAe,GACfA,EAAe,GACfA,EAAe,GACfA,EAAe,GACfH,EAAW,IAAKlb,EAAI8D,OAAO,WACxB9D,EAAI8D,OAAS9D,EAAI8D,MACjByO,OAEH2I,EAAW,MAAoB,IAAblb,EAAI+D,MAAY,WACd,IAAb/D,EAAI+D,KAAY/D,EAAI+D,KAAO,EAC1B/D,EAAI+D,KAAO,EAChBwO,OAEH2I,EAAW,MAAoB,IAAblb,EAAI+D,MAAY,WACd,IAAb/D,EAAI+D,KAAY/D,EAAI+D,KAAO,EAC1B/D,EAAI+D,KAAO,EAChBwO,UAKFyJ,GAAyC,IAA1BhmB,EAAQ4P,aAAsB,KAC/C5P,EAAQwO,OAAOxO,EAAQkP,YAAY9C,MAAMpM,EAAQuO,SAASpK,OAAS,EAAInE,EAAQ4P,cAAc5P,EAAQqP,UACnG4W,EAAc,gBAACC,GAAD,WAEfhB,EAAW,IAAqB,MAAhBc,GAAsB,WAEnCzJ,OAGH2I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAahX,QAAgB,WAElEuN,OAEH2I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAahX,QAAgB,WAElEuN,OAEH2I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAahX,QAAgB,WAElEuN,UAGR,OAAmC,IAA3Bvc,EAAQ4P,aAAuB8V,EAAaO,GAKlDN,GAAWtS,IAAOC,IAAV,+HAMR4S,GAAY7S,IAAOC,IAAV,+HAQTsS,GAAQvS,IAAO8S,OAAV,qXAkBLV,GAAYpS,IAAO+S,OAAV,4HAQT5R,GAAQnB,IAAOC,IAAV,gcAkBL,SAAA3W,GAAK,OAAIA,EAAMyoB,SAAW,GAAKtQ,YAAtB,2FAKT,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAMvB,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,gFAAkB,MCvHtBuR,GA1DM,WAAO,IAAD,EAEOrT,qBAAWC,IAAjC1U,EAFe,EAEfA,MAAO+D,EAFQ,EAERA,WAETC,EAAQhE,EAAMkB,aAGd6mB,GAFY/jB,EAAMiL,UAEc,MAAjBjL,EAAMvC,SAErBuc,EAAS,WACXja,EAAWkB,QAAQU,SAAS3B,IAGhC,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,UACI,gBAACgkB,GAAD,WACI,eAAC,GAAD,sBACA,eAAC,GAAD,CAASvS,SAAUsS,EACf7R,QAAS,WACL,GAAK6R,EAcD/jB,EAAMvC,QAAU,KAChBuc,QAfe,CACf,IAAMnQ,EAAQ7J,EAAM+K,aACd2V,EAAiBV,GAAYO,kBAAkB1W,GAC/CmC,EAAWgU,GAAYS,YAAYC,EAAgB,GACzD1gB,EAAMvC,QAAU,CACZkP,WAAY,EACZG,SAAU,EACVO,cAAe,EACfrB,WACAiY,YAAY,EACZhY,OAAQ,CAAClM,EAAWkB,QAAQmK,kBAAmBrL,EAAWkB,QAAQmK,oBAEtE4O,MAdZ,sBAuBR,eAACkK,GAAD,CAAOzS,SAAUsS,EAAjB,SACMA,EAAwB,uCACtB,eAACI,GAAD,UAAY,eAAC,GAAD,MACZ,gBAACC,GAAD,WACI,eAACC,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,UACI,eAAC,GAAD,YAPK,qCAkB3BhR,GAAQxC,IAAOC,IAAV,qNAYL8D,GAAU/D,IAAOC,IAAV,iFAMPqB,GAAStB,IAAOC,IAAV,4BACNiT,GAAalT,IAAOC,IAAV,8hBAaRqB,IAYF+B,GAAUrD,IAAOC,IAAV,mUAaP,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,uGAAkB,MAU3B2R,GAAQpT,IAAOC,IAAV,8JvC7FyBwT,KuCoG9B,SAAAnqB,GAAK,OAAIA,EAAMqX,SAAW,GAAKc,YAAtB,yDAMT4R,GAAarT,IAAOC,IAAV,sJvC9GwB,IuCsHlCqT,GAAWtT,IAAOC,IAAV,+MAYRsT,GAAcvT,IAAOC,IAAV,6GAMXuT,GAAcxT,IAAOC,IAAV,0HCpGFyT,GArEQ,WAWnB,IAX0B,IAAD,EACK/T,qBAAWC,IAAjC1U,EADiB,EACjBA,MAAO+D,EADU,EACVA,WAETC,EAAQhE,EAAMkB,aACd+N,EAAYjL,EAAMiL,UAClBxP,EAASH,EAAiB2P,EAAU7P,WAEpCyO,EAAQ7J,EAAM+K,aACdtN,EAAUuC,EAAMvC,QAEhBgnB,EAAoC,GAVjB,WAWhBxlB,GAEL,IADA,IAAMogB,EAA4B,GAZb,WAaZxd,GACL,IAAIghB,EAAoBpnB,EAAOV,QAAQ6G,OAASC,EAC5C6iB,EAAsB7a,EAAM5K,GAAG4C,GAE7BT,EAAWnG,EAAsBQ,EAAOV,QAAQ8G,IAChD8iB,GAAc1Z,EAAUC,UAAY9J,GAAY,GAChD5D,EAASyB,EAAIX,KAAKC,OAAO0M,EAAUC,UAAY9J,GAAY,IAE3DvG,EAAQgoB,EAAD,UAAoBvoB,EAAiBqqB,IAArC,OAAmDnnB,GAAvC,GACzB6hB,EAAWvjB,KACP,eAAC8oB,GAAD,CACI/B,SAAUA,EACV6B,WAAYA,EACZxS,QAAS,WAEL,GADArI,EAAM5K,GAAG4C,IAAM6iB,EACA,MAAXjnB,EAAiB,CACjB,IAAMijB,EAAiCV,GAAYO,kBAAkB1W,GACrEpM,EAAQuO,SAAWgU,GAAYS,YAAYC,EAAgBjjB,EAAQuO,SAASpK,QAEhF7B,EAAWkB,QAAQU,SAAnB,2BAAiC3B,GAAjC,IAAwC+K,aAAclB,EAAOpM,cAEjEod,cAAe,WACX,IAAMnB,EAAY1d,EAAMgB,YAAY2C,MACnB,MAAb+Z,GACAA,EAAUna,KAAK1E,EAAM,EAAG,CAAE2E,SAAU,KAdhD,SAkBK3E,GAlBcgH,KAVlBA,EAAI,EAAGA,EAAIme,GAAYE,WAAYre,IAAM,EAAzCA,GAgCT4iB,EAAmB3oB,KACf,eAAC+oB,GAAD,UACKxF,GADcpgB,KAnClBA,EAAI,EAAGA,EAAI+gB,GAAYC,WAAYhhB,IAAM,EAAzCA,GAyCT,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,IAGA,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC6lB,GAAD,uBACA,eAACA,GAAD,wBACA,eAACA,GAAD,8BAEJ,eAAC,GAAD,UAASL,WAWnBnR,GAAQxC,IAAOC,IAAV,6EAKLgU,GAAQjU,IAAOC,IAAV,+HAOLmT,GAAQpT,IAAOC,IAAV,0RAGG,KAYRwC,GAAQzC,IAAOC,IAAV,kJAEciU,KAKnBF,GAAYhU,IAAOC,IAAV,6XApCI,IAmDb+C,GAAShD,IAAOC,IAAV,0FAKN8T,GAAe/T,IAAOC,IAAV,mNAzDA,IAmEZ6T,GAAe9T,IAAOC,IAAV,gaAlEC,IA4Eb,SAAA3W,GAAK,OAAKA,EAAMsqB,WAAkBnS,YAAzB,2FAAoB,MAI7B,SAAAnY,GAAK,OAAIA,EAAMyoB,SAAW,GAAKtQ,YAAtB,2FAaL,SAAAnY,GAAK,OAAKA,EAAMsqB,WAAkBnS,YAAzB,8EAAoB,MChJxB0S,GAtBY,WAAO,IAAD,EAECxU,qBAAWC,IAAjC1U,EAFqB,EAErBA,MAAO+D,EAFc,EAEdA,WAED/D,EAAMkB,aAEpB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,gBAACgoB,GAAD,WACI,eAAC,GAAD,CAASrC,UAAU,EAAnB,kBACA,eAAC,GAAD,CAASA,UAAU,EAAnB,oBACA,eAAC,GAAD,CAASA,UAAU,EAAM3Q,QAAS,WAC9BnS,EAAWkB,QAAQ6K,0BACnB/L,EAAWkB,QAAQkK,sBAFvB,2BAWVmI,GAAQxC,IAAOC,IAAV,6EAKLmU,GAAapU,IAAOC,IAAV,6JAQVoD,GAAUrD,IAAOC,IAAV,yaAiBP,SAAA3W,GAAK,OAAIA,EAAMyoB,SAAW,GAAKtQ,YAAtB,2FCzBA4S,GA5BO,WAAO,IAAD,EACM1U,qBAAWC,IAAjC1U,EADgB,EAChBA,MAAO+D,EADS,EACTA,WAGTqlB,EAA4B,YADpBppB,EAAMO,WACCuO,SAEf1K,EAAYpE,EAAMS,UAAU2D,UAC5BiD,EAAarH,EAAMO,WAAW8G,WAEpC,OAAQ,uCACJ,eAAC,GAAD,CAAQ+hB,OAAQA,EAAQlT,QAAS,WAC7BnS,EAAWkB,QAAQkK,wBAEvB,gBAAC,GAAD,WACI,eAAC,GAAD,CAAWia,OAAQA,EAAnB,SAC2B,MAAtBppB,EAAMkB,aAAuB,+BAAQ,eAAC,GAAD,MAE1C,eAAC,GAAD,CACI2lB,SAAyC,UAA/BziB,EAAUiD,GAAYnH,KAChCgW,QAAS,WACLnS,EAAWkB,QAAQ4J,qBAH3B,SAKI,oDAQV+F,GAASE,IAAOC,IAAV,+NAGG,SAAA3W,GAAK,OAAIA,EAAMgrB,OAAS,eAAiB,UAWlD9R,GAAQxC,IAAOC,IAAV,2MAaLuB,GAAYxB,IAAOC,IAAV,4MAIF,SAAA3W,GAAK,OAAIA,EAAMgrB,OAAS,QAAU,KAQzChT,GAAStB,IAAOC,IAAV,4pBAiBN,SAAA3W,GAAK,OAAIA,EAAMyoB,SAAW,GAAKtQ,YAAtB,2F,oBCqDA8S,GAjIM,SAACjrB,GAEf,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WAET6F,EAAUsS,iBAAuB,IACjC9X,EAAYpE,EAAMS,UAAU2D,UAE5BC,GADarE,EAAMO,WAAW8G,WACtBrH,EAAMS,UAAU2D,UAAU,GAAGE,QAErC4O,EAASlT,EAAMO,WAAW2S,OA4FhC,OAxFAkC,qBAAU,WACDlC,GACDtJ,EAAQwS,QAAQkN,QAGpBC,KAAUnmB,WAAW,IAAIomB,aAAgB,wBACrC,CAAEzV,KAAM,EAAG0V,QAAS,KAAOC,MAAK,SAACC,GAC7B5lB,EAAW2C,MAAMC,SAASgjB,QAEnC,CAACzW,IAEJkC,qBAAU,WACN,IAAMjR,EAAmC,GACnCsD,EAAmC,GAErCmiB,EAAW,EACXC,EAAY,EACZC,EAAa,EACbC,EAAc,EACdviB,GAAa,EACbtE,GAAY,EACZ8mB,EAAiB,EAErB5lB,EAAUvE,SAAQ,SAAC2E,EAASvB,GAExB,OADauB,EAAQtE,MAEjB,IAAK,QAGD,MACJ,IAAK,OACD,IAAMoE,EAASE,EAAQF,OACvBpB,EAAWoB,EAAOpB,SAElB,MACJ,IAAK,UACD,IAAMoB,EAASE,EAAQF,OACvBmD,EAAiB3H,KAAK,CAClBkJ,UAAW1E,EAAO0E,UAClBiR,QAAS,EACTrS,gBAAiB3E,EACjB4E,cAAezD,EAAUwB,OAAS,MAEtC4B,EAEgB,IACZC,EAAiBD,EAAY,GAAGK,cAAgB5E,EAAI,EACpDwE,EAAiBD,EAAY,GAAGyS,QAAU+P,EAC1CA,EAAiB,GAGrB,MACJ,IAAK,QACD,IAAM1lB,EAASE,EAAQF,OACvBslB,EAAWC,EACXA,GAAavlB,EAAOM,QACpBolB,GAAkB1lB,EAAOM,QAEzBklB,EAAaC,EACbA,GAAezlB,EAAOO,OAAOC,KAC7BilB,GAAezlB,EAAOO,OAAOE,KASrC,IAAMN,EAAa,IAAQJ,EAAKiB,KAAOskB,EAAWE,GAC5CG,E9CiMS,SAACvgB,GAExB,OAAQA,GACJ,IAAK,MAAO,MAAO,CAAC,EAAG,GACvB,IAAK,MAAO,MAAO,CAAC,EAAG,GAE3B,MAAO,CAAC,EAAG,G8CvMcwgB,CAAY7lB,EAAKuT,eAAe,GACjDzT,EAAiBrE,KAAK,CAClBmZ,IAAK3W,KAAKC,MAAMqnB,EAAWK,GAC3B7Q,KAAMwQ,EAAWK,EACjBplB,OAAQilB,EACR5mB,WACAsE,YACA/C,aACAoF,QAAS,QAGjBpC,EAAiBD,GAAWyS,QAAU+P,EAEtChqB,EAAMO,WAAW4D,iBAAmBA,EACpCnE,EAAMO,WAAWkH,iBAAmBA,EACpC1D,EAAW2C,MAAMI,cAAc9G,EAAMO,cACtC,CAAC6D,EAAWA,EAAUwB,OAAQvB,EAAKiB,MAGlC,gBAAC,GAAD,CACI6kB,SAAU,IACV3N,IAAK5S,EACL6L,SAAUrX,EAAMqX,SAEhB2U,UAAW,SAACnS,GAAD,OAAsB4F,GAAc5F,EAAGjY,EAAO+D,GAAY,IACrEsmB,QAAS,SAACpS,GAAD,OAAsB4F,GAAc5F,EAAGjY,EAAO+D,GAAY,IANvE,UAQI,gBAAC,GAAD,WACI,eAAC,GAAD,UAAO,eAAC,GAAD,MACP,gBAACumB,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,UAAO,eAAC,GAAD,SAEX,gBAACC,GAAD,WACI,eAACC,GAAD,UAAgB,eAAC,GAAD,MAChB,eAACC,GAAD,UAAY,eAAC,GAAD,YAGpB,eAAC,GAAD,UACI,eAAC,GAAD,UAOVnT,GAAQxC,IAAOC,IAAV,0GAGI,SAAA3W,GAAK,OAAKA,EAAMqX,SAAoB,eAAT,UAMpC8B,GAAQzC,IAAOC,IAAV,sK3C9I0B,K2CqJ/B+C,GAAShD,IAAOC,IAAV,yJ3CrJyB,K2C4J/B6H,GAAQ9H,IAAOC,IAAV,+H3C3JyB,I2CkK9BuV,GAAUxV,IAAOC,IAAV,qKAIa2V,KAIpBxC,GAAQpT,IAAOC,IAAV,8JAQLwV,GAAQzV,IAAOC,IAAV,+K3CjLyB,I2C0L9ByV,GAAiB1V,IAAOC,IAAV,4I3CzLkB,K2C+LhC0V,GAAa3V,IAAOC,IAAV,+H3C/LsB,K4CuBvB4V,GAtCM,WAAO,IAAD,EAEOlW,qBAAWC,IAAjC1U,EAFe,EAEfA,MAAO+D,EAFQ,EAERA,WAETC,EAAQhE,EAAMO,WACdqqB,EAAW5mB,EAAMyD,iBAEvB,IAA0B,IAAtBzD,EAAMqD,YAAqBrD,EAAMqD,WAAarD,EAAMG,iBAAiByB,OACrE,OAAO,+BAGX,IAAMilB,EAAe7mB,EAAMG,iBAAiBH,EAAMqD,YAAYG,UAExD5H,EAAsB,GAoB5B,OAnBAgrB,EAAS/qB,SAAQ,SAACirB,EAAS7nB,GACvB,IAAM+W,EAAS1X,KAAKC,MAAMuoB,EAAQ7Q,QAAU,GACtCC,EAAS4Q,EAAQ7Q,QAAU,EAC3BxE,EAAWxS,IAAM4nB,EACvBjrB,EAAKE,KACD,gBAAC,GAAD,CAEI2V,SAAUA,EACVS,QAAS,WACLlS,EAAMqD,WAAayjB,EAAQljB,gBAC3B7D,EAAW2C,MAAMI,cAAc9C,IALvC,UAQI,eAAC,GAAD,UAAS8mB,EAAQ9hB,YACjB,gBAAC+hB,GAAD,WAAS/Q,EAAmB,IAAXE,EAAe,GAAf,YAAyBA,EAAzB,UARZjX,OAaT,qCACHrD,KAOHwW,GAAStB,IAAOC,IAAV,4BACNgW,GAASjW,IAAOC,IAAV,4BACNkB,GAAQnB,IAAOC,IAAV,qvBAOa,SAAA3W,GAAK,OAAIA,EAAMqX,SAAWc,YAAjB,gGAGzBA,YAHyB,wDAWzBH,GAUA2U,ICuBOC,GA5FQ,SAAC5sB,GAMjB,IAAD,EAE4BqW,qBAAWC,IAAjC1U,EAFN,EAEMA,MAAO+D,EAFb,EAEaA,WAETknB,EAAa/O,iBAA8B,MAC3CgP,EAAWhP,iBAA8B,MAEzClY,EAAQhE,EAAMO,WAEd6D,EAAYpE,EAAMS,UAAU2D,UAC5B+mB,EAAY/sB,EAAM+sB,UAClB9e,EAAYjO,EAAMiO,UAClB5G,EAAWrH,EAAMqH,SACjB2lB,EAAiBhtB,EAAMgtB,eACvBvX,EAAkBzV,EAAMyV,gBACxBvE,EAAO,EAAItP,EAAMW,YAAYkC,SAC7BwB,EAAOrE,EAAMS,UAAU2D,UAAU,GAAGE,OAE1C8Q,qBAAU,WACNpV,EAAMc,KAAKgN,OAAOyG,QAAU0W,EAAW7O,QACvCpc,EAAMc,KAAKgN,OAAOtD,MAAQ0gB,EAAS9O,UACpC,IAEH,IAAMiP,EAAgC3Q,mBAAQ,WAE1C,IADA,IAAMU,EAAyB,GACtBnY,EAAI,EAAGA,GAAiB,EAAZkoB,EAAgB,EAAGloB,IAAK,CACzC,IAAIqoB,EAAS,+BACTroB,EAAI,IAAM,IACVqoB,EAAS,eAAC,GAAD,UAAOhpB,KAAKC,MAAMU,EAAI,IAAM,KAEzCmY,EAAQtb,KACJ,eAACyrB,GAAD,CAAgBC,OAAQvoB,EAAI,IAAM,EAAGoJ,UAAWA,EAAhD,SACKif,GADQroB,IAKrB,OAAOmY,IACR,CAAC+P,IAEEM,EAA8B/Q,mBAAQ,WACxC,IAAMU,EAAyB,GA2B/B,OA1BAhX,EAAUvE,SAAQ,SAAC2E,EAASvB,GACxB,GAAqB,UAAjBuB,EAAQtE,KAAkB,CAAC,IAAD,EACpBoE,EAASE,EAAQF,OACjBonB,EAAU,UAAGpsB,EAAiBgF,EAAOlF,kBAA3B,aAAG,EAAoCP,KACjD8sB,EAA4B,MAAfrnB,EAAOnF,KAAe,IACrChB,EAAcmG,EAAOnF,MAAQusB,EAC3BrS,EAA2B,MAAf/U,EAAOnF,KAAe,IACpCZ,EAAa+F,EAAOnF,KAAMkF,EAAKnB,UAAYwoB,EAC/CtQ,EAAQtb,KACJ,gBAAC8rB,GAAD,CACIzhB,MAAOkC,GAAa/H,EAAOM,QAAUN,EAAOO,OAAOC,KAAOR,EAAOO,OAAOE,MACxE0Q,SAAUjR,GAAWiB,EACrByQ,QAAS,WACLlS,EAAMkP,QAAS,EACflP,EAAMqD,WAAapE,EACnBc,EAAW2C,MAAMI,cAAc9C,IAEnC6a,cAAe,WACX/Y,GAAkB9F,IAT1B,UAYI,eAAC6rB,GAAD,UAAcF,IAAyB,gBAACG,GAAD,gBAAezS,EAAf,SAZ1B+B,EAAQxV,aAiB9BwV,IACR,CAAChX,EAAWqB,IAEf,OAAQ,uCACJ,eAAC,GAAD,CAAQ+W,IAAK0O,EAAb,SACI,eAACa,GAAD,CAAY5hB,MAAOihB,EAAnB,SACKK,MAGT,gBAAC,GAAD,CAAUjP,IAAKyO,EAAf,UACKI,EACD,eAACW,GAAD,CACI1f,KAAMuH,EAAkBxH,EAAYiD,EACpCnF,MAAOkC,EAAYiD,WAQ7B0T,GAAWlO,IAAOC,IAAV,gSAaRiX,GAAYlX,IAAOC,IAAV,8MAOH,SAAA3W,GAAK,OAAIA,EAAMkO,QAEd,SAAAlO,GAAK,OAAIA,EAAM+L,SAKtBoP,GAASzE,IAAOC,IAAV,6OAWNgX,GAAajX,IAAOC,IAAV,2FAGH,SAAA3W,GAAK,OAAIA,EAAM+L,SAKtByhB,GAAa9W,IAAOC,IAAV,6ZAKH,SAAA3W,GAAK,OAAIA,EAAM+L,MAAQ,KAM9B,SAAA/L,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MAY3BsV,GAAc/W,IAAOmX,KAAV,mDAGXH,GAAahX,IAAOmX,KAAV,qDAIVV,GAASzW,IAAOC,IAAV,mRAOC,SAAA3W,GAAK,OAAIA,EAAMiO,UAAY,KAG1B,SAAAjO,GAAK,OAAIA,EAAMotB,OAAS,OAAS,UAEtB,SAAAptB,GAAK,OAAIA,EAAMotB,OAAS,MAAQ,SAGnD9I,GAAO5N,IAAOC,IAAV,uLC1HKmX,GA9DS,SAAC9tB,GAGlB,IAAD,EAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MACFqE,GAFJ,EACaN,WACF/D,EAAMS,UAAU2D,UAAU,GAAGE,QAGpC6nB,EAAmBzR,mBAAQ,WAC7B,IAAM0R,EAA4B,GAClC,GAAsB,MAAlBhuB,EAAMqH,SAAkB,CACxB,IAAMnB,EAASlG,EAAMqH,SAASnB,OACxB7E,EAASH,EAAiBgF,EAAOlF,WACjCD,EAAOmF,EAAOnF,KACR,MAARA,GAA0B,MAAVM,GAChBA,EAAOV,QAAQc,SAAQ,SAAC0B,GACpB6qB,EAAgBtsB,MAAMX,EAAKpB,MAAQsG,EAAKnB,SAAWjE,EAAsBsC,IAAW,OAMhG,IADA,IAAM3B,EAAsB,GAbO,WAc1BqD,GACL,IAAMC,GAAa,GAAKD,EAAK,GAAK,GAC5BzB,EAASc,KAAKC,OAAQ,GAAKU,EAAK,GAAK,IAAM,EAC3CE,EAAY7E,EAAiB4E,EAAW,IAC3BmpB,GAAc7qB,GACjC5B,EAAKE,KACD,eAACwsB,GAAD,CACI7I,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIxb,SAAS/E,GACzCqpB,SAAUH,EAAgBnkB,SAAS/E,GACnCuS,SAAUxS,IAAM7E,EAAMwV,gBACtBsC,QAAS,WACL,IAAM9S,EAAapD,EAAMgB,YAAYqC,gBACnB,MAAdD,IACAA,EAAWE,OACXF,EAAWG,KAAKJ,EAAY3B,EAAQ,EAAG,CAAEgC,SAAU,MAR/D,SAaKL,GAbYF,KANhBA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAuBT,OAAOrD,IACR,CAACxB,EAAMwV,gBAAiBxV,EAAMqH,WAEjC,OAAQ,uCACJ,gBAAC+mB,GAAD,WACI,eAACC,GAAD,CAAahX,UAAU,EAAvB,SAA8B,0CAC9B,eAACgX,GAAD,CAAahX,UAAU,EAAvB,SAA8B,wCAC9B,eAACgX,GAAD,CAAahX,UAAU,EAAvB,SAA8B,0CAC9B,eAACgX,GAAD,CAAahX,UAAU,EAAvB,SAA8B,0CAC9B,eAACgX,GAAD,CAAahX,UAAU,EAAvB,SAA8B,4CAElC,eAACiX,GAAD,UACKP,QAOPE,GAAgB,SAAChP,GACnB,OAAQA,GACJ,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,OACf,QAAS,MAAO,KAIlBmP,GAAc1X,IAAOC,IAAV,yHAOX2X,GAAa5X,IAAOC,IAAV,sIAOV0X,GAAc3X,IAAOC,IAAV,obAQX,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MAc3B+V,GAAaxX,IAAOC,IAAV,uVAQV,SAAA3W,GAAK,OAAKA,EAAMqlB,QAAelN,YAAtB,wDAAiB,KAGlBvQ,IAER,SAAA5H,GAAK,OAAKA,EAAMmuB,SAAgBhW,YAAvB,sDAAkB,MAC3B,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,sDAAkB,MC7FlBoW,GAjCU,SAACvuB,GAInB,IAAD,EAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MAAO+D,EADb,EACaA,WACTC,EAAQhE,EAAMW,YAEpB,OACI,gBAAC,GAAD,CACI8U,SAAUrX,EAAM0V,cAAcjV,OAASmF,EAAM8P,cAAcjV,KAC3DqX,QAAS,WAILlS,EAAM8P,cAAgB1V,EAAM0V,cAC5B/P,EAAW2B,KAAKC,SAAS3B,GAEzB,IAAM4oB,EAAOxuB,EAAM0V,cACnByV,KAAUnmB,WAAW,IAAIomB,aAAgBoD,EAAK/tB,KAC1C,CAAEkV,KAAM6Y,EAAK7Y,KAAM0V,QAAS,KAAOC,MAAK,SAACC,GACrC5lB,EAAW2B,KAAK0F,cAAcue,MAC/BD,MAAK,WACJ9lB,MAAM,wBAdtB,UAkBI,eAAC,GAAD,UAAQxF,EAAMoX,OACd,eAAC,GAAD,UAASpX,EAAM4K,gBAOrBsO,GAAQxC,IAAOC,IAAV,2VASL,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MASvB,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,gFAAkB,MAO/BJ,GAAQrB,IAAOC,IAAV,qQAYLqB,GAAStB,IAAOC,IAAV,uPCrDG8X,GApBQ,SAACzuB,GASpB,OACI,eAAC,GAAD,CACIqX,SAAUrX,EAAMqX,SAChBC,UAAWtX,EAAMsX,UACjBQ,QAAS9X,EAAMwoB,SAHnB,SAKKxoB,EAAM4K,aAObsO,GAAQxC,IAAOC,IAAV,uWAQL,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,8GAAkB,MAG3B,SAAAnY,GAAK,OAAKA,EAAMsX,UAAiBmB,GAAL,MCfnBiW,GAlBO,SAAC1uB,GAQnB,OACI,eAAC,GAAD,CACIsX,UAAWtX,EAAMsX,UACjBQ,QAAS9X,EAAMwoB,SAFnB,SAIKxoB,EAAM4K,aAObsO,GAAQxC,IAAOC,IAAV,gcAOL,SAAA3W,GAAK,OAAKA,EAAMsX,UAAiBmB,GAAL,MCyCnBkW,GA9DM,WAAO,IAAD,EACOtY,qBAAWC,IAAjC1U,EADe,EACfA,MAAO+D,EADQ,EACRA,WACTC,EAAQhE,EAAMW,YAEpB,OAAQ,uCACJ,gBAACqsB,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,GAAD,CAAgBjkB,UAAW,KAAM0M,WAAW,EAAOD,SAA6B,IAAnBzR,EAAMnB,SAAgB+jB,SAAU,WACzF5iB,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,MAE7B,eAAC,GAAD,CAAgBgF,UAAW,IAAK0M,WAAW,EAAOD,SAAU,CAAC,EAAG,GAAGxN,SAASjE,EAAMnB,UAAW+jB,SAAU,WACnG5iB,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,MAE7B,eAAC,GAAD,CAAgBgF,UAAW,IAAK0M,WAAW,EAAOD,SAAU,CAAC,EAAG,GAAGxN,SAASjE,EAAMnB,UAAW+jB,SAAU,WACnG5iB,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,MAE7B,eAAC,GAAD,CAAgBgF,UAAW,KAAM0M,UAA8B,IAAnB1R,EAAMnB,SAAgB4S,SAAU,CAAC,EAAG,GAAGxN,SAASjE,EAAMnB,UAAW+jB,SAAU,WAC/G,CAAC,EAAG,GAAG3e,SAASjE,EAAMnB,UACtBmB,EAAMnB,UAAY,EAElBmB,EAAMnB,UAAY,EAEtBkB,EAAW2B,KAAKC,SAAS3B,SAGjC,gBAACkpB,GAAD,WACI,eAAC,GAAD,CAAelkB,UAAW,KAAM0M,WAAW,EAAOkR,SAAU,WACxD,IAAMhnB,EAAOI,EAAMS,UAAU0K,UAC7BvL,EAAKC,SAAQ,SAAAgC,GACTA,EAAM8J,gBAEV5H,EAAW2B,KAAKwF,aAAatL,EAAKuI,YAEtC,eAAC,GAAD,CAAea,UAAW,OAAQ0M,WAAW,EAAOkR,SAAU,WAC1D,IAAMhnB,EAAOI,EAAMS,UAAU0K,UAC7BvL,EAAKC,SAAQ,SAAAgC,GACTA,EAAM8J,gBAEV5H,EAAW2B,KAAKwF,aAAatL,EAAKuI,YAEtC,eAAC,GAAD,CAAea,UAAW,QAAS0M,WAAW,EAAOkR,SAAU,WAC3D7iB,EAAW2B,KAAKwF,aAAa,aAIzC,gBAACiiB,GAAD,WACI,eAAC,GAAD,CAAkB3X,KAAM,eAAC,KAAD,IAAcxM,UAAU,SAAS8K,cAAe,CAAEjV,KAAM,SAAUkV,KAAM,KAChG,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAcxM,UAAU,WAAW8K,cAAe,CAAEjV,KAAM,oBAAqBkV,KAAM,KAC7G,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAiBxM,UAAU,WAAW8K,cAAe,CAAEjV,KAAM,YAAakV,KAAM,KACxG,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAaxM,UAAU,QAAQ8K,cAAe,CAAEjV,KAAM,QAASkV,KAAM,KAC7F,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAexM,UAAU,UAAU8K,cAAe,CAAEjV,KAAM,UAAWkV,KAAM,KACnG,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAgBxM,UAAU,WAAW8K,cAAe,CAAEjV,KAAM,WAAYkV,KAAM,KACtG,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAgBxM,UAAU,OAAO8K,cAAe,CAAEjV,KAAM,OAAQkV,KAAM,KAC9F,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAgBxM,UAAU,QAAQ8K,cAAe,CAAEjV,KAAM,QAASkV,KAAM,KAChG,eAAC,GAAD,CAAkByB,KAAM,eAAC,KAAD,IAAexM,UAAU,UAAU8K,cAAe,CAAEjV,KAAM,UAAWkV,KAAM,YAOzGiZ,GAAgBlY,IAAOC,IAAV,gHAObkY,GAAoBnY,IAAOC,IAAV,wFAKjBmY,GAAWpY,IAAOC,IAAV,kFAMRoY,GAAsBrY,IAAOC,IAAV,+HCxFnBqY,G,kCAAAA,GAEKC,eAAiB,SAACpV,EACrBjY,EAAc+D,EAAwBqnB,EAAwBpN,GAE9D,GAAiB,IAAb/F,EAAEqV,OAAN,CAEA,IAAMxsB,EAAOd,EAAMc,KAAKgN,OACxB,GAAkB,MAAdhN,EAAK+M,OAAiC,MAAhB/M,EAAKyT,SAAiC,MAAdzT,EAAK0J,OAA+B,MAAd1J,EAAK0N,MAAe,CACxF,IAAMxK,EAAQhE,EAAMW,YACd4sB,EAAQvtB,EAAMW,YAAY6E,WAC1BgO,EAAa+Z,EAAM/Z,WACnBrI,EAAYnL,EAAMS,UAAU0K,UAC5BmE,EAAO,EAAItL,EAAMnB,SAEjB2qB,EAAc,WAChB,IAAMC,EAAOtiB,EAAU3L,MAAK,SAAAwS,GAAI,OAAI5F,EAAIxK,GAAyBoQ,EAAK3J,KAAOrE,EAAMqI,aAC/EkH,EAAW6X,EAIf,YAHY1rB,GAAR+tB,IACAla,EAAW3R,GAAyB6rB,EAAKplB,KAAOrE,EAAMqI,WAEnDkH,GAGLma,EAAO5sB,EAAK+M,MAAM8f,wBAClBvhB,EAAI6L,EAAE2V,QAAU9sB,EAAK+M,MAAMggB,WAAaH,EAAKphB,KAC7CiE,EAAI0H,EAAE6V,QAAUhtB,EAAK+M,MAAMkgB,UAAYL,EAAKvf,IAGlD,IAA0B,IAAtBqF,EAAWzV,MAEXwvB,EAAMna,OAAQ,EACdma,EAAMla,KAAO,CACTjH,EAAG9J,KAAKC,MAAM6J,EAAIpI,EAAMqI,UAAYiD,GAAQtL,EAAMqI,UAAYiD,EAC9DiB,EAAGjO,KAAKC,MAAMgO,EAAIvK,IAAqBA,IAG3CunB,EAAMha,SAAWia,IACjBD,EAAMpjB,MAAQ,OAId,GAAwB,WAApBqJ,EAAWC,KAAmB,CAE1B,IAAM3S,EAAOd,EAAMc,KAAKgN,OACxB,GAAkB,MAAdhN,EAAK+M,OAAiC,MAAhB/M,EAAKyT,SAAiC,MAAdzT,EAAK0J,OAA+B,MAAd1J,EAAK0N,MAAe,CACxF,IAAMkf,EAAO5sB,EAAK+M,MAAM8f,wBAClBpd,EAAI0H,EAAE6V,QAAUhtB,EAAK+M,MAAMkgB,UAAYL,EAAKvf,IAC5CxC,EAAarJ,KAAKC,MAAMgO,EAAIvK,IAClCmF,EAAUqI,EAAWzV,OAAO4N,WAAaA,EACzC3L,EAAMS,UAAU0K,UAAYA,EAAUhD,QAEtCnF,GAAc2I,EAAY3L,QAE/B,CACH,IAAM6B,EAAQsJ,EAAUqI,EAAWzV,OAQnC,GAPAwvB,EAAMla,KAAO,CAETjH,EAAGxK,GAAyBC,EAAMwG,KAAOrE,EAAMqI,UAC/CkE,EAAG,GAEPgd,EAAMha,SAAWia,IAEO,SAApBha,EAAWC,MAGX,GAFAD,EAAWG,QAAS,EACpB4Z,EAAMja,UAAY,EACdE,EAAWzV,MAAQ,EAAG,CACtB,IAAMiwB,EAAO7iB,EAAUqI,EAAWzV,MAAQ,GAC1CwvB,EAAMja,WAAa1R,GAAyBosB,EAAK3lB,KAAOzG,GAAyBosB,EAAKrpB,MAAQX,EAAMqI,eAG/E,UAApBmH,EAAWC,OAChBD,EAAWE,UAAW,GAG1B6Z,EAAM/Z,WAAN,eAAwBA,GAIhCwK,OA/ENoP,GAmFKa,eAAiB,SAAChW,EACrBjY,EAAc+D,EAAwBqnB,EAAwBpN,GAE9D,GAAiB,IAAb/F,EAAEqV,OAAN,CAEA,IAAMxsB,EAAOd,EAAMc,KAAKgN,OACxB,GAAkB,MAAdhN,EAAK+M,OAAiC,MAAhB/M,EAAKyT,SAAiC,MAAdzT,EAAK0J,OAA+B,MAAd1J,EAAK0N,MAAe,CACxF,IAAMxK,EAAQhE,EAAMW,YACd4sB,EAAQvtB,EAAMW,YAAY6E,WAE1BgO,EAAa+Z,EAAM/Z,WACnBrI,EAAYnL,EAAMS,UAAU0K,UAC5B/G,EAAYpE,EAAMS,UAAU2D,UAC5BkL,EAAO,EAAItL,EAAMnB,SAEjB6qB,EAAO5sB,EAAK+M,MAAM8f,wBAClBvhB,EAAI6L,EAAE2V,QAAU9sB,EAAK+M,MAAMggB,WAAaH,EAAKphB,KAC7CiE,EAAI0H,EAAE6V,QAAUhtB,EAAK+M,MAAMkgB,UAAYL,EAAKvf,IAElD,GAAKof,EAAMna,OAAUI,EAAWE,UAAaF,EAAWG,QA2CpD,GAAI4Z,EAAMna,MAAO,CACb,IAAM8a,GAAU5rB,KAAKC,MAAM6J,EAAIpI,EAAMqI,UAAYiD,GAAQ,GAAKtL,EAAMqI,UAAYiD,EAChFie,EAAMpjB,OAAS+jB,EAASX,EAAMha,SAAWga,EAAMha,SAAW2a,GAAUX,EAAMla,KAAKjH,OAC5E,GAAIoH,EAAWE,SAAU,CAC5B,IAAMwa,GAAU5rB,KAAKC,MAAM6J,EAAIpI,EAAMqI,UAAYiD,GAAQ,GAAKtL,EAAMqI,UAAYiD,EAC1EzN,EAAQsJ,EAAUqI,EAAWzV,OAE/BowB,EAAOD,EAASX,EAAMla,KAAKjH,EAE3B8hB,EAASX,EAAMha,WACf4a,EAAOZ,EAAMha,SAAWga,EAAMla,KAAKjH,GAGnC8hB,GAAUX,EAAMla,KAAKjH,IACrB+hB,EAAOnqB,EAAMqI,UAAYrI,EAAMnB,UAEnChB,EAAM8C,IAAM/B,GAAwBoB,EAAMnB,SAAUP,KAAKC,MAAM4rB,EAAOnqB,EAAMqI,UAAYrI,EAAMnB,WAE9F7C,EAAMS,UAAU0K,UAAYA,EAAUhD,aACnC,GAAIqL,EAAWG,OAAQ,CAC1B,IAAMua,GAAU5rB,KAAKC,MAAM6J,EAAIpI,EAAMqI,UAAYiD,GAAQ,GAAKtL,EAAMqI,UAAYiD,EAC1EzN,EAAQsJ,EAAUqI,EAAWzV,OAC7BqwB,EAAWxsB,GAAyBC,EAAM8C,KAAOX,EAAMqI,UAEzD8hB,EAAOD,EAEPA,EAASE,EAAWb,EAAMha,WAC1B4a,EAAOZ,EAAMha,SAAW6a,GAGxBF,EAASX,EAAMja,YACf6a,EAAOZ,EAAMja,WAEjBzR,EAAMwG,IAAMzF,GAAwBoB,EAAMnB,SAAUP,KAAKC,MAAM4rB,EAAOnqB,EAAMqI,UAAYrI,EAAMnB,WAE9F7C,EAAMS,UAAU0K,UAAYA,EAAUhD,aA9EkB,CAC5DolB,EAAM3Z,gBAAkBtR,KAAKC,MAAMgO,EAAIvK,IACvCunB,EAAM1Z,gBAAkBvR,KAAKC,MAAM6J,EAAIpI,EAAMqI,UAAYiD,GAEzD,IAAIhD,EAAO,EACLC,EAAgBnI,EAAU5E,MAAK,SAACgF,GAClC,GAAqB,UAAjBA,EAAQtE,KAAkB,CAC1B,IACMiK,EADS3F,EAAQF,OACFM,QAAUZ,EAAMqI,UACrC,GAAID,GAAKE,GAAQF,EAAIE,EAAOnC,EACxB,OAAO3F,EAEX8H,GAAQnC,MAGhBojB,EAAM9nB,cAA4B/F,GAAjB6M,EAA6B,KAAOA,EAErDiH,EAAWzV,OAAS,EACpB,IAAMswB,EAAYrqB,EAAMqD,WACxBrD,EAAMqD,YAAc,EACpB,IAAK,IAAIpE,EAAI,EAAGA,EAAIkI,EAAUvF,OAAQ3C,IAAK,CACvC,IAAMpB,EAAQsJ,EAAUlI,GAClBqJ,EAAO1K,GAAyBC,EAAMwG,KAAOrE,EAAMqI,UACnDiiB,EAAQhiB,EAAO1K,GAAyBC,EAAM8C,KAAOX,EAAMqI,UACjE,GAAID,GAAKE,GAAQF,GAAKkiB,EAAO,CACzB9a,EAAWzV,MAAQkF,EACnBe,EAAMqD,WAAapE,EAEAuQ,EAAWC,KAA1BrH,EAAIE,EAAO,GAAsB,OAC5BF,EAAIkiB,EAAQ,GAAsB,QACpB,SACvB,OAIRtqB,EAAMgI,UAAYhI,EAAMqD,YACL,IAAfgnB,GAAoBA,IAAcrqB,EAAMqD,aACxCrD,EAAM+H,UAAYsiB,GAItBd,EAAM/Z,WAAN,eAAwBA,GAwC5BwK,OAvLNoP,GA2LKmB,aAAe,SAACtW,EACnBjY,EAAc+D,EAAwBqnB,EAAwBpN,GAE9D,GAAiB,IAAb/F,EAAEqV,OAAN,CAEA,IAAMtpB,EAAQhE,EAAMW,YACd4sB,EAAQvtB,EAAMW,YAAY6E,WAE1BgO,EAAa+Z,EAAM/Z,WACnBrI,EAAYnL,EAAMS,UAAU0K,UAC5BtI,EAAWmB,EAAMnB,SAEvB,GAAI0qB,EAAMna,OAEN,GADAma,EAAMna,OAAQ,EACVma,EAAMpjB,MAAQ,EAAG,CACjB,IAAMwB,EAAarJ,KAAKC,MAAMgrB,EAAMla,KAAK9C,EAAIvK,IAK7CmF,EAAUrL,KAAK,CACXuI,IAAKzF,GAAwBC,EAAUP,KAAKC,MAAMgrB,EAAMla,KAAKjH,EAAIpI,EAAMqI,UAAYxJ,IACnF8I,aACAhH,IAAK/B,GAAwBC,EAAUP,KAAKC,MAAMgrB,EAAMpjB,MAAQnG,EAAMqI,UAAYxJ,MAItFsI,EAAUqjB,MAAK,SAACC,EAAGC,GACf,IAAMC,EAAO/sB,GAAyB6sB,EAAEpmB,KAClCumB,EAAOhtB,GAAyB8sB,EAAErmB,KACxC,OAAOsmB,IAASC,EAAO,EACnBD,EAAOC,GAAQ,EAAI,KAG3B7qB,EAAW2B,KAAKwF,aAAaC,GAE7BnI,GAAc2I,EAAY3L,SAG9BwT,EAAWG,QAAS,EACpBH,EAAWE,UAAW,EACtB6Z,EAAM/Z,WAAN,eAAwBA,GACxBzP,EAAW2B,KAAKwF,aAAaC,EAAUhD,SAE3C6V,MAIOoP,UCzOTyB,G,kCAAAA,GAEKC,aAAe,SAAC7W,EAAkBjY,EAAc+D,GAEpC/D,EAAM8R,QAAQC,UAAUC,KAAvC,IACMhL,EAAYhH,EAAMW,YAAYqG,UAI9BhD,EAAQhE,EAAMW,YACd4sB,EAAQvpB,EAAMwB,WAGpB,GAAIxB,EAAMsK,UACN,OAAQ2J,EAAErZ,KACN,IAAK,IACDoF,EAAMsK,WAAY,EAClBtO,EAAMgB,YAAYkD,QAAQ0K,aAC1B5K,EAAMqD,WAAarD,EAAM+H,UACzB/L,EAAMoB,aAAavB,SAAQ,SAAA6O,GAAE,OAAIqgB,aAAargB,MAC9C3K,EAAWoC,OAAOM,gBAAgB,IAClC1C,EAAW2B,KAAKC,SAAS3B,OARrC,CAwBA,IARgC,IAA5BupB,EAAM/Z,WAAWzV,QACjBwvB,EAAM/Z,WAAWzV,OAAS,EAC1BwvB,EAAM/Z,WAAWE,UAAW,EAC5B6Z,EAAM/Z,WAAWC,KAAO,UAE5B8Z,EAAM1Z,iBAAmB,EACzB0Z,EAAM3Z,iBAAmB,EAErB5M,EAAUgN,WAAahN,EAAUxF,QAAUwF,EAAUiN,QAAUjN,EAAUkN,MAAQlN,EAAUmN,OAC3F,GAAInN,EAAUgN,WAAahN,EAAUxF,OAAQ,CACzC,IAAM+J,EAAwBvE,EAAUgN,UAAY,QAAU,SAC9D,OAAQiE,EAAErZ,KACN,IAAK,UACDmF,EAAW2B,KAAK2F,qBAAoB,EAAME,GAE1C,MACJ,IAAK,YACDxH,EAAW2B,KAAK2F,qBAAoB,EAAOE,SAIhD,GAAIvE,EAAUiN,OACjB,OAAQgE,EAAErZ,KACN,IAAK,YAAamF,EAAW2B,KAAKuH,aAAY,GAAQ,MACtD,IAAK,aAAclJ,EAAW2B,KAAKuH,aAAY,QAEhD,GAAIjG,EAAUkN,KACjB,OAAQ+D,EAAErZ,KACN,IAAK,YAAamF,EAAW2B,KAAK6H,WAAU,GAAQ,MACpD,IAAK,aAAcxJ,EAAW2B,KAAK6H,WAAU,QAE9C,GAAIvG,EAAUmN,MACjB,OAAQ8D,EAAErZ,KACN,IAAK,YAAamF,EAAW2B,KAAKyG,eAAc,GAAQ,MACxD,IAAK,aAAcpI,EAAW2B,KAAKyG,eAAc,SAIzD,OAAQ8L,EAAErZ,KACN,IAAK,UAAWmF,EAAW2B,KAAK2F,qBAAoB,EAAM,UAAW,MACrE,IAAK,YAAatH,EAAW2B,KAAK2F,qBAAoB,EAAO,UAAW,MACxE,IAAK,YAAatH,EAAW2B,KAAKoG,WAAU,GAAQ,MACpD,IAAK,aAAc/H,EAAW2B,KAAKoG,WAAU,GAAO,MACpD,IAAK,IAAK/H,EAAW2B,KAAK8G,WAAY,MACtC,IAAK,IACD5I,MAAM6T,KAAKC,UAAU1X,EAAMS,UAAU0K,UAAUnH,EAAMqD,YAAY1C,MAEjE,MACJ,IAAK,IAAKZ,EAAW2B,KAAKuG,gBAAiB,MAC3C,IAAK,IAAKlI,EAAW2B,KAAKmG,gBAAiB,MAC3C,IAAK,IACD/F,GAAkB9F,GAM9B,OAAQiY,EAAErZ,KACN,IAAK,IACDoF,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,GAEzB,MACJ,IAAK,IACDA,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,GAEzB,MACJ,IAAK,IACDA,EAAMnB,SAAW,EACjBkB,EAAW2B,KAAKC,SAAS3B,GAEzB,MACJ,IAAK,IACG,CAAC,EAAG,GAAGiE,SAASjE,EAAMnB,UACtBmB,EAAMnB,UAAY,EAElBmB,EAAMnB,UAAY,EAEtBkB,EAAW2B,KAAKC,SAAS3B,GAEzB,MACJ,IAAK,SACDD,EAAW2B,KAAKoH,cAEhB,MACJ,IAAK,IACD/I,EAAW2B,KAAK2I,kBApH1BwgB,GA0HKG,eAAiB,SAAC/W,EAAkBjY,EAAc+D,EAAwB+Z,GAE9D9d,EAAM8R,QAAQC,UAAUC,KAAvC,IACMhL,EAAYhH,EAAMW,YAAYqG,UAKpC,IAJchH,EAAMW,YAIT2N,UACP,OAAQ2J,EAAErZ,KACN,IAAK,IACDoI,EAAUxF,OAASsc,EACnB/Z,EAAW2B,KAAKqB,aAAaC,GAE7B,MACJ,IAAK,IACDA,EAAUgN,UAAY8J,EACtB/Z,EAAW2B,KAAKqB,aAAaC,GAE7B,MACJ,IAAK,IACDA,EAAUiN,OAAS6J,EACnB/Z,EAAW2B,KAAKqB,aAAaC,GAE7B,MACJ,IAAK,IACDA,EAAUkN,KAAO4J,EACjB/Z,EAAW2B,KAAKqB,aAAaC,GAE7B,MACJ,IAAK,QACDA,EAAUmN,MAAQ2J,EAClB/Z,EAAW2B,KAAKqB,aAAaC,GAMrC8W,GACA+Q,GAAYC,aAAa7W,EAAGjY,EAAO+D,IAKhC8qB,I,uLAAAA,MC8CAI,GA1MK,SAAC7wB,GAEd,IAAD,EAC4BqW,qBAAWC,IAAjC1U,EADN,EACMA,MAAO+D,EADb,EACaA,WACTC,EAAQhE,EAAMW,YAEdiJ,EAAUsS,iBAA8B,MACxCgT,EAAWhT,iBAA8B,MACzCiT,EAAWjT,iBAA8B,MAN7C,EAQkCjH,mBAAa,IAR/C,mBAQKma,EARL,KAQiBC,EARjB,KAUIrR,EAAS,kBAAMqR,EAAc,KAE7B9B,EAAQvpB,EAAMwB,WACd4N,EAAQma,EAAMna,MACdI,EAAa+Z,EAAM/Z,WACnB/N,EAAW8nB,EAAM9nB,SACjBoO,EAAkB0Z,EAAM1Z,gBACxBD,EAAkB2Z,EAAM3Z,gBACxBzJ,EAAQojB,EAAMpjB,MACdkJ,EAAOka,EAAMla,KAIb+X,EAFW,GAEiBpnB,EAAMqI,UAAY,EAC9ClB,EAAYnL,EAAMS,UAAU0K,UAI5B+H,EAASlT,EAAMO,WAAW2S,OAE1Boc,EAAiC,MAApBJ,EAAS9S,QAAkB,EAAI8S,EAAS9S,QAAQyR,WAAaqB,EAAS9S,QAAQhS,YAEjGgL,qBAAU,WACNrR,EAAWoC,OAAOK,QAAlB,2BACOxG,EAAMc,MADb,IACmBgN,OAAO,2BACf9N,EAAMc,KAAKgN,QADG,IAEjBD,MAAOqhB,EAAS9S,QAChB5N,MAAO2gB,EAAS/S,aAIxB,IAAMwQ,EAAO5oB,EAAM8P,cACnByV,KAAUnmB,WAAW,IAAIomB,aAAgBoD,EAAK/tB,KAC1C,CAAEkV,KAAM6Y,EAAK7Y,KAAM0V,QAAS,KAAOC,MAAK,SAACC,GACrC5lB,EAAW2B,KAAK0F,cAAcue,QAEvC,IAEHvU,qBAAU,WACFlC,GAA6B,MAAnBtJ,EAAQwS,SAClBxS,EAAQwS,QAAQkN,UAErB,CAACpW,IAEJ,IAAMmY,EAAgC3Q,mBAAQ,WAE1C,IADA,IAAMU,EAAyB,GACtBnY,EAAI,EAAGA,GAAKssB,IAAkBtsB,IACnCmY,EAAQtb,KACJ,eAAC,GAAD,CAAgB0rB,OAAQvoB,EAAI,IAAM,EAAGoJ,UAAWrI,EAAMqI,WAAzCpJ,IAGrB,OAAOmY,IACR,CAzCc,KA2CX/W,EAAOrE,EAAMS,UAAU2D,UAAU,GAAGE,OACpCkrB,EAAmB9U,mBAAQ,WAG7B,IAFA,IAAMlP,EAAgB3N,EAAYqH,KAAI,SAAAqD,GAAK,OAAKlE,EAAKnB,SAAWqF,GAAS,MACnE3I,EAAsB,GACnBqD,EAAI,EAAGA,EtD9EC,GsD8EcA,IAAK,CAChC,IAAMC,EAAWxB,GAAuBuB,GACxCrD,EAAKE,KACD,eAAC2vB,GAAD,CACIhM,QAASjY,EAAcvD,SAAS/E,GAChCwsB,OAAQxsB,IAAasI,EAAc,IAFtBvI,IAMzB,OAAOrD,IACR,CAACyE,EAAKnB,WAEHysB,EAAejV,mBAAQ,WAGzB,IAFA,IAAM9a,EAAsB,GAEnBqD,EAAI,EAAGA,EAAIkI,EAAUvF,OAAQ3C,IAAK,CACvC,IAAMpB,EAAQsJ,EAAUlI,GAClB2sB,EAAYhuB,GAAyBC,EAAMwG,KAAOrE,EAAMqI,UACxDwjB,EAAaD,EAAYhuB,GAAyBC,EAAM8C,KAAOX,EAAMqI,UAC3E,GAAwB,MAApB6iB,EAAS9S,QAAiB,CAC1B,IACM0T,EADSZ,EAAS9S,QAAQyR,WACPyB,EAAa,EACtC,GAAIM,EAAYE,EAASR,EAAa,GAClCQ,EAASD,GAAcP,EAAa,EACpC,SAT+B,MAYRtrB,EAAMqD,WAAarD,EAAMgI,UAAY,CAAChI,EAAMqD,WAAYrD,EAAMgI,WAAa,CAAChI,EAAMgI,UAAWhI,EAAMqD,YAZ3F,mBAYhC0F,EAZgC,KAYpBgjB,EAZoB,KAajCta,EAAW1I,GAAc9J,GAAK8sB,GAAY9sB,EAC1CuI,EAAgB3N,EAAYqH,KAAI,SAAAqD,GAAK,OAAKlE,EAAKnB,SAAWqF,GAAS,MACnErF,EAAWxB,GAAuBG,EAAM8J,YACxC8X,EAAUjY,EAAcvD,SAAS/E,GACvCtD,EAAKE,KACD,eAACkwB,GAAD,CACI1jB,KAAM1K,GAAyBC,EAAMwG,KAAOrE,EAAMqI,UAClDlC,MAAOvI,GAAyBC,EAAM8C,KAAOX,EAAMqI,UACnDoH,KAAMD,EAAWC,KACjBgC,SAAUA,EACVgO,QAASzf,EAAMgD,UAAUgN,UACzBN,SAAU1P,EAAMgD,UAAUiN,OAC1BN,OAAQ3P,EAAMgD,UAAUkN,KACxB+b,SAAUjsB,EAAMgD,UAAUxF,OAC1B8M,UAAWtK,EAAMsK,UACjBuQ,cAAe,WACX9a,EAAW2B,KAAKoH,eAXxB,SAcI,eAAC,GAAD,CACIyD,EAAG1O,EAAM8J,WAAa3F,GACtBqV,QAAStY,GAAkBlB,EAAM8C,KACjC8e,QAASA,KAjBAxgB,IAyBzB,OAAOrD,IACR,CAACuL,EAAWA,EAAUvF,OAAQ5B,EAAMqD,WAAYrD,EAAMgI,UAAWwH,EAAYxP,EAAMsK,UAClFtK,EAAMgD,UAAUgN,UAAWhQ,EAAMgD,UAAUxF,OAAQwC,EAAMgD,UAAUiN,OAAQjQ,EAAMgD,UAAUkN,KAC3Fkb,IAEJ,OACI,gBAAC,GAAD,CACIjF,SAAU,IACV3N,IAAK5S,EACL6L,SAAUrX,EAAMqX,SAChB2U,UAAW,SAACnS,GAAD,OAAsB4W,GAAYG,eAAe/W,EAAGjY,EAAO+D,GAAY,IAClFsmB,QAAS,SAACpS,GAAD,OAAsB4W,GAAYG,eAAe/W,EAAGjY,EAAO+D,GAAY,IALpF,UAOI,eAAC,GAAD,UACI,eAAC,GAAD,MAEJ,gBAAC,GAAD,WACI,eAACmsB,GAAD,UACI,eAAC,GAAD,CACI/E,UA5HH,GA6HG9e,UAAWrI,EAAMqI,UACjB5G,SAAUA,EACV2lB,eAAgBA,EAChBvX,gBAAiBA,MAGzB,eAACsc,GAAD,CAAQ3T,IAAK2S,EAAb,SACI,eAAC,GAAD,CAAiBvb,gBAAiBA,EAAiBnO,SAAUA,MAEjE,gBAAC2qB,GAAD,CAAY5T,IAAK0S,EACbmB,SAAU,WACN,IAAMvvB,EAAOd,EAAMc,KAAKgN,OAExB,GAAkB,MAAdhN,EAAK+M,OAAiC,MAAhB/M,EAAKyT,SAAiC,MAAdzT,EAAK0J,OAA+B,MAAd1J,EAAK0N,MAAe,CACxF,IAAMqf,EAAa/sB,EAAK+M,MAAMggB,WACxBE,EAAYjtB,EAAK+M,MAAMkgB,UAC7BjtB,EAAKyT,QAAQvG,SAAS,CAAE1B,KAAMuhB,IAC9B/sB,EAAK0J,MAAMwD,SAAS,CAAE1B,KAAMuhB,IAC5B/sB,EAAK0N,MAAMR,SAAS,CAAEG,IAAK4f,IAE/B/P,KAXR,UAcI,eAACsS,GAAD,CACInmB,MAAOihB,EADX,SAGKC,IAEL,eAACkF,GAAD,CACIpmB,MAAOihB,EADX,SAGKoE,IAEL,gBAACgB,GAAD,CACIrmB,MAAOihB,EACPqF,YAAa,SAACxY,GAAD,OAAOmV,GAAqBC,eAAepV,EAAGjY,EAAO+D,EAAYqnB,EAAgBpN,IAC9F0S,YAAa,SAACzY,GAAD,OAAOmV,GAAqBa,eAAehW,EAAGjY,EAAO+D,EAAYqnB,EAAgBpN,IAC9F2S,UAAW,SAAC1Y,GAAD,OAAOmV,GAAqBmB,aAAatW,EAAGjY,EAAO+D,EAAYqnB,EAAgBpN,IAJ9F,UAMM5K,EAAgB,eAACwd,GAAD,CAAOxkB,EAAGiH,EAAKjH,EAAGmE,EAAG8C,EAAK9C,EAAGpG,MAAOA,EAClDkR,QAASlR,EAAQnG,EAAMqI,YAAc,EAAI,EAAKlC,GAASnG,EAAMqI,UAAY,KAAO,EAAI,EAAI,KADlF,+BAGTsjB,KAEL,eAACkB,GAAD,CACInN,MAAO1f,EAAMsK,UACbnE,MAAOihB,cAUzB9T,GAAQxC,IAAOC,IAAV,0GAGI,SAAA3W,GAAK,OAAKA,EAAMqX,SAAoB,eAAT,UAMpCqb,GAAgBC,YAAH,kGASbH,GAAQ9b,IAAOC,IAAV,wTAQC,SAAA3W,GAAK,OAAIA,EAAMgO,KAChB,SAAAhO,GAAK,OAAIA,EAAMmS,KACb,SAAAnS,GAAK,OAAIA,EAAM+L,SACd,SAAA/L,GACN,OAAQA,EAAMid,SACV,KAAK,EAAG,OAAOrV,GACf,KAAK,EAAG,OAAOA,GACf,KAAK,GAAI,OAAOA,GAChB,QAAS,OAAOA,MAMX8qB,IAEXjY,GAAU/D,IAAOC,IAAV,+HrDrOoB,IqD2O3BkR,GAAQnR,IAAOC,IAAV,4IrD3OsB,IqDkP3Bmb,GAAYpb,IAAOC,IAAV,sMAEIhP,GACMA,GrDpPU,IqD0P7BoqB,GAASrb,IAAOC,IAAV,uMAEChP,GrD5PsB,IqDmQ7BqqB,GAAatb,IAAOC,IAAV,ugBAGShP,GrDtQU,IqDyR7BuqB,GAAgBxb,IAAOC,IAAV,gMAQN,SAAA3W,GAAK,OAAIA,EAAM+L,QACdnE,MAIRuqB,GAAczb,IAAOC,IAAV,6MAQJ,SAAA3W,GAAK,OAAIA,EAAM+L,QACdnE,MAKRypB,GAAa3a,IAAOC,IAAV,0NAMF/O,IAIR,SAAA5H,GAAK,OAAKA,EAAMqlB,QAAelN,YAAtB,wEAAiB,MAG1B,SAAAnY,GAAK,OAAKA,EAAMsxB,OAAcnZ,YAArB,sEAAgB,MAKzBia,GAAc1b,IAAOC,IAAV,8LAQJ,SAAA3W,GAAK,OAAIA,EAAM+L,QACdnE,MAKRulB,GAASzW,IAAOC,IAAV,qOAMC,SAAA3W,GAAK,OAAIA,EAAMiO,UAAY,IAE1BrG,MAEW,SAAA5H,GAAK,OAAIA,EAAMotB,OAAS,MAAQ,SAInDwE,GAAalb,IAAOC,IAAV,owBAcJ,SAAA3W,GAAK,OAAIA,EAAMkO,QAEd,SAAAlO,GAAK,OAAIA,EAAM+L,SAOtB,SAAA/L,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wEAAkB,MAI3B,SAAAnY,GAAK,OAAMA,EAAMqX,UAAYrX,EAAMqlB,QAAgBlN,YAA1C,wEAAqC,MAI9C,SAAAnY,GAAK,OAAMA,EAAMqX,UAAYrX,EAAM6xB,SAAiB1Z,YAA3C,wEAAsC,MAI/C,SAAAnY,GAAK,OAAIA,EAAMqX,SAA0B,SAAfrX,EAAMqV,KAAkB8C,YAAxB,iJAIT,UAAfnY,EAAMqV,KAAmB8C,YAAzB,kJAIA,GAAK,MAGP,SAAAnY,GAAK,OAAMA,EAAMqX,UAAYrX,EAAMsV,SAAiB6C,YAA3C,oHAAsC,MAK/C,SAAAnY,GAAK,OAAMA,EAAMqX,UAAYrX,EAAMuV,OAAe4C,YAAzC,mHAAoC,MAK7C,SAAAnY,GAAK,OAAMA,EAAMqX,UAAYrX,EAAMkQ,UAAkBiI,YAA5C,wEAAuC,MAIhDiP,GAAS1Q,IAAOC,IAAV,0gBAQD,SAAA3W,GAAK,OAAIA,EAAMmS,KAEZ,SAAAnS,GAAK,OAAI4H,IAAuC,IAAlB5H,EAAMid,QAAgB,EAAsB,IAAlBjd,EAAMid,QAAgB,EAAsB,IAAlBjd,EAAMid,QAAgB,GAAK,OAE3E,SAAAjd,GACxC,OAAQA,EAAMid,SACV,KAAK,EAAG,MAAO,gCACf,KAAK,EAAG,MAAO,gCACf,KAAK,GAAI,MAAO,oCAItB,SAAAjd,GAAK,OAAIA,EAAMqlB,QAAU,GAAKlN,YAArB,wHAaTsa,GAAgB/b,IAAOC,IAAV,qKAKJ,SAAA3W,GAAK,OAAIA,EAAMslB,MAAQ,QAAU,UAEnC,SAAAtlB,GAAK,OAAIA,EAAM+L,QACdnE,MC1ZCgrB,GAnEC,WAAO,IAAD,EAEYvc,qBAAWC,IAAjC1U,EAFU,EAEVA,MAAO+D,EAFG,EAEHA,WAETC,EAAQhE,EAAMO,WACduN,EAAS9N,EAAMW,YAEfswB,EAAa,WACfjtB,EAAMkP,QAAUlP,EAAMkP,OACtBnP,EAAW2C,MAAMI,cAAc9C,IAGnC,GAAyC,IAArChE,EAAMS,UAAU2D,UAAUwB,OAC1B,OAAO,+BAGX,IAAM0I,EAAatK,EAAMkP,OAA2BlT,EAAMW,YAAY2N,UAApCtK,EAAMsK,UAClC6E,EAAUnP,EAAMkP,OAAwBpF,EAAOqF,OAAtBnP,EAAMmP,OAC/B+d,EAAWltB,EAAMkP,OAEnB,WAEIpF,EAAOQ,WACPvK,EAAW2B,KAAK2I,gBALQ,aAU1B8iB,EAAkBntB,EAAMkP,OAG1B,WACApF,EAAOqF,QAAUrF,EAAOqF,OACxBpP,EAAW2B,KAAKC,SAASmI,IALU,WACnC9J,EAAMmP,QAAUnP,EAAMmP,OACtBpP,EAAW2C,MAAMI,cAAc9C,IAKnC,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,gBAACotB,GAAD,WACI,eAACC,GAAD,CAAW5b,UAAWzR,EAAMkP,OAAQgD,QAAS,WACrClS,EAAMkP,QAAQ+d,KADtB,uBAGA,eAACI,GAAD,CAAW5b,SAAUzR,EAAMkP,OAAQgD,QAAS,WACnClS,EAAMkP,QAAQ+d,KADvB,uBAIJ,gBAACK,GAAD,WACI,gBAACC,GAAD,CAASrb,QAASgb,EAAlB,UAA2B,eAACM,GAAD,CAAc/b,SAAUnH,EAAxB,kBAA3B,MAAoF,eAACkjB,GAAD,CAAc/b,UAAWnH,EAAzB,sBACpF,gBAACijB,GAAD,CAASrb,QAASib,EAAlB,UAAkC,eAACK,GAAD,CAAc/b,UAAWtC,EAAzB,sBAAlC,MAA6F,eAACqe,GAAD,CAAc/b,SAAUtC,EAAxB,2BAGrG,gBAAC,GAAD,CACIgX,SAAU,IACVC,UAAW,SAACnS,GACR,OAAQA,EAAErZ,KACN,IAAK,IAAKqyB,MAJtB,UAOI,eAACQ,GAAD,UAAW,eAAC,GAAD,MACX,gBAAC,GAAD,WACI,eAAC,GAAD,CAAchc,UAAWzR,EAAMkP,SAC/B,eAAC,GAAD,CAAauC,SAAUzR,EAAMkP,mBAQ3CoE,GAAQxC,IAAOC,IAAV,uFAML8D,GAAU/D,IAAOC,IAAV,+HAOPqc,GAAQtc,IAAOC,IAAV,wJAOLsc,GAAYvc,IAAOC,IAAV,mbAQT,SAAA3W,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MAWvB,SAAAnY,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,wDAAkB,MAG/B+a,GAAWxc,IAAOC,IAAV,gMAWRwc,GAAUzc,IAAOC,IAAV,kbAqBPyc,GAAe1c,IAAOmX,KAAV,8DAIZ,SAAA7tB,GAAK,OAAKA,EAAMqX,SAAgBc,YAAvB,2CAAkB,MAG3B0P,GAAQnR,IAAOC,IAAV,gKAQL0c,GAAY3c,IAAOC,IAAV,4NtDvJyB,KsDgKlCmT,GAAQpT,IAAOC,IAAV,sKtDhK6B,KuDUzB2c,GAvBM,WAAO,IAAD,EAEOjd,qBAAWC,IAAjC1U,EAFe,EAEfA,MAAO+D,EAFQ,EAERA,WAET4tB,GAA4C,IAAjC3xB,EAAMO,WAAW8G,WAClC,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIiO,YAAa,CACT,CAAEzW,KAAM,SAAU8W,SAAS,EAAOI,KAAM,eAAC,GAAD,KACxC,CAAElX,KAAM,OAAQ8W,SAAUgc,EAAU5b,KAAM,eAAC,GAAD,KAC1C,CAAElX,KAAM,QAAS8W,SAAUgc,EAAU5b,KAAM,0BAC3C,CAAElX,KAAM,UAAW8W,SAAUgc,EAAU5b,KAAM,2BAEjDb,SAAUlV,EAAMK,YAAYwG,cAC5BgP,eAAgB,SAAC9X,GAAD,OAAmBgG,EAAW2C,MAAME,iBAAiB7I,SAQ/EuZ,GAAQxC,IAAOC,IAAV,2WvD1BqB,IuD8BP6c,GACCA,ICZXC,GApBQ,WAAO,IAAD,EAEKpd,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAAO+D,EAFU,EAEVA,WAEf,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIuR,YAAa,CACT,CAAEzW,KAAM,QAAS8W,SAAS,EAAMI,KAAM,0BACtC,CAAElX,KAAM,SAAU8W,SAAS,EAAMI,KAAM,2BAE3Cb,SAAUlV,EAAMK,YAAYwG,cAC5BgP,eAAgB,SAAC9X,GAAD,OAAmBgG,EAAW2C,MAAME,iBAAiB7I,SAQ/EuZ,GAAQxC,IAAOC,IAAV,2WxDrBqB,IwDyBP6c,GACCA,ICkEXE,GA7FQ,WAAO,IAAD,EAEKrd,qBAAWC,IAAjC1U,EAFiB,EAEjBA,MAEFkE,GAJmB,EAEVH,WAEC/D,EAAMgB,YAAYkD,SAC5B6tB,EAAa,SAACC,EAAeC,GAI/B,IAAM7W,EAAyB,GAmC/B,OA/BAA,EAAQtb,KAAK,eAAC,GAAD,UAA8B,+BAAMkyB,KAAtB5W,EAAQxV,SACnCqsB,EAAMpyB,SAAQ,SAACsF,GACX,IAAM+sB,EAAS/sB,EAAK+sB,OACdC,GAAkBD,EAAOl0B,OAASC,EAAqBC,GAAqBg0B,EAAOn0B,OACnFq0B,GAAiBF,EAAOl0B,OAASK,EAAkBC,GAAkB4zB,EAAOn0B,OAE5Eib,EADS1Z,EAAiB6F,EAAK/F,WACXP,KAC1Buc,EAAQtb,KAAK,gBAAC,GAAD,CACT2wB,YAAa,SAACxY,GACO,IAAbA,EAAEqV,SACNppB,EAAQ0K,aAEOtP,EAAiB6F,EAAK/F,WAEVL,QAAQmG,KAAI,SAAC3D,GACpC,IAAM6D,EAAWnG,EAAsBsC,GACvC,OAAO,GAAS4D,EAAK+sB,OAAOn0B,MAAQqH,KAG5BvF,SAAQ,SAAC9B,GACjB,IAEM2F,EAFYpF,EAAiBP,EAAQ,IAC5BuE,KAAKC,MAAMxE,EAAQ,IAElCmG,EAAQmuB,cAAc3uB,EAAe,KAAM,SAhB1C,UAoBT,iCAAMyuB,EAAgBnZ,KACtB,iCAAMoZ,EAAepZ,OArBAoC,EAAQxV,YAwB7B,eAAC0sB,GAAD,UAAQlX,KAGpB,OACI,gBAAC,GAAD,CACIqV,YAAa,SAACxY,GACO,IAAbA,EAAEqV,QACNppB,EAAQ0K,cAHhB,UAKKmjB,EAAW,iBAAkB,CAC1B,CAAEG,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,kBAEtD2yB,EAAW,kBAAmB,CAC3B,CAAEG,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,mBAEtD2yB,EAAW,iBAAkB,CAC1B,CAAEG,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAE8yB,OAAQ,CAAEn0B,MAAO,GAAIC,QAAQ,GAAQoB,UAAW,WAErD2yB,EAAW,qBAAsB,CAC9B,CAAEG,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,gBACnD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAE8yB,OAAQ,CAAEn0B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,sBAQ7DkY,GAAQxC,IAAOC,IAAV,+RAYLud,GAAQxd,IAAOC,IAAV,uIAOLwd,GAAOzd,IAAOC,IAAV,gLASJ8D,GAAU/D,YAAOyd,GAAPzd,CAAH,yRAaPmB,GAAQnB,YAAOyd,GAAPzd,CAAH,uZC1GI0d,GAtBG,WAAO,IAAD,EAEU/d,qBAAWC,IAAjC1U,EAFY,EAEZA,MAAO+D,EAFK,EAELA,WAEf,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIuR,YAAa,CACT,CAAEzW,KAAM,OAAQ2W,KAAM,eAAC,KAAD,IAAgBG,SAAS,EAAMI,KAAM,0BAC3D,CAAElX,KAAM,UAAW2W,KAAM,eAAC,KAAD,IAAaG,SAAS,EAAMI,KAAM,eAAC,GAAD,KAC3D,CAAElX,KAAM,QAAS2W,KAAM,eAAC,KAAD,IAAoBG,SAAS,EAAMI,KAAM,eAAC,GAAD,KAChE,CAAElX,KAAM,SAAU2W,KAAM,eAAC,KAAD,IAAeG,SAAS,EAAMI,KAAM,eAAC,GAAD,MAEhEb,SAAUlV,EAAMK,YAAYkG,iBAC5BsP,eAAgB,SAAC9X,GAAD,OAAmBgG,EAAWoC,OAAOG,gBAAgBvI,SAS/EuZ,GAAQxC,IAAOC,IAAV,2W1DjCsB,M0DqCR0d,GACCA,ICPXC,GAhCA,WAAO,IAAD,EAEaje,qBAAWC,IAA1B3Q,GAFE,EAET/D,MAFS,EAEF+D,YAFE,EAIakR,oBAAkB,GAJ/B,mBAIV2F,EAJU,KAIA+X,EAJA,OAKa1d,qBALb,mBAKV2d,EALU,KAKDC,EALC,KAoBjB,OAbAzd,qBAAU,WACNyd,EAAWttB,YAAW,WAClBotB,GAAU,KACX,QACJ,IACHvd,qBAAU,WACFwF,GACArV,YAAW,WACPxB,EAAWoC,OAAOC,uBACnB,OAER,CAACwU,IAGA,eAAC,GAAD,CAAOA,SAAUA,EAAU1E,QAAS,SAAC+B,GACjC8W,aAAa6D,GACbD,GAAU,IAFd,SAII,gBAAC,GAAD,WACI,sCADJ,gBASNrb,GAAQxC,IAAOC,IAAV,+VAcI,SAAA3W,GAAK,OAAIA,EAAMwc,SAAW,IAAM,OAKzCkY,GAAS/B,YAAH,mGASNnV,GAAS9G,IAAOC,IAAV,kiBAcK+d,I,kBCxDFC,GApBK,WAEhB,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAACC,GAAD,gBAAoB,eAACC,GAAD,yBAExB,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,+BAAK,eAAC,KAAD,MADT,qBAIA,eAACC,GAAD,UACI,+BAAK,eAAC,KAAD,eASnB9b,GAAQxC,IAAOC,IAAV,4Q5DvBuB,I4DiC5BqB,GAAStB,IAAOC,IAAV,6RAYNke,GAAUne,IAAOmX,KAAV,mDAGP+G,GAAUle,IAAOmX,KAAV,yEAOPiH,GAAQpe,IAAOC,IAAV,yLASLse,GAAYve,IAAOC,IAAV,iKAQToe,GAAere,YAAOue,GAAPve,CAAH,ksBA0BZse,GAAYte,YAAOue,GAAPve,CAAH,moBAEFwe,GACCA,ICtFD5e,GAAgB6e,wBAAc,IAsB5BC,GApBK,WAAO,IAAD,EAEIC,qBAAW1zB,GAAS8R,IAFxB,mBAEf7R,EAFe,KAERkG,EAFQ,KAGhBnC,EAAa,IAAIkC,GAAWjG,EAAOkG,GACzC,OACI,eAACwO,GAAcgf,SAAf,CAAwBnrB,MAAO,CAAEvI,QAAO+D,cAAxC,SACI,uCACM/D,EAAMK,YAAYgG,SAAmB,eAAC,GAAD,IAAR,+BAC/B,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UACI,eAAC,GAAD,eAUlBiR,GAAQxC,IAAOC,IAAV,wJAQLqT,GAAWtT,IAAOC,IAAV,kJ7D/CoB,I8DmBnB4e,OAnBf,WAcE,OAZAve,qBAAU,WAERwe,SAASC,cAAgB,WAAc,OAAO,GAE9CC,OAAOC,iBAAiB,WAAW,SAAU9b,GAEvC,CAAC,GAAI,GAAI,GAAI,GAAI,IAAI4I,QAAQ5I,EAAE+b,UAAY,GAC7C/b,EAAEgc,oBAEH,KAEF,IAED,eAAC,GAAD,KCLWC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1K,MAAK,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFhB,SAASiB,eAAe,SAM1BX,O","file":"static/js/main.4c4debbf.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    state.isPreview = false;\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    reserveTasks.forEach(id => clearInterval(id));\r\n                    store.instruments.sampler.releaseAll();\r\n                    dispatcher.tune.setState(state);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const channelList = detail.backing.voicingList.map((item) => {\r\n                const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                return 12 * item.octave + rootIndex + interval;\r\n            });\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n\r\n                    const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    const div = pickingDelay / channelList.length;\r\n\r\n                    channelList.forEach((index, j) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        playPiano(soundFullName, store, chordTime);\r\n                    });\r\n\r\n                    //     stopPiano(store);\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 4 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 3 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 5 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 6 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.mouseState.curChord;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const channelList = detail.backing.voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n\r\n        const chordTime = 60 / init.bpm * 1;\r\n        channelList.forEach((index) => {\r\n            const soundName = KEY12_SHARP_LIST[index % 12];\r\n            const octave = Math.floor(index / 12);\r\n            const soundFullName = soundName + octave;\r\n            playPiano(soundFullName, store, chordTime);\r\n        });\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteDiv, NoteRate, NoteStatus } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = focusEnd - focusStart + 1;\r\n            notesList.splice(state.focusIndex, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = focusStart - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curNormalLeft = getNormalizeLenFromNotes(cur.pos);\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = curNormalLeft + curLenNormal;\r\n            const prevNormalRight = state.focusIndex === 0 ? 0 : getNormalizeLenFromNotes(notesList[state.focusIndex - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: ((detail.root as DegreeProps).index + cache.keyIndex) % 12\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChordData: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const voicingTable = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (voicingTable != null) {\r\n                for (let i = 0; i < voicingTable.length; i++) {\r\n                    for (let j = 0; j < voicingTable[i].length; j++) {\r\n                        if (voicingTable[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (backingState.pattern == null) {\r\n                detail.backing.pattern = null;\r\n            } else {\r\n                const channelSize = backingState.pattern.channels.length;\r\n                const layers: BackingLayerData[] = [];\r\n                backingState.pattern.layers.forEach(layer => {\r\n                    const divs: NoteDiv[] = layer.noteDivList;\r\n                    const signals: BackingSignalProps[] = [];\r\n                    layer.table.forEach((record, i) => {\r\n                        record.forEach((cell, j) => {\r\n                            signals.push({ x: j, y: i, val: cell == null ? '-' : cell.signal });\r\n                        });\r\n                    });\r\n                    layers.push({ divs, signals });\r\n                });\r\n                backing.pattern = { channelSize, layers };\r\n            }\r\n            // detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex, 1);\r\n            });\r\n            layer.noteDivList.splice(pattern.lenIndex, 1);\r\n            // for(let i = 0; i < pattern.channels.length; i ++) {\r\n            //     layer.table[i].splice(pattern.lenIndex, 1);\r\n            // }\r\n            pattern.lenIndex--;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false\r\n        },\r\n        isPreview: false,\r\n        isSolo: false\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: []\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.7;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    const soundfont = store.instruments.piano;\r\n                    if (soundfont != null) {\r\n                        playChordSoundfont(soundfont, detail);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { NoteStatus } from \"../../../../../redux/store/backingState\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n        case 'Enter': {\r\n            dispatcher.backing.applyBackingToChordData();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n        }\r\n        if (pattern.channelIndex === -1) {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    // dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    // dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    dispatcher.backing.addPatternColumn();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    dispatcher.backing.changeLayer();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    dispatcher.backing.setCurrentDivRate(16);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    dispatcher.backing.setCurrentDivRate(8);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    dispatcher.backing.setCurrentDivRate(4);\r\n                }\r\n                    break;\r\n                case '4': {\r\n                    dispatcher.backing.setCurrentDivRate(2);\r\n                }\r\n                    break;\r\n                case '5': {\r\n                    dispatcher.backing.setCurrentDivRate(1);\r\n                }\r\n                    break;\r\n                case '.': {\r\n                    dispatcher.backing.toggleCurrentDivHalf();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.backing.deleteColumn();\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = 0;\r\n                    update();\r\n                }\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'Enter': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n                    const notes: NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velocityAdjust: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                }\r\n                    break;\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { ChannelParam, NoteStatus } from \"../redux/store/backingState\";\r\n\r\n\r\nexport class BackingUtil {\r\n\r\n    // オクターブの数\r\n    static OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    static STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    static CHANNEL_MAX = 12;\r\n\r\n    static getInitialRecord = (divCount: number) => {\r\n        return new Array<NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    static getVoicingStructs = (table: boolean[][]): ChannelParam[] => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    static getChannels = (voicingStructs: ChannelParam[], size: number) => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteSignal, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isDot) rate /= 1.5;\r\n                if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit}>\r\n                        <_State isUse={isUse} signal={'n'}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velocityAdjust: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    signal: NoteSignal;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css`\r\n        background-color: #f8fc029b;\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option onClick={deleteRecord}>-</_Option>\r\n            <_Option onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { VoicingTable } from \"../../../redux/store/backing/voicingTable\";\r\nimport { BackingPattern, BackingState, NoteRate, NoteStatus } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.getVoicingStructs(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: ChannelParam[] = BackingUtil.getVoicingStructs(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.piano;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChordData();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    // useEffect(() => {\r\n    // }, []);\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n        // acoustic_guitar_steel\r\n        Soundfont.instrument(new AudioContext(), 'bright_acoustic_piano',\r\n            { gain: 5, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                        onContextMenu={()=>{\r\n                            previewCurHarmony(store);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        alert('load successful!');\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} />\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 3 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        else notesState.side = 'normal';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, previewCurHarmony } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    state.isPreview = false;\r\n                    store.instruments.sampler.releaseAll();\r\n                    state.focusIndex = state.lastFocus;\r\n                    store.reserveTasks.forEach(id => clearTimeout(id));\r\n                    dispatcher.system.setReserveTasks([]);\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift) {\r\n            if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': dispatcher.tune.moveFocus(false); break;\r\n                case 'ArrowRight': dispatcher.tune.moveFocus(true); break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case '1': {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '2': {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '3': {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '/': {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.tune.removeNotes();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                dispatcher.tune.previewStart();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n            switch (e.key) {\r\n                case 'x': {\r\n                    keySwitch.octave = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'c': {\r\n                    keySwitch.scaleMode = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    keySwitch.resize = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'd': {\r\n                    keySwitch.move = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'Shift': {\r\n                    keySwitch.shift = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        const info = state.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n            const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const middle = (scroll + tableWidth / 2);\r\n                if (notesLeft - middle > tableWidth / 2 ||\r\n                    middle - notesRight < -tableWidth / 2) {\r\n                    continue;\r\n                }\r\n            }\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={getMinimumLenUnit(notes.len)}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header >\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={(e) => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={(e) => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #39cfd452;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #007a1428;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n    } : () => {\r\n\r\n        if(!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            \r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #ecfd5273;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #f6ffa373;\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}