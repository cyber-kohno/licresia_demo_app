{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/base/components/button/executableButton.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/utils/backingUtil.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","getDefaultBacking","voicingList","struct","octave","pattern","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","notes","total","len4","len8","len16","len4div3","len8div3","getSortetdNotesLen","len8div3Cnt3","Math","floor","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","i","keyIndex","soundName","instrument","soundfontPlayer","stop","play","duration","previewHarmony","start","dispatcher","state","cacheList","sampler","elementCacheList","chordList","init","detail","cache","element","pastSecond","rootIndex","len","beatLen","minute","head","tail","channelList","backing","map","item","interval","setTimeout","mouseState","curChord","tune","setState","soundFullName","piano","alert","playPiano","bpm","length","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","focusIndex","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","slice","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","setNotesList","notesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","cur","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","adjustScrollX","updateCurChord","x","left","searchedChord","beatWidth","addNotes","notes1","notes2","newLeftNormal","nextNormalPos","newRightNormal","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","normal","moveNotes","isBehind","curNormalLeft","prevNormalRight","nextNormalLeft","moveNormal","table","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","isPreview","firstTime","pitch","time","id","clearInterval","releaseAll","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isHalf","isDiv3","velocityList","Array","col","j","isExist","voicing","applyBackingToChord","addPatternColumn","lenList","layers","layerIndex","lenIndex","movePatternColumn","isRight","layer","tempIndex","moveChannelIndex","isDown","channelIndex","channels","setCurrentDivRate","toggleCurrentDivHalf","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isPut","lock","y","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","Sampler","toDestination","harmonize","measure","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_Object","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","JSON","stringify","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","parse","textarea","ExecutableButton","size","get","height","fontSize","backgroundColor","callback","labelText","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","config","curType","triggerAttack","playChord","Number","NoteKeySwitch","isPress","isElement","update","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","BackingUtil","OCTAVE_NUM","STRUCT_NUM","CHANNEL_MAX","getInitialRecord","divCount","fill","getVoicingStructs","structIndex","getChannels","voicingStructs","channel","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","cell","setNotesStatus","status","_Notes","_State","signal","timing","velocityAdjust","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","initialCellArray","PatternChannel","channelJsxList","soundIndex","PatternStatus","createItem","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","_VoicingLane","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","focus","Soundfont","AudioContext","release","then","soundFontPlayer","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","QuantizeSwitch","MelodyHeader","_QuantizeSelector","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","prev","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","right","mouseUpEvent","sort","a","b","posA","posB","MelodyInput","keyDownEvent","clearTimeout","keySwitchEvent","MelodyFrame","tableRef","pitchRef","invalidate","setInvalidate","tableWidth","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","notesRight","middle","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","_PrevireBrind","editAnimation","keyframes","EditTab","switchMode","_Mode","_ModeItem","_Buttons","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.179afc0d.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChord = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 }\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number)=> {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    state.isPreview = false;\r\n                    state.focusIndex = state.lastFocus;\r\n                    reserveTasks.forEach(id => clearInterval(id));\r\n                    store.instruments.sampler.releaseAll();\r\n                    dispatcher.tune.setState(state);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const channelList = detail.backing.voicingList.map((item) => {\r\n                const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                return 12 * item.octave + rootIndex + interval;\r\n            });\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n                    channelList.forEach((index, i) => {\r\n                        // reserveTasks.push(\r\n                        //     setTimeout(() => {\r\n                        //         const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //         const octave = Math.floor(index / 12);\r\n                        //         const soundFullName = soundName + octave;\r\n\r\n                        //         sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                        //     }, 30*i)\r\n                        // );\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        playPiano(soundFullName, store, 60 / init.bpm * len);\r\n                    });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteRate } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: ()=> {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[state.focusIndex].pos);\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curNormalLeft = getNormalizeLenFromNotes(cur.pos);\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = curNormalLeft + curLenNormal;\r\n            const prevNormalRight = state.focusIndex === 0 ? 0 : getNormalizeLenFromNotes(notesList[state.focusIndex - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[state.focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: ((detail.root as DegreeProps).index + cache.keyIndex) % 12\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isHalf: false, isDiv3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChord: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const table = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (table != null) {\r\n                for (let i = 0; i < table.length; i++) {\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        if (table[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            lenList.splice(pattern.lenIndex + 1, 0, { rate: lenList[pattern.lenIndex].rate, isDiv3: 0, isHalf: false });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isHalf = !cur.isHalf;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: 0,\r\n            mouseMeasurePos: 0\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false\r\n        },\r\n        isPreview: false\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: []\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.7;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    playChord(store.instruments.sampler, detail, 100);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n        }\r\n        if (pattern.channelIndex === -1) {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    // dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    // dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    dispatcher.backing.addPatternColumn();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    dispatcher.backing.changeLayer();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    dispatcher.backing.setCurrentDivRate(16);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    dispatcher.backing.setCurrentDivRate(8);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    dispatcher.backing.setCurrentDivRate(4);\r\n                }\r\n                    break;\r\n                case '4': {\r\n                    dispatcher.backing.setCurrentDivRate(2);\r\n                }\r\n                    break;\r\n                case '5': {\r\n                    dispatcher.backing.setCurrentDivRate(1);\r\n                }\r\n                    break;\r\n                case '.': {\r\n                    dispatcher.backing.toggleCurrentDivHalf();\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = 0;\r\n                    update();\r\n                }\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { ChannelParam, NoteStatus } from \"../redux/store/backingState\";\r\n\r\n\r\nexport class BackingUtil {\r\n\r\n    // オクターブの数\r\n    static OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    static STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    static CHANNEL_MAX = 12;\r\n\r\n    static getInitialRecord = (divCount: number) => {\r\n        return new Array<NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    static getVoicingStructs = (table: boolean[][]): ChannelParam[] => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    static getChannels = (voicingStructs: ChannelParam[], size: number) => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isHalf) rate /= 1.5;\r\n        if (note.isDiv3 !== 0) rate /= note.isDiv3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isHalf ? '' : '.'}{note.isDiv3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteSignal, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isHalf) rate /= 1.5;\r\n                if (note.isDiv3 !== 0) rate /= note.isDiv3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit}>\r\n                        <_State isUse={isUse} signal={'n'}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velocityAdjust: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    signal: NoteSignal;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css`\r\n        background-color: #f8fc029b;\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option onClick={deleteRecord}>-</_Option>\r\n            <_Option onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { VoicingTable } from \"../../../redux/store/backing/voicingTable\";\r\nimport { BackingPattern, BackingState, NoteRate, NoteStatus } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isHalf, () => {\r\n            cur.isHalf = !cur.isHalf;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.isDiv3 === 1, () => {\r\n            if (cur.isDiv3 === 1) cur.isDiv3 = 0;\r\n            else cur.isDiv3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.isDiv3 === 2, () => {\r\n            if (cur.isDiv3 === 2) cur.isDiv3 = 0;\r\n            else cur.isDiv3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.getVoicingStructs(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: ChannelParam[] = BackingUtil.getVoicingStructs(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChord();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n        Soundfont.instrument(new AudioContext(), 'bright_acoustic_piano',\r\n            { gain: 5, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_QuantizeSelector>\r\n            <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n        </_QuantizeSelector>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 3 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        else notesState.side = 'normal';\r\n                        break;\r\n                    }\r\n                };\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    state.isPreview = false;\r\n                    store.instruments.sampler.releaseAll();\r\n                    state.focusIndex = state.lastFocus;\r\n                    store.reserveTasks.forEach(id => clearTimeout(id));\r\n                    dispatcher.system.setReserveTasks([]);\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move) {\r\n            if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': dispatcher.tune.moveFocus(false); break;\r\n                case 'ArrowRight': dispatcher.tune.moveFocus(true); break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case '1': {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '2': {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '3': {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '/': {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                const notesList = store.scoreData.notesList;\r\n                notesList.splice(state.focusIndex, 1);\r\n                dispatcher.tune.setNotesList(notesList);\r\n                state.focusIndex--;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case ' ': {\r\n                dispatcher.tune.previewStart();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    keySwitch.octave = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'c': {\r\n                    keySwitch.scaleMode = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    keySwitch.resize = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'd': {\r\n                    keySwitch.move = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        const info = state.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n            const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const middle = (scroll + tableWidth / 2);\r\n                if (notesLeft - middle > tableWidth / 2 ||\r\n                    middle - notesRight < -tableWidth / 2) {\r\n                    continue;\r\n                }\r\n            }\r\n            const isActive = state.focusIndex === i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={getMinimumLenUnit(notes.len)}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header >\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={(e) => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={(e) => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #39cfd452;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #007a1428;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}