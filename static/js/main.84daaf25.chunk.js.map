{"version":3,"sources":["system/utils/theoryUtils.tsx","system/redux/reducer.tsx","system/utils/backingUtil.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternAdjust.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure2.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/preview/previewTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TheoryUtil","ActionType","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MINOR_SCALE_LIST","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","getBeatRate","beatSignature","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","hasError","divCount","Array","fill","table","channels","i","length","j","structIndex","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","rootIndex","map","item","interval","bpm","backing","pitchIndexList","chordTime","soundName","Math","floor","playHarmony","startTimeList","total","div","normal","rate","isDot","div3","timingAdj","timing","startTime","sustainTime","gain","velAdj","setTimeout","state","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","minute","beatLen","head","tail","getTotalLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","BackingUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","keyIndex","instrument","soundfontPlayer","play","duration","soundFullName","alert","stopPreview","sampler","releaseAll","tune","adjustScrollX","previewHarmony","start","cacheList","melody","elementCacheList","chordList","init","detail","cache","element","pastSecond","pitchList","getPitchListFromVoicing","playBacking","previewCurHarmony","curChord","tableMouse","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","HarmonizeUtil","firstTime","update","score","setScoreState","focusIndex","distIndex","clearTimeout","system","setReserveTasks","sectionCacheList","beatCacheList","scale","prevBeat","totalBeat","prevMinute","totalMinute","sectionNo","sectionBeatSum","curSecond","chordIndex","curTotalBeat","curSustain","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","prevBeatPos","beatRate","bar","surplusBeat","reffers","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","data","fileHandle","a","createWritable","writable","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","includes","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","pos","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","mode","dataHistory","add","scaleIndexies","SCALE_INDEX","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","updateCurChord","moveDistFocus","beatWidth","searchedChord","width","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","pitch","time","isSolo","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","incrementVel","after","deleteColumn","changeLayer","testBacking","checkError","this","DataHistory","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","distMode","sustainMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","scaleIndex","getScoreData","ManageTab","file","setFile","tabIndex","useMemo","modified","tempo","section","toString","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","getStringFromDate","Date","lastModified","sectionNum","chordNum","last","fileInfo","scoreInfo","setData","_Wrap","_Left","_Link","builder","_Right","_InfoDiv","_FileInfoDiv","isEnable","_TitleLabel","_Recored","_ItemnLabel","_ItemnValue","_ScoreInfoDiv","_ButtonsDiv","_Button","showOpenFilePicker","text","fileContents","FILE_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","chordRoot","prevCache","isError","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","val","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ScoreElement","wrapRef","useRef","bodyRef","wrap","current","body","isFocus","isRange","isSameSection","chordDetail","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","NoteKeyDown","e","config","isElement","Number","NoteBasicInput","signal","backingEditorInput","NoteKeySwitch","isPress","onChange","min","max","step","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_Minute","_MinuteItem","isReverse","_RootDiv","_SymbolDiv","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","split","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternAdjust","_Rocord","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternVelocity","vel","PatternBuilder","useTotalLen","isLenOverError","memoriJsxList","bean","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","_Footer","ChannelItem","_Option","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","CHANNEL_MAX","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","isSelected","_VoicingItem","isOver","soundfont","_VoicingLane","relationJsxList","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","_ModeItem","BEAT_WIDTH","HarmMeasure2","dataList","_Margin","beatCache","_Bar","isChordFocus","curChordIndex","beatJsxList","minuteJsxList","sustain","label","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","focus","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","_Total","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","scroll","clientWidth","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","EditTab","switchMode","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","_SECTIONS","PIT_HEIGTH","RATE_WIDTH","PreviewTab","areaRef","rateRef","past","setPast","timerId","setTimerId","isPlay","pit","sus","startList","normalList","areaWidth","recordJsxList","getTime","setInterval","_MainFixed","_RateFrame","_RateValue","_MainScroll","_HarmonyBox","_Line","HEADER_WIDTH","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84daaf25.chunk.js","sourcesContent":["import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n\r\n    export const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M2', 'M3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'M2', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport { NOTES_1BAR_WIDTH } from \"./systemConst\";\r\nimport { IntervalRelationProps, KEY12_SHARP_LIST, SymbolParams } from \"./theoryUtils\";\r\n\r\n\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (store: Store, reserveTasks: NodeJS.Timeout[], bpm: number, backing: ChordBacking, pitchIndexList: number[], chordTime: number) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime, 5);\r\n            });\r\n        } else {\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timingAdj = notes.status.timing * (60 / bpm * 1/32);\r\n                    const startTime = startTimeList[notes.x] + timingAdj;\r\n                    const sustainTime = chordTime - startTime;\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if(gain < 1) gain = 1;\r\n                    if(gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime, gain);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        return (chordInfo.beatLen + minute.head + minute.tail);\r\n    }\r\n\r\n    export const getTotalLenFromDivs = (divs: BackingState.NoteDiv[]) => {\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getTotalLenFromDivs(layer.noteDivList);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if(cell != null) {\r\n                        if(checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if(backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if(right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n        \r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\nimport BackingUtil from \"./backingUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, {gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                update();\r\n                // dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    // state.focusIndex = state.lastFocus;\r\n    // state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n\r\n                    // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    // const div = pickingDelay / pitchList.length;\r\n\r\n                    // pitchList.forEach((index, j) => {\r\n                    //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //     const octave = Math.floor(index / 12);\r\n                    //     const soundFullName = soundName + octave;\r\n                    //     playPiano(soundFullName, store, chordTime);\r\n                    // });\r\n\r\n                    BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n                    // store.melodyState.mouseState.curChord = element;\r\n                    // update();\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.tableMouse.curChord;\r\n    const reserveTasks = store.reserveTasks;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const backing = detail.backing;\r\n        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n        const chordTime = 60 / init.bpm * len;\r\n\r\n        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n        reserveTasks.push(setTimeout(() => {\r\n            state.isPreview = false;\r\n            dispatcher.tune.setState(state);\r\n        }, chordTime * 1000));\r\n        state.isPreview = true;\r\n        dispatcher.tune.setState(state);\r\n\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/scoreData\";\r\nimport { BeatCache, ElementCache, SectionCache } from \"../redux/store/scoreState\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport { getBeatRate, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / cache.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / cache.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n        const beatCacheList: BeatCache[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        let curTotalBeat = 0;\r\n        let curSustain = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        prevBeat = totalBeat;\r\n                        prevMinute = totalMinute;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    curTotalBeat += curSustain;\r\n                    \r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                    chordIndex ++;\r\n\r\n                    curSustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                    // 時間の計算\r\n                    curSecond = 60000 / bpm * (detail.beatLen + detail.minute.head + detail.minute.head);\r\n                }\r\n                    break;\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        case 'modulate': {\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        case 'tempo': {\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        case 'beat': {\r\n                            const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                length: curTotalBeat + curSustain - prevBeatPos\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(beatSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                surplusBeat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalBeat,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        \r\n        const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            length: curTotalBeat + curSustain - prevBeatPos\r\n        });\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        store.scoreState.beatCacheList = beatCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import TheoryUtil, { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, getChordRoot, getSymbolFromKey, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport HarmonizeUtil from \"../../utils/harmonizeUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    await writable.write(JSON.stringify(data));\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        await writable.write(JSON.stringify(data));\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const curChord = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if(curChord.minute.tail != 0) return;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? DIATONIC_MAJOR_SCALE_LIST : DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = notesList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            if (focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = start - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.distIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n                this.tune.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex + pastList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: BackingState.NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        beatCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory()\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        sustainMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            sustainMode: 'f',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null, hasError: false } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\n//日付から文字列に変換する関数\r\nconst getStringFromDate = (date: Date) => {\r\n\r\n    const year_str = date.getFullYear().toString();\r\n    //月だけ+1すること\r\n    const month_str = (1 + date.getMonth()).toString();\r\n    const day_str = date.getDate().toString();\r\n    const hour_str = date.getHours().toString();\r\n    const minute_str = date.getMinutes().toString();\r\n    const second_str = date.getSeconds().toString();\r\n\r\n    let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n    format_str = format_str.replace(/YYYY/g, year_str);\r\n    format_str = format_str.replace(/MM/g, month_str);\r\n    format_str = format_str.replace(/DD/g, day_str);\r\n    format_str = format_str.replace(/hh/g, hour_str);\r\n    format_str = format_str.replace(/mm/g, minute_str);\r\n    format_str = format_str.replace(/ss/g, second_str);\r\n\r\n    return format_str;\r\n};\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                <_InfoDiv>\r\n                    <_FileInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>FILE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>name</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.name}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>size</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.size}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>modified</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.modified}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_FileInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>key</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.key}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>tempo</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.tempo}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>rate</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.rate}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>section</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.section}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>chord</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.chord}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>bar</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.bar}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>time</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.time}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>notes</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.notes}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_ScoreInfoDiv>\r\n                </_InfoDiv>\r\n                <_ButtonsDiv>\r\n                    {/* <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button> */}\r\n\r\n                    <_Button onClick={() => {\r\n\r\n                        const options = {\r\n                            types: [\r\n                                {\r\n                                    accept: {\r\n                                        'text/plain': ['.lcrs'],\r\n                                    },\r\n                                },\r\n                            ],\r\n                        };\r\n                        if (fileHandle != null) {\r\n\r\n                            (async () => {\r\n                                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                const writable = await fileHandle.createWritable();\r\n                                //テキストデータの書き込み\r\n                                await writable.write(JSON.stringify(data));\r\n                                //ファイルを閉じる\r\n                                await writable.close();\r\n                                store.scoreState.fileHandle = fileHandle;\r\n                                dispatcher.score.setScoreState({ ...store.scoreState });\r\n                                const file = await fileHandle.getFile();\r\n                                setFile(file);\r\n                                alert('saved successfully!');\r\n                            })();\r\n                        } else {\r\n                            window.showSaveFilePicker(options).then((handle) => {\r\n                                (async () => {\r\n                                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                    const writable = await handle.createWritable();\r\n                                    //テキストデータの書き込み\r\n                                    await writable.write(JSON.stringify(data));\r\n                                    //ファイルを閉じる\r\n                                    await writable.close();\r\n                                    store.scoreState.fileHandle = handle;\r\n                                    dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                                    const file = await handle.getFile();\r\n                                    setFile(file);\r\n                                })();\r\n                            }).catch(() => {\r\n                                console.log('キャンセルされました');\r\n                            });\r\n                        }\r\n                    }}>Save</_Button>\r\n                    <_Button onClick={() => {\r\n                        (async () => {\r\n                            const [fileHandle] = await window.showOpenFilePicker();\r\n                            const file = await fileHandle.getFile();\r\n                            const fileContents = await file.text();\r\n                            // console.log(fileContents);\r\n                            store.scoreState.fileHandle = fileHandle;\r\n                            setFile(file);\r\n                            store.scoreState.focusIndex = 2;\r\n                            store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                            dispatcher.score.setScoreState({ ...store.scoreState });\r\n                            // dispatcher.score.setScoreTabIndex(1);\r\n                            dispatcher.score.setScoreData(JSON.parse(fileContents));\r\n                        })();\r\n                    }}>Load</_Button>\r\n                    <_Button onClick={() => {\r\n                        store.scoreState.fileHandle = null;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n                        // キャッシュの更新\r\n                        store.scoreData = data;\r\n                        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n                        setFile(null);\r\n                    }}>Disconnect</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    /* background-color: #e98c8c; */\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst FILE_INFO_HEIGHT = 160;\r\n\r\nconst _FileInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${FILE_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${FILE_INFO_HEIGHT + 16}px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 160px;\r\n    background-color: #8098a3;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter as DetailAlter } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { NoteKeySwitch } from \"../../../../../../redux/store/scoreState\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    keySwitch: NoteKeySwitch;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n    const keySwitch = props.keySwitch;\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = cache.scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES : DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.sustainMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            cache.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            keySwitch.sustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    background-color: #7c89a1;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin: 2px 0 0 4px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    background-color: #a8c7a8;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ElementCache;\r\n    curCache: ElementCache;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    const isInactive = !(isSameSection || chordList[state.focusIndex].type === 'init');\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={isInactive}\r\n            isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex] + (cache.scale === 'major' ? '' : 'm')}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isRange={isRange}\r\n                    isInactive={isInactive}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        if (!state.keySwitch.distMode) {\r\n                            state.focusIndex = props.index;\r\n                            state.distIndex = state.focusIndex;\r\n                        } else {\r\n                            state.distIndex = props.index;\r\n                        }\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord\r\n                                detail={detail}\r\n                                isCurrent={isFocus}\r\n                                keyIndex={cache.keyIndex}\r\n                                keySwitch={state.keySwitch}\r\n                            />);\r\n                        }\r\n                        case 'alter': {\r\n                            const detail = element.detail as DetailAlter;\r\n                            return (<ElementDetailAlter detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'alter' ? (\r\n                            <CalcAlter\r\n                                detail={element.detail as DetailAlter}\r\n                                prevCache={state.elementCacheList[props.index - 1]}\r\n                                curCache={cache}\r\n                            />\r\n                        ) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebf1e2;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4badd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #e8f3ab9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            dispatcher.score.saveFile();\r\n                        }\r\n                        break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        // case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        // case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        // case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        // case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 0.25);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -0.25);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -0.25);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 0.25);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.sustainMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (!keySwitch.sustainMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                }\r\n                if (pattern.channelIndex === -1) {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.incrementVel(1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.incrementVel(-1);\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addPatternColumn();\r\n                        }\r\n                            break;\r\n                        case 'w': {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                            break;\r\n                        case '1': {\r\n                            dispatcher.backing.setCurrentDivRate(16);\r\n                        }\r\n                            break;\r\n                        case '2': {\r\n                            dispatcher.backing.setCurrentDivRate(8);\r\n                        }\r\n                            break;\r\n                        case '3': {\r\n                            dispatcher.backing.setCurrentDivRate(4);\r\n                        }\r\n                            break;\r\n                        case '4': {\r\n                            dispatcher.backing.setCurrentDivRate(2);\r\n                        }\r\n                            break;\r\n                        case '5': {\r\n                            dispatcher.backing.setCurrentDivRate(1);\r\n                        }\r\n                            break;\r\n                        case '.': {\r\n                            dispatcher.backing.toggleCurrentDivHalf();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            dispatcher.backing.deleteColumn();\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = 0;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.backing.mappingEditorToScore();\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                const pattern = state.pattern as BackingState.Pattern;\r\n                const layer = pattern.layers[pattern.layerIndex];\r\n                const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                if (cell != null) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            cell.velAdj++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            cell.velAdj--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            cell.timing--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            cell.timing++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? ['0', '2', '4', '5', '7', '9', '11'] : ['0', '2', '3b', '5', '7', '8b', '10b'];\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index + (root.isFlat ? '' : 'b'));\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat Length'}</_CategoryLabel>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute Head'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_CategoryLabel>{'Minute Tail'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d12121b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #94c5e6b9;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d12121b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n            }, 30, 220, 1)}\r\n            {/* <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap> */}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        ['', 1, 2, 3, 4, 5, 6, 7, 8, 9].forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 10px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #c7c7c7;\r\n        border: solid 1px #a1a1a1;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4e4e4;\r\n        border: solid 1px #7c7c7c;\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternAdjust = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            cell == null ? <></> : (<>\r\n                <_Rocord>\r\n                    <_Label>timing</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n                <_Rocord>\r\n                    <_Label>velocity</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternAdjust;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Rocord = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(50% - 2px);\r\n    margin: 1px 0;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 1px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 2px);\r\n    width: 80px;\r\n    background-color: #868686;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 600;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 6px 0 0 10px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { ElementCache } from \"../../../../redux/store/scoreState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternAdjust from \"./patternAdjust\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getTotalLenFromDivs(divs);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < Math.floor(useTotalLen / 0.25) + 1; i++) {\r\n        const pos = i;\r\n        let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n        switch (true) {\r\n            case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n            case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n            case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={bean.width}\r\n                height={bean.height}\r\n                color={bean.color}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                <PatternVelocity /> :\r\n                <PatternAdjust/>\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${NOTES_1BAR_WIDTH / 16}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < 12} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice(); \r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n    let total = 0;\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n\r\n    const relationJsxList: JSX.Element[] = [];\r\n    symbol.structs.forEach((struct, i) => {\r\n        const interval = IntervalRelationProps[struct];\r\n        const chordIndex = (+ interval) % 12;\r\n        relationJsxList.push(\r\n            <_Relation key={i}>{struct} [{KEY12_SHARP_LIST[chordIndex]}]</_Relation>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    {relationJsxList}\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { getBeatRate } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst HarmMeasure2 = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.beatCacheList.forEach((beatCache, i) => {\r\n            let total = 0;\r\n\r\n            const rate = getBeatRate(beatCache.beatSignature)[0] * 4;\r\n            for (let j = 0; j < Math.floor(beatCache.length / 0.25); j++) {\r\n                const pos = Math.floor(total / 0.25);\r\n                let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n                switch (true) {\r\n                    case pos % rate === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                    case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                    case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n                }\r\n                list.push(\r\n                    <_Memori\r\n                        key={list.length}\r\n                        width={bean.width}\r\n                        height={bean.height}\r\n                        color={bean.color}\r\n                    >\r\n                        {pos % rate === 0 ? <_Bar>{1 + Math.floor(pos / rate)}</_Bar> : ''}\r\n                        {/* {<_Bar>{i}</_Bar>} */}\r\n                    </_Memori>\r\n                );\r\n                total += 0.25;\r\n            }\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const isChordFocus = dataList[focusIndex].type === 'chord';\r\n    const curChordIndex = cacheList[focusIndex].chordIndex;\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={4 + cache.curTotalBeat} sustain={sustain}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={4 + cache.curTotalBeat + detail.minute.head} sustain={detail.beatLen}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList, dataList.length, focusIndex]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalBeat * BEAT_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure2;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_WIDTH}px;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_WIDTH}px;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure2 from \"./measure/harmMeasure2\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure2 /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.distIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.tune.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { getNormalizeLenFromNotes, previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const width = beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony, stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const isSingle = state.focusIndex === state.distIndex;\r\n        // const notesList = store.scoreData.notesList;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.tune.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.tune.undo(); break;\r\n                    case 'y': dispatcher.tune.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(false);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(true);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.tune.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.distIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport TheoryUtil, { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 50;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n        const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                if (notesRight - scroll < 0 ||\r\n                    notesLeft - scroll > tableRef.current.clientWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={() => {\r\n                            console.log('leave!');\r\n                            if (mouse.notesState.index !== -1) {\r\n                                mouse.notesState.index = -1;\r\n                                mouse.notesState.isResize = false;\r\n                                mouse.notesState.side = 'normal';\r\n                            }\r\n                            mouse.mouseMeasurePos = -1;\r\n                            mouse.mousePitchIndex = -1;\r\n                            update();\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { getSymbolFromKey, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\n\r\n\r\n\r\nconst HEADER_WIDTH = 100;\r\nconst FOOTER_WIDTH = 50;\r\n\r\nconst BEAT_RATE = 50;\r\nconst PIT_HEIGTH = 10;\r\nconst START_LINE = 200;\r\nconst RATE_WIDTH = 500;\r\n\r\nconst PreviewTab = (props: {\r\n    data: ScoreData;\r\n}) => {\r\n\r\n    const chordList = props.data.chordList;\r\n    const notesList = props.data.notesList;\r\n\r\n    const areaRef = useRef<null | HTMLDivElement>(null);\r\n    const rateRef = useRef<null | HTMLDivElement>(null);\r\n    const [past, setPast] = useState(0);\r\n    const [timerId, setTimerId] = useState<null | NodeJS.Timeout>(null);\r\n\r\n\r\n    const isPlay = timerId != null;\r\n\r\n    const [jsxList, totalLen, bpm, areaWidth] = useMemo(() => {\r\n\r\n        const jsxList: JSX.Element[] = [];\r\n        const add = (pos: number, len: number, pit: number, isRight: boolean) => {\r\n            const isActive = past >= pos && past <= pos + len;\r\n            jsxList.push(<_Notes key={jsxList.length}\r\n                pos={pos}\r\n                sus={len}\r\n                pit={pit}\r\n                isRight={isRight}\r\n                isActive={isActive}\r\n            />);\r\n        }\r\n        const init = chordList[0].detail as DetailInit;\r\n        let curPos = 0;\r\n        for (let i = 0; i < chordList.length; i++) {\r\n            const chord = chordList[i];\r\n            switch (chord.type) {\r\n                case 'chord': {\r\n                    const detail = chord.detail as DetailChord;\r\n                    const backing = detail.backing;\r\n                    if (detail.root != null) {\r\n                        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                        const symbol = getSymbolFromKey(detail.symbolKey);\r\n                        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n                        if (backing.pattern == null) {\r\n                            pitchList.forEach((index) => {\r\n                                // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                // const octave = Math.floor(index / 12);\r\n                                const pit = 87 - index;\r\n                                add(curPos, len, pit, false);\r\n                            });\r\n                        } else {\r\n                            const pattern = backing.pattern;\r\n                            pattern.layers.forEach((layer, layerIndex) => {\r\n                                const startList: number[] = [];\r\n                                const normalList: number[] = [];\r\n                                let total = 0;\r\n                                layer.divs.forEach(div => {\r\n                                    startList.push(total);\r\n                                    let normal = 4 / div.rate;\r\n                                    if (div.isDot) normal *= 1.5;\r\n                                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                                    normalList.push(normal);\r\n                                    total += normal;\r\n                                });\r\n                                layer.notesList.forEach((notes) => {\r\n\r\n                                    const timingAdj = notes.status.timing * (1 / 32);\r\n                                    const start = curPos + startList[notes.x] + timingAdj;\r\n                                    const sustain = normalList[notes.x];\r\n\r\n                                    const index = pitchList[notes.y];\r\n\r\n                                    const pit = 87 - index;\r\n\r\n                                    // if (!isPlay || (start <= past + 15 && start + sustain > past)) {\r\n                                        add(start, sustain, pit, layerIndex === 1);\r\n                                    // }\r\n                                    // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                    // const octave = Math.floor(index / 12);\r\n                                    // const soundFullName = soundName + octave;\r\n\r\n                                });\r\n                            });\r\n                        }\r\n                        curPos += len;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n        const areaWidth = areaRef.current == null ? 0 : areaRef.current.clientWidth;\r\n        return [jsxList, curPos, init.bpm, areaWidth];\r\n    }, [props.data, past, isPlay]);\r\n\r\n    // const recordJsxList = useMemo(() => {\r\n    //     return jsxList;\r\n    // }, []);\r\n    const recordJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 88; i++) {\r\n        recordJsxList.push(\r\n            <_Record key={i} pit={i} isScale={i % 2 == 0}></_Record>\r\n        );\r\n    }\r\n\r\n\r\n    const setRate = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rateRef.current == null || timerId != null) return;\r\n        const rect = rateRef.current.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        console.log(x);\r\n        setPast(totalLen * x / RATE_WIDTH);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header onClick={() => {\r\n                if (timerId == null) {\r\n                    const start = new Date().getTime();\r\n                    const id = setInterval(() => {\r\n                        const time = new Date().getTime() - start;\r\n                        setPast(past + time * bpm / 60000);\r\n                        // console.log(past);\r\n                    }, 50);\r\n                    setTimerId(id);\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    setTimerId(null);\r\n                }\r\n            }}></_Header>\r\n            <_Main>\r\n                <_MainFixed>\r\n                    <_RateFrame pos={areaWidth / 2 - RATE_WIDTH / 2} ref={rateRef}\r\n                        onClick={setRate}>\r\n                        <_RateValue value={totalLen === 0 ? 0 : RATE_WIDTH * (past / totalLen)} />\r\n                    </_RateFrame>\r\n                </_MainFixed>\r\n                <_MainScroll ref={areaRef}>\r\n                    <_HarmonyBox pos={past} width={totalLen} isPlay={isPlay}>\r\n                        {recordJsxList}\r\n                        {jsxList}\r\n                    </_HarmonyBox>\r\n                    <_Line pos={START_LINE} />\r\n                </_MainScroll>\r\n            </_Main>\r\n            <_Footer></_Footer>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2d3246;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #95a5ca;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH + FOOTER_WIDTH}px);\r\n    /* background-color: #2d3246; */\r\n    text-align: left;\r\n`;\r\nconst _MainScroll = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`;\r\nconst _MainFixed = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _HarmonyBox = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isPlay: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => START_LINE - props.pos * BEAT_RATE}px;\r\n    width: ${props => props.width * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: #ffffffb5;\r\n    ${props => props.isPlay ? '' : css`\r\n        transition: left 0.5s;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isScale: boolean;\r\n    pit: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    // position: absolute;\r\n    width: 100%;\r\n    height: ${PIT_HEIGTH}px;\r\n    // background-color: ${props => props.isScale ? '#fffffff9f' : '#00ff4cf8f'};\r\n    /* background-color: #0026fc11; */\r\n    ${props => props.isScale ? '' : css`\r\n        background-color: #ffffff08;\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    sus: number;\r\n    pit: number;\r\n    isRight: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_RATE}px;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    width: ${props => props.sus * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH}px;\r\n    background-color: ${props => !props.isRight ? '#ad0000e0' : '#002ca7df'};\r\n    opacity: 0.3;\r\n    ${props => !props.isActive ? '' : css<{\r\n    isRight: boolean;\r\n}>`\r\n        opacity: 1;\r\n        background-color: ${props => !props.isRight ? '#ff4242df' : '#4677ffdf'};\r\n        box-shadow: 0 0 14px 0 #ffffff46;\r\n    `}\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos - 1}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: white;\r\n    width: 3px;\r\n`;\r\n\r\nconst _RateFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    left: ${props => props.pos}px;\r\n    bottom: 20px;\r\n    width: ${RATE_WIDTH}px;\r\n    height: 25px;\r\n    background-color: #000000;\r\n    border: solid 1px #000;\r\n    box-sizing: border-box;\r\n    opacity: 0.7;\r\n`;\r\nconst _RateValue = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: ${props => props.value}px;\r\n    height: 100%;\r\n    background-color: #afe7e9;\r\n`;\r\n\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #5a5e72;\r\n    text-align: left;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    background-color: #ffffff1f;\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}