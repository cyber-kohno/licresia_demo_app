{"version":3,"sources":["system/redux/reducer.tsx","system/utils/soundUtils.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/utils/systemConst.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/base/components/button/executableButton.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementDetailFixed.tsx","system/contents/score/edit/harmonize/elements/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/timeline/blockItem.tsx","system/contents/score/edit/harmonize/timeline/harmTimeline.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/harmonize/input/tuneInput.tsx","system/contents/score/edit/melody/pitchList.tsx","system/contents/score/edit/melody/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","forEach","symbol","getSymbolDerives","list","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","tuneState","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","score","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","state","setScoreData","moveElement","isNext","sub","chordList","focusIndex","moveSection","curSectionIndex","elementCacheList","sectionNo","sectionCacheList","curSectionInfo","curElementType","length","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","detail","includes","incrementBeatLen","slice","beatLen","addChordElement","element","initialBeat","minute","head","tail","on","splice","addSectionElement","labelName","removeCurElement","cache","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","setTimeout","incrementSymbol","setDiatonicChord","chord","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","tune","setState","setNotesList","notesList","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","isTune","quantize","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","map","tab","icon","isActive","isDisable","disable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","styled","div","css","TabbedPane","TabLabel","_TabLabel","TabContents","_Object","ExecutableButton","useContext","GlobalContext","dispatcher","size","get","height","fontSize","_Wrap","backgroundColor","callback","labelText","ManageTab","keyIndex","bpm","scale","timeSignature","fixed","SymbolEditor","curSymbol","baseSymbol","derives","i","parentJsx","curJsx","childrenJsx","item","_Row","ElementDetailChord","degreeRoot","degreeOn","chordRoot","chordOn","symbolName","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Chord","_Tip","jsxList","ElementDetailFixed","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","curSection","barSum","Math","floor","beatSum","barRem","_Len","_Border","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","isFixed","bar","prevCache","isError","beat","chordDetail","ref","isInactive","_Head","_CurKey","_Body","_Pos","_Section","_Beat","_PastSecond","round","pastSecond","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","ELEMENT_POS_INFO_WIDTH","HarmNote","num","_Note","NoteKeySwitch","e","isPress","config","Number","NoteKeyDown","SideFormChord","beatItemsJsx","isExist","_BeatItem","rootItemsJsx","isRootActive","JSON","stringify","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_Minutetem","isReverse","step","min","max","value","onChange","target","_Root","_Symbol","input","SideFormSection","NoteSideForm","BlockItem","cur","curChord","curLength","HarmTimeline","scrollRef","dataList","blockItemJsxList","_Blocks","_Measure","ChordInfo","structJsxList","tipJsxList","rootIndex","relation","getIntervalValues","struct","_InfoItem","isBlack","isUse","_Info","_Struct","WIDTH","InitialBeatTip","_WrapTip","HarmonizeTab","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","tabIndex","onKeyDown","onKeyUp","_Left","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","_Right","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","TuneKeySwitch","TuneKeyDown","PitchList","pitchItemJsxList","structIndexList","octave","soundName","getOctaveName","_PitchItem","isScale","isStruct","mousePitchIndex","_OctaveWrap","_OctaveItem","_PitchWrap","QuantizeSwitch","MelodyFrame","tableRef","measureRef","chordRef","pitchRef","isPut","setPut","x","y","lock","setLock","setWidth","nextLeft","setNextLeft","beatWidth","barLength","side","isResize","notesState","setNotesState","setCurChord","setMousePitchIndex","mouseMeasurePos","setMouseMeasurePos","timelineLength","rate","measureJsxList","barJsx","_Bar","_Scale","isHead","chordJsxList","_ChordItem","notesJsxList","notes","_NotesWrap","left","posX","isEdit","rect","getBoundingClientRect","clientY","scrollTop","top","pitchIndex","_Notes","lenType","_Header","_Timeline","_ChordWrap","_MousePos","_Pitch","_TableWrap","onScroll","scrollLeft","scrollTo","_Table","onMouseDown","button","clientX","next","find","onMouseMove","normalX","searchedChord","right","onMouseUp","sort","a","b","_Test","EditTab","switchMode","_Mode","_ModeItem","_SECTIONS","_Main","_Buttons","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","clearTimeout","fadeIn","keyframes","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","span","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","_MainDiv","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ff155a7.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.tuneState = payload.tuneState;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5']\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5']\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7']\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5']\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7']\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7']\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7']\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2']\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2']\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): null | SymbolParams => {\r\n    let ret = null;\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.key) {\r\n            ret = symbol;\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n","import { DIATONIC_MAJOR_SCALE_LIST, SymbolKey } from \"../../utils/soundUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { ChordElement, DetailChord, DetailSection, ScoreData, TuneNotes } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { TuneState } from \"../store/tuneState\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n\r\n    }\r\n\r\n    public system = {\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'NEW'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            if (element.type === 'section' && state.sectionCacheList.length === 1) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (key: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[key];\r\n            detail.root = {...chord.root};\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: TuneState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        } \r\n    }\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { TuneState } from \"./tuneState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    tuneState: TuneState;\r\n    scoreData: ScoreData;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0\r\n    },\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null\r\n    },\r\n    tuneState: {\r\n        focusIndex: -1,\r\n        quantize: 4\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    }\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 430;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 160;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ExecutableButton labelText={<>Blank</>} size={'midium'} width={100} callback={() => {\r\n\r\n                const data: ScoreData = {\r\n                    chordList: [\r\n                        { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                        { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                        { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                        { type: 'chord', detail: { beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major' } as DetailChord },\r\n                        { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                    ],\r\n                    notesList: []\r\n                };\r\n                dispatcher.score.setScoreData(data);\r\n                store.scoreState.focusIndex = 2;\r\n                dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                dispatcher.score.setScoreTabIndex(1);\r\n                // dispatcher.score.setScoreTabIndex(2);\r\n            }} />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d6e5f1;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={i}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={i}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={i}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 20;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 150px;\r\n    background-color: #a9cfd4;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_MAJOR_SCALE_LIST, getChordRoot, getDegreeRoot, getSymbolFromKey, KEY12_SHARP_LIST, ScaleRelation } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({ index: props.detail.root.index, isFlat: props.detail.root.isFlat });\r\n        chordRoot = getChordRoot({ index: props.detail.root.index, isFlat: props.detail.root.isFlat }, 0);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({ index: props.detail.on.index, isFlat: props.detail.on.isFlat });\r\n            chordOn = getChordRoot({ index: props.detail.on.index, isFlat: props.detail.root.isFlat }, 0);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord>\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        jsxList.push(<span key={i} />);\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n        props.detail.on?.index,\r\n        props.detail.symbolKey,\r\n        state.keySwitch.editMode\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #00f73662; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 14px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n    & span {\r\n        display: inline-block;\r\n        width: 6px;\r\n        height: 100%;\r\n        margin: 0 2px 0 2px;\r\n        background-color: #e0e0e088;\r\n        /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n        border: solid 1px #0000004e;\r\n        /* border-radius: 2px; */\r\n        box-sizing: border-box;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailFixed = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                {props.detail.fixed}\r\n            </_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailFixed;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 100%;\r\n    border-radius: 30px 0 0 0;\r\n    background-color: #817d9231;\r\n    border: 1px solid #686d7c83;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 48px;\r\n    margin-top: 30px;\r\n    /* background-color: #ffffff65; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #e6e6e6;\r\n    text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../utils/soundUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: red;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n`;\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #242424;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 4px;\r\n    height: calc(100% - 34px);\r\n    background-color: #c00;\r\n`;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport ElementDetailChord from \"./elementDetailChord\";\r\nimport ElementDetailFixed from \"./elementDetailFixed\";\r\nimport ElementDetailInit from \"./elementDetailInit\";\r\nimport ElementDetailSection from \"./elementDetailSection\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n    const isFixed = ['fixed', 'init'].includes(element.type);\r\n\r\n    let bar = -1;\r\n    if (element.type === 'chord') {\r\n        const prevCache = state.elementCacheList[props.index - 1];\r\n        // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n        // 実際の小節は1から数える\r\n        if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n            bar = cache.bar + 1;\r\n        }\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isFixed={isFixed}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n            <_Body\r\n                ref={bodyRef}\r\n                isActive={isFocus}\r\n                isInactive={!isSameSection}\r\n                isFixed={isFixed}\r\n                onClick={() => {\r\n                    if (isFixed) {\r\n                        return;\r\n                    }\r\n                    state.focusIndex = props.index;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >{(() => {\r\n                switch (element.type) {\r\n                    case 'fixed': {\r\n\r\n                        return (<ElementDetailFixed detail={element.detail as DetailFixed} />);\r\n                    }\r\n                    case 'init': {\r\n                        const detail = element.detail as DetailInit;\r\n                        return (<ElementDetailInit detail={detail} />);\r\n                    }\r\n                    case 'section': {\r\n                        const detail = element.detail as DetailSection;\r\n                        return (<ElementDetailSection index={props.index} />);\r\n                    }\r\n                    case 'chord': {\r\n                        const detail = element.detail as DetailChord;\r\n                        return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                    }\r\n                }\r\n            })()} </_Body>\r\n            {element.type !== 'chord' ? <></> : (\r\n                <_Pos>\r\n                    <_Section\r\n                        isError={isError}\r\n                    >\r\n                        {bar === -1 ? <>&nbsp;</> : bar}\r\n                    </_Section>\r\n                    <_Beat>\r\n                        <span>\r\n                            {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                            {/* {` (+0.25)`} */}\r\n                        </span>\r\n                        {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                    </_Beat>\r\n                    <_PastSecond>\r\n                        {Math.round(cache.pastSecond / 100) / 10}s\r\n                    </_PastSecond>\r\n                </_Pos>\r\n            )}\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {element.type === 'fixed' ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Body = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n\r\n    opacity: 0.4;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isFixed ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`background-color: #5cd8625a`}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    isFixed: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    // isRemove: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        /* opacity: 1; */\r\n        ${props => props.isFixed ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Body} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Beat = styled.div``;\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 50px;\r\n    // background-color: #0000ff11;\r\n    bottom: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e2e2e2;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1ae;\r\n    overflow: hidden;\r\n    margin: 10px 0 0 10px;\r\n`;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    if (keySwitch.editMode) {\r\n        switch (e.key) {\r\n            case config.decRoot: {\r\n                dispatcher.score.incrementDegreeRoot(false);\r\n            }\r\n                break;\r\n            case config.incRoot: {\r\n                dispatcher.score.incrementDegreeRoot(true);\r\n            }\r\n                break;\r\n            case config.decBeat: {\r\n                dispatcher.score.incrementBeatLen(false);\r\n            }\r\n                break;\r\n            case config.incBeat: {\r\n                dispatcher.score.incrementBeatLen(true);\r\n            }\r\n                break;\r\n        }\r\n    } else if (keySwitch.symbolMode) {\r\n        switch (e.key) {\r\n            case 'ArrowUp': {\r\n                dispatcher.symbol.toNext(false);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.symbol.toNext(true);\r\n            }\r\n                break;\r\n            case 'ArrowLeft': {\r\n                dispatcher.symbol.toBase();\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.symbol.toDerive();\r\n            }\r\n                break;\r\n        }\r\n    } else {\r\n        switch (e.key) {\r\n            // 要素の移動\r\n            case config.prevElement: {\r\n                dispatcher.score.moveElement(false);\r\n            }\r\n                break;\r\n            case config.nextElement: {\r\n                dispatcher.score.moveElement(true);\r\n            }\r\n                break;\r\n            // セクションの移動\r\n            case config.prevSection: {\r\n                dispatcher.score.moveSection(false);\r\n            }\r\n                break;\r\n            case config.nextSection: {\r\n                dispatcher.score.moveSection(true);\r\n            }\r\n                break;\r\n            case config.addChord: {\r\n                dispatcher.score.addChordElement();\r\n            }\r\n                break;\r\n            case config.addSection: {\r\n                dispatcher.score.addSectionElement();\r\n            }\r\n                break;\r\n            case config.deleteCur: {\r\n                dispatcher.score.removeCurElement();\r\n            }\r\n                break;\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '4':\r\n            case '5':\r\n            case '6':\r\n            case '7': {\r\n                dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alnfig.nextElement);\r\n    switch (e.key) {\r\n        case config.editMode: {\r\n            keySwitch.editMode = isPress;\r\n            dispatcher.score.setKeySwitch(keySwitch);\r\n        }\r\n            break;\r\n        case config.symbolMode: {\r\n            keySwitch.symbolMode = isPress;\r\n            dispatcher.score.setKeySwitch(keySwitch);\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n    detail: DetailChord;\r\n}) => {\r\n    const detail = props.detail;\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = props.detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, 0)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === props.detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_Minutetem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_Minutetem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #4c3696;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _Minutetem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #f0ee84;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    const detail = props.detail;\r\n    \r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b85f5f;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <></>;\r\n                    case 'section': return <SideFormSection detail={element.detail as DetailSection} />;\r\n                    case 'chord': return <SideFormChord detail={element.detail as DetailChord} />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst BlockItem = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const cur = dataList[props.index];\r\n    const curChord = cur.type !== 'chord' ? null : cur.detail as DetailChord;\r\n    const curLength = curChord == null ? 0 : curChord.beatLen;\r\n\r\n    return (\r\n        <_Wrap length={curLength} isFocus={state.focusIndex === props.index}>\r\n\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default BlockItem;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n    length: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: ${props => props.length * TIMELINE_BEAT_WIDTH - 2}px;\r\n    border: 1px solid #3b3b3b;\r\n    background-color: #b6b6b6;\r\n    ${props => !props.isFocus ? '' : css`background-color: #e2e2e2;`}\r\n    box-sizing: border-box;\r\n    margin: 1px;\r\n    transition: width 0.1s;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmTimeline = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n\r\n    const blockItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n\r\n        dataList.forEach((data, i) => {\r\n            switch (data.type) {\r\n                case 'chord': {\r\n                    list.push(\r\n                        <BlockItem key={list.length} index={i}/>\r\n                    );\r\n                }\r\n                    break;\r\n            }\r\n        });\r\n        return list;\r\n    }, [dataList.length]);\r\n\r\n    useEffect(()=> {\r\n        // scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n    }, [state.focusIndex]);\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap ref={scrollRef}>\r\n            <_Blocks>{blockItemJsxList}</_Blocks>\r\n            <_Measure>\r\n\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmTimeline;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    overflow-x: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 46px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(221, 221, 221);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: 50px;\r\n    /* background-color: rgb(253, 250, 236); */\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgba(0, 0, 0, 0.349));\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues(root.index, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            structJsxList.push(\r\n                <_Item key={structJsxList.length} isBlack={false} index={i} isUse={structs.includes(structJsxList.length)}></_Item>\r\n            );\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isUse={structs.includes(structJsxList.length)}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            <_Info>{tipJsxList}</_Info>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    background-color: #4b4b4b;\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ${props => !props.isUse ? '' : css`background: radial-gradient(#d43131, #722a2a);`}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmTimeline from \"./timeline/harmTimeline\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\n\r\nconst HarmonizeTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const sectionMSec = 60000 / 122 * 4;\r\n            const pastSecond = sectionMSec / 4 * prevBeat;\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / 4),\r\n                beat: prevBeat % 4,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmNote />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmTimeline /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d8d8d8;\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #cccccc;\r\n`;\r\n// const _SECTIONS = styled.div`\r\n//     display: inline-block;\r\n//     width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n//     height: 100%;\r\n//     background-color: #d8d8d8;\r\n//     border-right: 1px solid #3e3f57;\r\n//     box-sizing: border-box;\r\n//     vertical-align: top;\r\n// `;\r\n// const _Main = styled.div`\r\n//     display: inline-block;\r\n//     width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n//     height: 100%;\r\n//     background-color: #dddddd;\r\n//     vertical-align: top;\r\n// `;\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`#e7e7e6be` : css`#c4c4c42b`} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 4px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\n\r\nexport const TuneKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const state = store.tuneState;\r\n\r\n    switch (e.key) {\r\n        case 'ArrowUp': {\r\n        }\r\n            break;\r\n        case 'ArrowDown': {\r\n        }\r\n            break;\r\n        case 'ArrowLeft': {\r\n            state.focusIndex--;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'ArrowRight': {\r\n            state.focusIndex++;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '1': {\r\n            state.quantize = 16;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '2': {\r\n            state.quantize = 8;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '3': {\r\n            state.quantize = 4;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'Delete': {\r\n            const notesList = store.scoreData.notesList;\r\n            notesList.splice(state.focusIndex, 1);\r\n            dispatcher.tune.setNotesList(notesList);\r\n            state.focusIndex --;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n    }\r\n}\r\n\r\nexport const TuneKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alnfig.nextElement);\r\n    // switch (e.key) {\r\n    //     case config.editMode: {\r\n    //         keySwitch.editMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    //     case config.symbolMode: {\r\n    //         keySwitch.symbolMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    // }\r\n\r\n    if (isPress) {\r\n        TuneKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\n\r\n\r\nconst PitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor((59 - i) / 12);\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default PitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #f5000065;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #ffffff1f;\r\n    ${props => !props.isStruct ? '' : css`background-color: #c08484b8;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #fbff00ba;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    value: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={state.quantize === props.value}\r\n            onClick={()=> {\r\n                state.quantize = props.value;\r\n                dispatcher.tune.setState(state);\r\n            }}\r\n        >\r\n            {props.value}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #fcff48, #cec073, #fcff48);\r\n    `}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, LenType } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { TuneKeySwitch } from \"../harmonize/input/tuneInput\";\r\nimport PitchList from \"./pitchList\";\r\nimport QuantizeSwitch from \"./quantizeSwitch\";\r\n\r\n\r\ntype XY = {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ntype Side = 'left' | 'right' | 'normal';\r\n\r\ntype NotesState = {\r\n    index: number;\r\n    side: Side;\r\n    isResize: boolean;\r\n}\r\n\r\nconst MelodyFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const tableRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const measureRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const pitchRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n    const [isPut, setPut] = useState<boolean>(false);\r\n    const [lock, setLock] = useState<XY>({ x: 0, y: 0 });\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [nextLeft, setNextLeft] = useState<number>(0);\r\n    const [beatWidth, setBeatWidth] = useState<number>(120);\r\n    const [barLength, setBarLength] = useState<number>(20);\r\n\r\n\r\n    const [notesState, setNotesState] = useState<NotesState>({ index: -1, side: 'normal', isResize: false });\r\n\r\n    // const [structIndexList, setStructIndexList] = useState<number[]>([0, 5, 7]);\r\n\r\n    const [curChord, setCurChord] = useState<ChordElement | null>(null);\r\n\r\n    const [mousePitchIndex, setMousePitchIndex] = useState<number>(0);\r\n    const [mouseMeasurePos, setMouseMeasurePos] = useState<number>(0);\r\n\r\n    const timelineLength = barLength * beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        if (isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const name = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, 0) + getSymbolFromKey(detail.symbolKey)?.name;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * detail.beatLen}\r\n                        isActive={element == curChord}\r\n                    >\r\n                        {name}\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        notesList.forEach((notes, i) => {\r\n            const isActive = state.focusIndex === i;\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={notes.posX}\r\n                    width={notes.length}\r\n                    side={notesState.side}\r\n                    isActive={i === notesState.index}\r\n                    isEdit={i === notesState.index && notesState.isResize}\r\n                    onClick={(e) => {\r\n                        if (!isActive) {\r\n                            state.focusIndex = i;\r\n                            dispatcher.tune.setState(state);\r\n                        } else {\r\n                            if (!notesState.isResize) {\r\n                                const rect = tableRef.current.getBoundingClientRect();\r\n                                const y = e.clientY + tableRef.current.scrollTop - rect.top;\r\n                                notesList[i].pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                                dispatcher.tune.setNotesList(notesList.slice());\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={notes.lenType}\r\n                    >\r\n                        {notes.posX}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            onKeyDown={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Header>\r\n                <QuantizeSwitch value={16} />\r\n                <QuantizeSwitch value={8} />\r\n                <QuantizeSwitch value={4} />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <_Chord ref={chordRef}>\r\n                        <_ChordWrap width={timelineLength}>\r\n                            {chordJsxList}\r\n                        </_ChordWrap>\r\n                    </_Chord>\r\n                    <_Measure ref={measureRef}>\r\n                        {measureJsxList}\r\n                        <_MousePos\r\n                            left={mouseMeasurePos * beatWidth * rate}\r\n                            width={beatWidth * rate}\r\n                        />\r\n                    </_Measure>\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <PitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n\r\n                        const scrollLeft = tableRef.current.scrollLeft;\r\n                        const scrollTop = tableRef.current.scrollTop;\r\n                        measureRef.current.scrollTo({ left: scrollLeft });\r\n                        chordRef.current.scrollTo({ left: scrollLeft });\r\n                        pitchRef.current.scrollTo({ top: scrollTop });\r\n                    }}\r\n                >\r\n                    <_Table\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const rect = tableRef.current.getBoundingClientRect();\r\n                            const x = e.clientX + tableRef.current.scrollLeft - rect.left;\r\n                            const y = e.clientY + tableRef.current.scrollTop - rect.top;\r\n\r\n                            if (notesState.index === -1) {\r\n\r\n                                setPut(true);\r\n                                setLock({\r\n                                    x: Math.floor(x / beatWidth / rate) * beatWidth * rate,\r\n                                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                                });\r\n\r\n                                const next = notesList.find(note => x < note.posX);\r\n                                let nextLeft = timelineLength;\r\n                                if (next != undefined) {\r\n                                    nextLeft = next.posX;\r\n                                }\r\n                                setNextLeft(nextLeft);\r\n                                setWidth(0);\r\n                            } else {\r\n                                if (notesState.side === 'right') {\r\n                                    const notes = notesList[notesState.index];\r\n                                    notesState.isResize = true;\r\n                                    setNotesState({ ...notesState });\r\n                                    setLock({\r\n                                        x: (Math.floor(x / beatWidth / rate) * beatWidth * rate) - notes.length,\r\n                                        y: 0\r\n                                    });\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const rect = tableRef.current.getBoundingClientRect();\r\n                            const x = e.clientX + tableRef.current.scrollLeft - rect.left;\r\n                            const y = e.clientY + tableRef.current.scrollTop - rect.top;\r\n\r\n                            if (!isPut && !notesState.isResize) {\r\n                                setMousePitchIndex(Math.floor(y / TUNE_PITCH_HEIGHT));\r\n                                setMouseMeasurePos(Math.floor(x / beatWidth / rate));\r\n\r\n                                let left = 0;\r\n                                const searchedChord = chordList.find((element) => {\r\n                                    if (element.type === 'chord') {\r\n                                        const detail = element.detail as DetailChord;\r\n                                        const width = detail.beatLen * beatWidth;\r\n                                        if (x >= left && x < left + width) {\r\n                                            return element;\r\n                                        }\r\n                                        left += width;\r\n                                    }\r\n                                });\r\n                                setCurChord(searchedChord == undefined ? null : searchedChord);\r\n\r\n                                notesState.index = -1;\r\n                                for (let i = 0; i < notesList.length; i++) {\r\n                                    const notes = notesList[i];\r\n                                    const left = notes.posX;\r\n                                    const right = notes.posX + notes.length;\r\n                                    if (x >= left && x <= right) {\r\n                                        notesState.index = i;\r\n\r\n                                        if (x < left + 10) notesState.side = 'left';\r\n                                        else if (x > right - 10) notesState.side = 'right';\r\n                                        else notesState.side = 'normal';\r\n                                    }\r\n                                };\r\n                                setNotesState({ ...notesState });\r\n\r\n\r\n                            } else {\r\n                                if (isPut) {\r\n                                    const normalX = (Math.floor(x / beatWidth / rate) + 1) * beatWidth * rate;\r\n                                    setWidth((normalX > nextLeft ? nextLeft : normalX) - lock.x);\r\n                                }\r\n\r\n                                if (notesState.isResize) {\r\n                                    const normalX = Math.floor(x / beatWidth / rate) * beatWidth * rate;\r\n                                    const notes = notesList[notesState.index];\r\n                                    notes.length = (normalX > nextLeft ? nextLeft : normalX) - lock.x;\r\n                                    dispatcher.tune.setNotesList(notesList.slice());\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseUp={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            if (isPut) {\r\n                                setPut(false);\r\n                                if (width > 0) {\r\n                                    notesList.push({\r\n                                        posX: lock.x,\r\n                                        pitchIndex: Math.floor(lock.y / TUNE_PITCH_HEIGHT),\r\n                                        length: width,\r\n                                        lenType: width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)\r\n\r\n                                    });\r\n                                    notesList.sort((a, b) => {\r\n                                        return a.posX === b.posX ? 0 : (\r\n                                            a.posX < b.posX ? -1 : 1\r\n                                        );\r\n                                    });\r\n                                    dispatcher.tune.setNotesList(notesList);\r\n                                }\r\n                            }\r\n                            if (notesState.isResize) {\r\n\r\n                                notesState.isResize = false;\r\n                                setNotesState({ ...notesState });\r\n                                const notes = notesList[notesState.index];\r\n                                notes.lenType = notes.length % beatWidth === 0 ? 4 : (notes.length % (beatWidth / 2) === 0 ? 8 : 16);\r\n                                dispatcher.tune.setNotesList(notesList.slice());\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_Table>\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f74646';\r\n            case 8: return '#467ef7';\r\n            case 16: return '#46f79f';\r\n        }\r\n    }};\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\nconst _Table = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #00000021;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #dcfaff87;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ff00006e;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : '' : ''}\r\n    box-sizing: border-box;\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    /* background-color: red; */\r\n    background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }});\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007f;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #6ac3ecc1;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n    text-align: center;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = useMemo(() => {\r\n        return () => {\r\n            state.isTune = !state.isTune;\r\n            dispatcher.score.setScoreState(state);\r\n        };\r\n    }, []);\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    {!state.isTune ?\r\n                        <HarmonizeTab /> :\r\n                        <MelodyFrame />\r\n                    }\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <div></div> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}